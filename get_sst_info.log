PROCESSED 23 .so (SST ELEMENT) FILES FOUND IN DIRECTORY(s) /home/shubham/sst_build/sst-elements/lib/sst-elements-library
================================================================================
ELEMENT 0 = CramSim ()
Num Components = 6
      Component 0: c_Controller
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = txngenLink (link to txn generator / txn dispatcher)
            PORT 1 = memLink (link to memory)
         NUM SUBCOMPONENT SLOTS = 5
            SUB COMPONENT SLOT 0 = AddrMapper (address hasher. Default: CramSim.c_AddressHasher) [SST::CramSim::c_AddressHasher]
            SUB COMPONENT SLOT 1 = TxnScheduler (Transaction Scheduler. Default: CramSim.c_TxnScheduler) [SST::CramSim::c_TxnScheduler]
            SUB COMPONENT SLOT 2 = TxnConverter (Transaction Converter. Default: CramSim.c_TxnConverter) [SST::CramSim::c_TxnConverter]
            SUB COMPONENT SLOT 3 = CmdScheduler (Command Scheduler. Default: CramSim.c_CmdScheduler) [SST::CramSim::c_CmdScheduler]
            SUB COMPONENT SLOT 4 = DeviceDriver (device driver. Default: CramSim.c_DeviceDriver) [SST::CramSim::c_DeviceDriver]
         NUM PARAMETERS = 2
            PARAMETER 0 = verbose (Output verbosity) [0]
            PARAMETER 1 = strControllerClockFrequency (Controller clock frequency, with units) [1GHz]
    c_Controller: Memory Controller
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_Controller.hpp
      Component 1: c_Dimm
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 1288
            STATISTIC 0 = actCmdsRecvd [Number of activate commands received] (activates) Enable level = 1
            STATISTIC 1 = readCmdsRecvd [Number of read commands received] (reads) Enable level = 1
            STATISTIC 2 = readACmdsRecvd [Number of read with autoprecharge commands received] (readAs) Enable level = 1
            STATISTIC 3 = writeCmdsRecvd [Number of write commands received] (writes) Enable level = 1
            STATISTIC 4 = writeACmdsRecvd [Number of write with autoprecharge commands received] (writeAs) Enable level = 1
            STATISTIC 5 = preCmdsRecvd [Number of precharge commands received] (precharges) Enable level = 1
            STATISTIC 6 = refCmdsRecvd [Number of refresh commands received] (refreshes) Enable level = 1
            STATISTIC 7 = totalRowHits [Number of total row hits] (hits) Enable level = 1
            STATISTIC 8 = bankACTsRecvd_0 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 9 = bankREADsRecvd_0 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 10 = bankWRITEsRecvd_0 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 11 = bankPREsRecvd_0 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 12 = bankRowHits_0 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 13 = bankACTsRecvd_1 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 14 = bankREADsRecvd_1 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 15 = bankWRITEsRecvd_1 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 16 = bankPREsRecvd_1 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 17 = bankRowHits_1 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 18 = bankACTsRecvd_2 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 19 = bankREADsRecvd_2 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 20 = bankWRITEsRecvd_2 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 21 = bankPREsRecvd_2 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 22 = bankRowHits_2 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 23 = bankACTsRecvd_3 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 24 = bankREADsRecvd_3 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 25 = bankWRITEsRecvd_3 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 26 = bankPREsRecvd_3 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 27 = bankRowHits_3 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 28 = bankACTsRecvd_4 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 29 = bankREADsRecvd_4 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 30 = bankWRITEsRecvd_4 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 31 = bankPREsRecvd_4 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 32 = bankRowHits_4 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 33 = bankACTsRecvd_5 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 34 = bankREADsRecvd_5 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 35 = bankWRITEsRecvd_5 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 36 = bankPREsRecvd_5 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 37 = bankRowHits_5 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 38 = bankACTsRecvd_6 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 39 = bankREADsRecvd_6 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 40 = bankWRITEsRecvd_6 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 41 = bankPREsRecvd_6 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 42 = bankRowHits_6 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 43 = bankACTsRecvd_7 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 44 = bankREADsRecvd_7 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 45 = bankWRITEsRecvd_7 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 46 = bankPREsRecvd_7 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 47 = bankRowHits_7 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 48 = bankACTsRecvd_8 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 49 = bankREADsRecvd_8 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 50 = bankWRITEsRecvd_8 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 51 = bankPREsRecvd_8 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 52 = bankRowHits_8 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 53 = bankACTsRecvd_9 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 54 = bankREADsRecvd_9 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 55 = bankWRITEsRecvd_9 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 56 = bankPREsRecvd_9 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 57 = bankRowHits_9 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 58 = bankACTsRecvd_10 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 59 = bankREADsRecvd_10 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 60 = bankWRITEsRecvd_10 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 61 = bankPREsRecvd_10 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 62 = bankRowHits_10 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 63 = bankACTsRecvd_11 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 64 = bankREADsRecvd_11 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 65 = bankWRITEsRecvd_11 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 66 = bankPREsRecvd_11 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 67 = bankRowHits_11 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 68 = bankACTsRecvd_12 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 69 = bankREADsRecvd_12 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 70 = bankWRITEsRecvd_12 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 71 = bankPREsRecvd_12 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 72 = bankRowHits_12 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 73 = bankACTsRecvd_13 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 74 = bankREADsRecvd_13 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 75 = bankWRITEsRecvd_13 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 76 = bankPREsRecvd_13 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 77 = bankRowHits_13 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 78 = bankACTsRecvd_14 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 79 = bankREADsRecvd_14 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 80 = bankWRITEsRecvd_14 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 81 = bankPREsRecvd_14 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 82 = bankRowHits_14 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 83 = bankACTsRecvd_15 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 84 = bankREADsRecvd_15 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 85 = bankWRITEsRecvd_15 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 86 = bankPREsRecvd_15 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 87 = bankRowHits_15 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 88 = bankACTsRecvd_16 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 89 = bankREADsRecvd_16 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 90 = bankWRITEsRecvd_16 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 91 = bankPREsRecvd_16 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 92 = bankRowHits_16 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 93 = bankACTsRecvd_17 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 94 = bankREADsRecvd_17 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 95 = bankWRITEsRecvd_17 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 96 = bankPREsRecvd_17 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 97 = bankRowHits_17 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 98 = bankACTsRecvd_18 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 99 = bankREADsRecvd_18 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 100 = bankWRITEsRecvd_18 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 101 = bankPREsRecvd_18 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 102 = bankRowHits_18 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 103 = bankACTsRecvd_19 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 104 = bankREADsRecvd_19 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 105 = bankWRITEsRecvd_19 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 106 = bankPREsRecvd_19 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 107 = bankRowHits_19 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 108 = bankACTsRecvd_20 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 109 = bankREADsRecvd_20 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 110 = bankWRITEsRecvd_20 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 111 = bankPREsRecvd_20 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 112 = bankRowHits_20 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 113 = bankACTsRecvd_21 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 114 = bankREADsRecvd_21 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 115 = bankWRITEsRecvd_21 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 116 = bankPREsRecvd_21 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 117 = bankRowHits_21 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 118 = bankACTsRecvd_22 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 119 = bankREADsRecvd_22 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 120 = bankWRITEsRecvd_22 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 121 = bankPREsRecvd_22 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 122 = bankRowHits_22 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 123 = bankACTsRecvd_23 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 124 = bankREADsRecvd_23 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 125 = bankWRITEsRecvd_23 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 126 = bankPREsRecvd_23 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 127 = bankRowHits_23 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 128 = bankACTsRecvd_24 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 129 = bankREADsRecvd_24 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 130 = bankWRITEsRecvd_24 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 131 = bankPREsRecvd_24 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 132 = bankRowHits_24 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 133 = bankACTsRecvd_25 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 134 = bankREADsRecvd_25 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 135 = bankWRITEsRecvd_25 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 136 = bankPREsRecvd_25 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 137 = bankRowHits_25 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 138 = bankACTsRecvd_26 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 139 = bankREADsRecvd_26 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 140 = bankWRITEsRecvd_26 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 141 = bankPREsRecvd_26 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 142 = bankRowHits_26 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 143 = bankACTsRecvd_27 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 144 = bankREADsRecvd_27 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 145 = bankWRITEsRecvd_27 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 146 = bankPREsRecvd_27 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 147 = bankRowHits_27 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 148 = bankACTsRecvd_28 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 149 = bankREADsRecvd_28 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 150 = bankWRITEsRecvd_28 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 151 = bankPREsRecvd_28 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 152 = bankRowHits_28 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 153 = bankACTsRecvd_29 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 154 = bankREADsRecvd_29 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 155 = bankWRITEsRecvd_29 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 156 = bankPREsRecvd_29 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 157 = bankRowHits_29 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 158 = bankACTsRecvd_30 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 159 = bankREADsRecvd_30 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 160 = bankWRITEsRecvd_30 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 161 = bankPREsRecvd_30 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 162 = bankRowHits_30 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 163 = bankACTsRecvd_31 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 164 = bankREADsRecvd_31 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 165 = bankWRITEsRecvd_31 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 166 = bankPREsRecvd_31 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 167 = bankRowHits_31 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 168 = bankACTsRecvd_32 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 169 = bankREADsRecvd_32 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 170 = bankWRITEsRecvd_32 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 171 = bankPREsRecvd_32 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 172 = bankRowHits_32 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 173 = bankACTsRecvd_33 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 174 = bankREADsRecvd_33 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 175 = bankWRITEsRecvd_33 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 176 = bankPREsRecvd_33 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 177 = bankRowHits_33 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 178 = bankACTsRecvd_34 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 179 = bankREADsRecvd_34 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 180 = bankWRITEsRecvd_34 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 181 = bankPREsRecvd_34 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 182 = bankRowHits_34 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 183 = bankACTsRecvd_35 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 184 = bankREADsRecvd_35 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 185 = bankWRITEsRecvd_35 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 186 = bankPREsRecvd_35 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 187 = bankRowHits_35 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 188 = bankACTsRecvd_36 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 189 = bankREADsRecvd_36 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 190 = bankWRITEsRecvd_36 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 191 = bankPREsRecvd_36 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 192 = bankRowHits_36 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 193 = bankACTsRecvd_37 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 194 = bankREADsRecvd_37 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 195 = bankWRITEsRecvd_37 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 196 = bankPREsRecvd_37 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 197 = bankRowHits_37 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 198 = bankACTsRecvd_38 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 199 = bankREADsRecvd_38 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 200 = bankWRITEsRecvd_38 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 201 = bankPREsRecvd_38 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 202 = bankRowHits_38 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 203 = bankACTsRecvd_39 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 204 = bankREADsRecvd_39 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 205 = bankWRITEsRecvd_39 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 206 = bankPREsRecvd_39 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 207 = bankRowHits_39 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 208 = bankACTsRecvd_40 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 209 = bankREADsRecvd_40 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 210 = bankWRITEsRecvd_40 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 211 = bankPREsRecvd_40 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 212 = bankRowHits_40 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 213 = bankACTsRecvd_41 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 214 = bankREADsRecvd_41 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 215 = bankWRITEsRecvd_41 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 216 = bankPREsRecvd_41 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 217 = bankRowHits_41 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 218 = bankACTsRecvd_42 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 219 = bankREADsRecvd_42 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 220 = bankWRITEsRecvd_42 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 221 = bankPREsRecvd_42 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 222 = bankRowHits_42 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 223 = bankACTsRecvd_43 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 224 = bankREADsRecvd_43 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 225 = bankWRITEsRecvd_43 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 226 = bankPREsRecvd_43 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 227 = bankRowHits_43 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 228 = bankACTsRecvd_44 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 229 = bankREADsRecvd_44 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 230 = bankWRITEsRecvd_44 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 231 = bankPREsRecvd_44 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 232 = bankRowHits_44 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 233 = bankACTsRecvd_45 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 234 = bankREADsRecvd_45 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 235 = bankWRITEsRecvd_45 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 236 = bankPREsRecvd_45 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 237 = bankRowHits_45 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 238 = bankACTsRecvd_46 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 239 = bankREADsRecvd_46 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 240 = bankWRITEsRecvd_46 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 241 = bankPREsRecvd_46 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 242 = bankRowHits_46 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 243 = bankACTsRecvd_47 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 244 = bankREADsRecvd_47 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 245 = bankWRITEsRecvd_47 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 246 = bankPREsRecvd_47 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 247 = bankRowHits_47 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 248 = bankACTsRecvd_48 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 249 = bankREADsRecvd_48 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 250 = bankWRITEsRecvd_48 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 251 = bankPREsRecvd_48 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 252 = bankRowHits_48 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 253 = bankACTsRecvd_49 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 254 = bankREADsRecvd_49 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 255 = bankWRITEsRecvd_49 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 256 = bankPREsRecvd_49 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 257 = bankRowHits_49 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 258 = bankACTsRecvd_50 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 259 = bankREADsRecvd_50 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 260 = bankWRITEsRecvd_50 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 261 = bankPREsRecvd_50 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 262 = bankRowHits_50 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 263 = bankACTsRecvd_51 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 264 = bankREADsRecvd_51 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 265 = bankWRITEsRecvd_51 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 266 = bankPREsRecvd_51 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 267 = bankRowHits_51 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 268 = bankACTsRecvd_52 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 269 = bankREADsRecvd_52 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 270 = bankWRITEsRecvd_52 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 271 = bankPREsRecvd_52 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 272 = bankRowHits_52 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 273 = bankACTsRecvd_53 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 274 = bankREADsRecvd_53 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 275 = bankWRITEsRecvd_53 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 276 = bankPREsRecvd_53 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 277 = bankRowHits_53 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 278 = bankACTsRecvd_54 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 279 = bankREADsRecvd_54 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 280 = bankWRITEsRecvd_54 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 281 = bankPREsRecvd_54 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 282 = bankRowHits_54 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 283 = bankACTsRecvd_55 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 284 = bankREADsRecvd_55 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 285 = bankWRITEsRecvd_55 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 286 = bankPREsRecvd_55 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 287 = bankRowHits_55 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 288 = bankACTsRecvd_56 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 289 = bankREADsRecvd_56 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 290 = bankWRITEsRecvd_56 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 291 = bankPREsRecvd_56 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 292 = bankRowHits_56 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 293 = bankACTsRecvd_57 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 294 = bankREADsRecvd_57 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 295 = bankWRITEsRecvd_57 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 296 = bankPREsRecvd_57 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 297 = bankRowHits_57 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 298 = bankACTsRecvd_58 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 299 = bankREADsRecvd_58 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 300 = bankWRITEsRecvd_58 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 301 = bankPREsRecvd_58 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 302 = bankRowHits_58 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 303 = bankACTsRecvd_59 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 304 = bankREADsRecvd_59 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 305 = bankWRITEsRecvd_59 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 306 = bankPREsRecvd_59 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 307 = bankRowHits_59 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 308 = bankACTsRecvd_60 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 309 = bankREADsRecvd_60 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 310 = bankWRITEsRecvd_60 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 311 = bankPREsRecvd_60 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 312 = bankRowHits_60 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 313 = bankACTsRecvd_61 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 314 = bankREADsRecvd_61 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 315 = bankWRITEsRecvd_61 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 316 = bankPREsRecvd_61 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 317 = bankRowHits_61 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 318 = bankACTsRecvd_62 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 319 = bankREADsRecvd_62 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 320 = bankWRITEsRecvd_62 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 321 = bankPREsRecvd_62 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 322 = bankRowHits_62 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 323 = bankACTsRecvd_63 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 324 = bankREADsRecvd_63 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 325 = bankWRITEsRecvd_63 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 326 = bankPREsRecvd_63 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 327 = bankRowHits_63 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 328 = bankACTsRecvd_64 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 329 = bankREADsRecvd_64 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 330 = bankWRITEsRecvd_64 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 331 = bankPREsRecvd_64 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 332 = bankRowHits_64 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 333 = bankACTsRecvd_65 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 334 = bankREADsRecvd_65 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 335 = bankWRITEsRecvd_65 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 336 = bankPREsRecvd_65 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 337 = bankRowHits_65 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 338 = bankACTsRecvd_66 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 339 = bankREADsRecvd_66 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 340 = bankWRITEsRecvd_66 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 341 = bankPREsRecvd_66 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 342 = bankRowHits_66 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 343 = bankACTsRecvd_67 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 344 = bankREADsRecvd_67 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 345 = bankWRITEsRecvd_67 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 346 = bankPREsRecvd_67 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 347 = bankRowHits_67 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 348 = bankACTsRecvd_68 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 349 = bankREADsRecvd_68 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 350 = bankWRITEsRecvd_68 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 351 = bankPREsRecvd_68 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 352 = bankRowHits_68 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 353 = bankACTsRecvd_69 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 354 = bankREADsRecvd_69 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 355 = bankWRITEsRecvd_69 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 356 = bankPREsRecvd_69 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 357 = bankRowHits_69 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 358 = bankACTsRecvd_70 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 359 = bankREADsRecvd_70 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 360 = bankWRITEsRecvd_70 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 361 = bankPREsRecvd_70 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 362 = bankRowHits_70 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 363 = bankACTsRecvd_71 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 364 = bankREADsRecvd_71 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 365 = bankWRITEsRecvd_71 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 366 = bankPREsRecvd_71 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 367 = bankRowHits_71 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 368 = bankACTsRecvd_72 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 369 = bankREADsRecvd_72 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 370 = bankWRITEsRecvd_72 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 371 = bankPREsRecvd_72 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 372 = bankRowHits_72 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 373 = bankACTsRecvd_73 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 374 = bankREADsRecvd_73 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 375 = bankWRITEsRecvd_73 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 376 = bankPREsRecvd_73 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 377 = bankRowHits_73 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 378 = bankACTsRecvd_74 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 379 = bankREADsRecvd_74 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 380 = bankWRITEsRecvd_74 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 381 = bankPREsRecvd_74 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 382 = bankRowHits_74 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 383 = bankACTsRecvd_75 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 384 = bankREADsRecvd_75 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 385 = bankWRITEsRecvd_75 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 386 = bankPREsRecvd_75 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 387 = bankRowHits_75 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 388 = bankACTsRecvd_76 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 389 = bankREADsRecvd_76 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 390 = bankWRITEsRecvd_76 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 391 = bankPREsRecvd_76 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 392 = bankRowHits_76 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 393 = bankACTsRecvd_77 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 394 = bankREADsRecvd_77 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 395 = bankWRITEsRecvd_77 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 396 = bankPREsRecvd_77 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 397 = bankRowHits_77 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 398 = bankACTsRecvd_78 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 399 = bankREADsRecvd_78 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 400 = bankWRITEsRecvd_78 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 401 = bankPREsRecvd_78 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 402 = bankRowHits_78 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 403 = bankACTsRecvd_79 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 404 = bankREADsRecvd_79 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 405 = bankWRITEsRecvd_79 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 406 = bankPREsRecvd_79 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 407 = bankRowHits_79 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 408 = bankACTsRecvd_80 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 409 = bankREADsRecvd_80 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 410 = bankWRITEsRecvd_80 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 411 = bankPREsRecvd_80 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 412 = bankRowHits_80 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 413 = bankACTsRecvd_81 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 414 = bankREADsRecvd_81 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 415 = bankWRITEsRecvd_81 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 416 = bankPREsRecvd_81 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 417 = bankRowHits_81 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 418 = bankACTsRecvd_82 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 419 = bankREADsRecvd_82 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 420 = bankWRITEsRecvd_82 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 421 = bankPREsRecvd_82 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 422 = bankRowHits_82 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 423 = bankACTsRecvd_83 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 424 = bankREADsRecvd_83 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 425 = bankWRITEsRecvd_83 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 426 = bankPREsRecvd_83 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 427 = bankRowHits_83 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 428 = bankACTsRecvd_84 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 429 = bankREADsRecvd_84 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 430 = bankWRITEsRecvd_84 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 431 = bankPREsRecvd_84 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 432 = bankRowHits_84 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 433 = bankACTsRecvd_85 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 434 = bankREADsRecvd_85 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 435 = bankWRITEsRecvd_85 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 436 = bankPREsRecvd_85 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 437 = bankRowHits_85 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 438 = bankACTsRecvd_86 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 439 = bankREADsRecvd_86 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 440 = bankWRITEsRecvd_86 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 441 = bankPREsRecvd_86 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 442 = bankRowHits_86 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 443 = bankACTsRecvd_87 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 444 = bankREADsRecvd_87 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 445 = bankWRITEsRecvd_87 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 446 = bankPREsRecvd_87 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 447 = bankRowHits_87 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 448 = bankACTsRecvd_88 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 449 = bankREADsRecvd_88 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 450 = bankWRITEsRecvd_88 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 451 = bankPREsRecvd_88 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 452 = bankRowHits_88 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 453 = bankACTsRecvd_89 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 454 = bankREADsRecvd_89 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 455 = bankWRITEsRecvd_89 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 456 = bankPREsRecvd_89 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 457 = bankRowHits_89 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 458 = bankACTsRecvd_90 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 459 = bankREADsRecvd_90 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 460 = bankWRITEsRecvd_90 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 461 = bankPREsRecvd_90 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 462 = bankRowHits_90 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 463 = bankACTsRecvd_91 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 464 = bankREADsRecvd_91 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 465 = bankWRITEsRecvd_91 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 466 = bankPREsRecvd_91 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 467 = bankRowHits_91 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 468 = bankACTsRecvd_92 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 469 = bankREADsRecvd_92 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 470 = bankWRITEsRecvd_92 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 471 = bankPREsRecvd_92 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 472 = bankRowHits_92 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 473 = bankACTsRecvd_93 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 474 = bankREADsRecvd_93 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 475 = bankWRITEsRecvd_93 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 476 = bankPREsRecvd_93 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 477 = bankRowHits_93 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 478 = bankACTsRecvd_94 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 479 = bankREADsRecvd_94 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 480 = bankWRITEsRecvd_94 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 481 = bankPREsRecvd_94 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 482 = bankRowHits_94 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 483 = bankACTsRecvd_95 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 484 = bankREADsRecvd_95 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 485 = bankWRITEsRecvd_95 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 486 = bankPREsRecvd_95 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 487 = bankRowHits_95 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 488 = bankACTsRecvd_96 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 489 = bankREADsRecvd_96 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 490 = bankWRITEsRecvd_96 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 491 = bankPREsRecvd_96 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 492 = bankRowHits_96 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 493 = bankACTsRecvd_97 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 494 = bankREADsRecvd_97 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 495 = bankWRITEsRecvd_97 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 496 = bankPREsRecvd_97 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 497 = bankRowHits_97 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 498 = bankACTsRecvd_98 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 499 = bankREADsRecvd_98 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 500 = bankWRITEsRecvd_98 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 501 = bankPREsRecvd_98 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 502 = bankRowHits_98 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 503 = bankACTsRecvd_99 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 504 = bankREADsRecvd_99 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 505 = bankWRITEsRecvd_99 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 506 = bankPREsRecvd_99 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 507 = bankRowHits_99 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 508 = bankACTsRecvd_100 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 509 = bankREADsRecvd_100 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 510 = bankWRITEsRecvd_100 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 511 = bankPREsRecvd_100 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 512 = bankRowHits_100 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 513 = bankACTsRecvd_101 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 514 = bankREADsRecvd_101 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 515 = bankWRITEsRecvd_101 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 516 = bankPREsRecvd_101 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 517 = bankRowHits_101 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 518 = bankACTsRecvd_102 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 519 = bankREADsRecvd_102 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 520 = bankWRITEsRecvd_102 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 521 = bankPREsRecvd_102 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 522 = bankRowHits_102 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 523 = bankACTsRecvd_103 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 524 = bankREADsRecvd_103 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 525 = bankWRITEsRecvd_103 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 526 = bankPREsRecvd_103 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 527 = bankRowHits_103 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 528 = bankACTsRecvd_104 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 529 = bankREADsRecvd_104 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 530 = bankWRITEsRecvd_104 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 531 = bankPREsRecvd_104 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 532 = bankRowHits_104 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 533 = bankACTsRecvd_105 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 534 = bankREADsRecvd_105 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 535 = bankWRITEsRecvd_105 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 536 = bankPREsRecvd_105 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 537 = bankRowHits_105 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 538 = bankACTsRecvd_106 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 539 = bankREADsRecvd_106 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 540 = bankWRITEsRecvd_106 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 541 = bankPREsRecvd_106 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 542 = bankRowHits_106 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 543 = bankACTsRecvd_107 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 544 = bankREADsRecvd_107 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 545 = bankWRITEsRecvd_107 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 546 = bankPREsRecvd_107 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 547 = bankRowHits_107 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 548 = bankACTsRecvd_108 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 549 = bankREADsRecvd_108 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 550 = bankWRITEsRecvd_108 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 551 = bankPREsRecvd_108 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 552 = bankRowHits_108 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 553 = bankACTsRecvd_109 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 554 = bankREADsRecvd_109 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 555 = bankWRITEsRecvd_109 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 556 = bankPREsRecvd_109 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 557 = bankRowHits_109 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 558 = bankACTsRecvd_110 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 559 = bankREADsRecvd_110 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 560 = bankWRITEsRecvd_110 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 561 = bankPREsRecvd_110 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 562 = bankRowHits_110 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 563 = bankACTsRecvd_111 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 564 = bankREADsRecvd_111 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 565 = bankWRITEsRecvd_111 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 566 = bankPREsRecvd_111 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 567 = bankRowHits_111 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 568 = bankACTsRecvd_112 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 569 = bankREADsRecvd_112 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 570 = bankWRITEsRecvd_112 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 571 = bankPREsRecvd_112 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 572 = bankRowHits_112 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 573 = bankACTsRecvd_113 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 574 = bankREADsRecvd_113 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 575 = bankWRITEsRecvd_113 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 576 = bankPREsRecvd_113 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 577 = bankRowHits_113 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 578 = bankACTsRecvd_114 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 579 = bankREADsRecvd_114 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 580 = bankWRITEsRecvd_114 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 581 = bankPREsRecvd_114 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 582 = bankRowHits_114 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 583 = bankACTsRecvd_115 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 584 = bankREADsRecvd_115 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 585 = bankWRITEsRecvd_115 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 586 = bankPREsRecvd_115 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 587 = bankRowHits_115 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 588 = bankACTsRecvd_116 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 589 = bankREADsRecvd_116 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 590 = bankWRITEsRecvd_116 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 591 = bankPREsRecvd_116 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 592 = bankRowHits_116 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 593 = bankACTsRecvd_117 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 594 = bankREADsRecvd_117 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 595 = bankWRITEsRecvd_117 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 596 = bankPREsRecvd_117 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 597 = bankRowHits_117 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 598 = bankACTsRecvd_118 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 599 = bankREADsRecvd_118 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 600 = bankWRITEsRecvd_118 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 601 = bankPREsRecvd_118 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 602 = bankRowHits_118 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 603 = bankACTsRecvd_119 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 604 = bankREADsRecvd_119 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 605 = bankWRITEsRecvd_119 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 606 = bankPREsRecvd_119 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 607 = bankRowHits_119 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 608 = bankACTsRecvd_120 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 609 = bankREADsRecvd_120 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 610 = bankWRITEsRecvd_120 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 611 = bankPREsRecvd_120 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 612 = bankRowHits_120 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 613 = bankACTsRecvd_121 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 614 = bankREADsRecvd_121 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 615 = bankWRITEsRecvd_121 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 616 = bankPREsRecvd_121 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 617 = bankRowHits_121 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 618 = bankACTsRecvd_122 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 619 = bankREADsRecvd_122 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 620 = bankWRITEsRecvd_122 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 621 = bankPREsRecvd_122 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 622 = bankRowHits_122 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 623 = bankACTsRecvd_123 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 624 = bankREADsRecvd_123 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 625 = bankWRITEsRecvd_123 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 626 = bankPREsRecvd_123 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 627 = bankRowHits_123 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 628 = bankACTsRecvd_124 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 629 = bankREADsRecvd_124 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 630 = bankWRITEsRecvd_124 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 631 = bankPREsRecvd_124 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 632 = bankRowHits_124 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 633 = bankACTsRecvd_125 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 634 = bankREADsRecvd_125 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 635 = bankWRITEsRecvd_125 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 636 = bankPREsRecvd_125 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 637 = bankRowHits_125 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 638 = bankACTsRecvd_126 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 639 = bankREADsRecvd_126 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 640 = bankWRITEsRecvd_126 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 641 = bankPREsRecvd_126 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 642 = bankRowHits_126 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 643 = bankACTsRecvd_127 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 644 = bankREADsRecvd_127 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 645 = bankWRITEsRecvd_127 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 646 = bankPREsRecvd_127 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 647 = bankRowHits_127 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 648 = bankACTsRecvd_128 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 649 = bankREADsRecvd_128 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 650 = bankWRITEsRecvd_128 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 651 = bankPREsRecvd_128 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 652 = bankRowHits_128 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 653 = bankACTsRecvd_129 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 654 = bankREADsRecvd_129 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 655 = bankWRITEsRecvd_129 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 656 = bankPREsRecvd_129 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 657 = bankRowHits_129 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 658 = bankACTsRecvd_130 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 659 = bankREADsRecvd_130 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 660 = bankWRITEsRecvd_130 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 661 = bankPREsRecvd_130 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 662 = bankRowHits_130 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 663 = bankACTsRecvd_131 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 664 = bankREADsRecvd_131 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 665 = bankWRITEsRecvd_131 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 666 = bankPREsRecvd_131 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 667 = bankRowHits_131 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 668 = bankACTsRecvd_132 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 669 = bankREADsRecvd_132 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 670 = bankWRITEsRecvd_132 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 671 = bankPREsRecvd_132 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 672 = bankRowHits_132 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 673 = bankACTsRecvd_133 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 674 = bankREADsRecvd_133 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 675 = bankWRITEsRecvd_133 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 676 = bankPREsRecvd_133 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 677 = bankRowHits_133 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 678 = bankACTsRecvd_134 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 679 = bankREADsRecvd_134 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 680 = bankWRITEsRecvd_134 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 681 = bankPREsRecvd_134 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 682 = bankRowHits_134 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 683 = bankACTsRecvd_135 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 684 = bankREADsRecvd_135 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 685 = bankWRITEsRecvd_135 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 686 = bankPREsRecvd_135 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 687 = bankRowHits_135 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 688 = bankACTsRecvd_136 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 689 = bankREADsRecvd_136 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 690 = bankWRITEsRecvd_136 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 691 = bankPREsRecvd_136 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 692 = bankRowHits_136 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 693 = bankACTsRecvd_137 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 694 = bankREADsRecvd_137 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 695 = bankWRITEsRecvd_137 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 696 = bankPREsRecvd_137 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 697 = bankRowHits_137 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 698 = bankACTsRecvd_138 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 699 = bankREADsRecvd_138 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 700 = bankWRITEsRecvd_138 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 701 = bankPREsRecvd_138 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 702 = bankRowHits_138 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 703 = bankACTsRecvd_139 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 704 = bankREADsRecvd_139 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 705 = bankWRITEsRecvd_139 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 706 = bankPREsRecvd_139 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 707 = bankRowHits_139 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 708 = bankACTsRecvd_140 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 709 = bankREADsRecvd_140 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 710 = bankWRITEsRecvd_140 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 711 = bankPREsRecvd_140 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 712 = bankRowHits_140 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 713 = bankACTsRecvd_141 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 714 = bankREADsRecvd_141 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 715 = bankWRITEsRecvd_141 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 716 = bankPREsRecvd_141 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 717 = bankRowHits_141 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 718 = bankACTsRecvd_142 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 719 = bankREADsRecvd_142 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 720 = bankWRITEsRecvd_142 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 721 = bankPREsRecvd_142 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 722 = bankRowHits_142 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 723 = bankACTsRecvd_143 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 724 = bankREADsRecvd_143 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 725 = bankWRITEsRecvd_143 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 726 = bankPREsRecvd_143 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 727 = bankRowHits_143 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 728 = bankACTsRecvd_144 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 729 = bankREADsRecvd_144 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 730 = bankWRITEsRecvd_144 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 731 = bankPREsRecvd_144 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 732 = bankRowHits_144 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 733 = bankACTsRecvd_145 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 734 = bankREADsRecvd_145 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 735 = bankWRITEsRecvd_145 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 736 = bankPREsRecvd_145 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 737 = bankRowHits_145 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 738 = bankACTsRecvd_146 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 739 = bankREADsRecvd_146 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 740 = bankWRITEsRecvd_146 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 741 = bankPREsRecvd_146 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 742 = bankRowHits_146 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 743 = bankACTsRecvd_147 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 744 = bankREADsRecvd_147 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 745 = bankWRITEsRecvd_147 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 746 = bankPREsRecvd_147 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 747 = bankRowHits_147 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 748 = bankACTsRecvd_148 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 749 = bankREADsRecvd_148 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 750 = bankWRITEsRecvd_148 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 751 = bankPREsRecvd_148 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 752 = bankRowHits_148 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 753 = bankACTsRecvd_149 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 754 = bankREADsRecvd_149 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 755 = bankWRITEsRecvd_149 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 756 = bankPREsRecvd_149 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 757 = bankRowHits_149 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 758 = bankACTsRecvd_150 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 759 = bankREADsRecvd_150 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 760 = bankWRITEsRecvd_150 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 761 = bankPREsRecvd_150 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 762 = bankRowHits_150 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 763 = bankACTsRecvd_151 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 764 = bankREADsRecvd_151 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 765 = bankWRITEsRecvd_151 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 766 = bankPREsRecvd_151 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 767 = bankRowHits_151 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 768 = bankACTsRecvd_152 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 769 = bankREADsRecvd_152 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 770 = bankWRITEsRecvd_152 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 771 = bankPREsRecvd_152 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 772 = bankRowHits_152 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 773 = bankACTsRecvd_153 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 774 = bankREADsRecvd_153 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 775 = bankWRITEsRecvd_153 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 776 = bankPREsRecvd_153 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 777 = bankRowHits_153 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 778 = bankACTsRecvd_154 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 779 = bankREADsRecvd_154 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 780 = bankWRITEsRecvd_154 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 781 = bankPREsRecvd_154 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 782 = bankRowHits_154 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 783 = bankACTsRecvd_155 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 784 = bankREADsRecvd_155 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 785 = bankWRITEsRecvd_155 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 786 = bankPREsRecvd_155 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 787 = bankRowHits_155 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 788 = bankACTsRecvd_156 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 789 = bankREADsRecvd_156 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 790 = bankWRITEsRecvd_156 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 791 = bankPREsRecvd_156 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 792 = bankRowHits_156 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 793 = bankACTsRecvd_157 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 794 = bankREADsRecvd_157 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 795 = bankWRITEsRecvd_157 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 796 = bankPREsRecvd_157 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 797 = bankRowHits_157 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 798 = bankACTsRecvd_158 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 799 = bankREADsRecvd_158 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 800 = bankWRITEsRecvd_158 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 801 = bankPREsRecvd_158 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 802 = bankRowHits_158 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 803 = bankACTsRecvd_159 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 804 = bankREADsRecvd_159 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 805 = bankWRITEsRecvd_159 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 806 = bankPREsRecvd_159 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 807 = bankRowHits_159 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 808 = bankACTsRecvd_160 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 809 = bankREADsRecvd_160 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 810 = bankWRITEsRecvd_160 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 811 = bankPREsRecvd_160 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 812 = bankRowHits_160 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 813 = bankACTsRecvd_161 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 814 = bankREADsRecvd_161 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 815 = bankWRITEsRecvd_161 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 816 = bankPREsRecvd_161 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 817 = bankRowHits_161 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 818 = bankACTsRecvd_162 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 819 = bankREADsRecvd_162 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 820 = bankWRITEsRecvd_162 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 821 = bankPREsRecvd_162 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 822 = bankRowHits_162 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 823 = bankACTsRecvd_163 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 824 = bankREADsRecvd_163 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 825 = bankWRITEsRecvd_163 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 826 = bankPREsRecvd_163 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 827 = bankRowHits_163 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 828 = bankACTsRecvd_164 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 829 = bankREADsRecvd_164 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 830 = bankWRITEsRecvd_164 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 831 = bankPREsRecvd_164 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 832 = bankRowHits_164 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 833 = bankACTsRecvd_165 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 834 = bankREADsRecvd_165 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 835 = bankWRITEsRecvd_165 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 836 = bankPREsRecvd_165 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 837 = bankRowHits_165 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 838 = bankACTsRecvd_166 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 839 = bankREADsRecvd_166 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 840 = bankWRITEsRecvd_166 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 841 = bankPREsRecvd_166 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 842 = bankRowHits_166 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 843 = bankACTsRecvd_167 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 844 = bankREADsRecvd_167 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 845 = bankWRITEsRecvd_167 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 846 = bankPREsRecvd_167 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 847 = bankRowHits_167 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 848 = bankACTsRecvd_168 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 849 = bankREADsRecvd_168 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 850 = bankWRITEsRecvd_168 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 851 = bankPREsRecvd_168 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 852 = bankRowHits_168 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 853 = bankACTsRecvd_169 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 854 = bankREADsRecvd_169 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 855 = bankWRITEsRecvd_169 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 856 = bankPREsRecvd_169 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 857 = bankRowHits_169 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 858 = bankACTsRecvd_170 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 859 = bankREADsRecvd_170 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 860 = bankWRITEsRecvd_170 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 861 = bankPREsRecvd_170 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 862 = bankRowHits_170 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 863 = bankACTsRecvd_171 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 864 = bankREADsRecvd_171 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 865 = bankWRITEsRecvd_171 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 866 = bankPREsRecvd_171 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 867 = bankRowHits_171 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 868 = bankACTsRecvd_172 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 869 = bankREADsRecvd_172 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 870 = bankWRITEsRecvd_172 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 871 = bankPREsRecvd_172 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 872 = bankRowHits_172 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 873 = bankACTsRecvd_173 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 874 = bankREADsRecvd_173 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 875 = bankWRITEsRecvd_173 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 876 = bankPREsRecvd_173 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 877 = bankRowHits_173 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 878 = bankACTsRecvd_174 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 879 = bankREADsRecvd_174 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 880 = bankWRITEsRecvd_174 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 881 = bankPREsRecvd_174 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 882 = bankRowHits_174 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 883 = bankACTsRecvd_175 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 884 = bankREADsRecvd_175 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 885 = bankWRITEsRecvd_175 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 886 = bankPREsRecvd_175 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 887 = bankRowHits_175 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 888 = bankACTsRecvd_176 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 889 = bankREADsRecvd_176 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 890 = bankWRITEsRecvd_176 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 891 = bankPREsRecvd_176 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 892 = bankRowHits_176 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 893 = bankACTsRecvd_177 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 894 = bankREADsRecvd_177 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 895 = bankWRITEsRecvd_177 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 896 = bankPREsRecvd_177 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 897 = bankRowHits_177 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 898 = bankACTsRecvd_178 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 899 = bankREADsRecvd_178 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 900 = bankWRITEsRecvd_178 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 901 = bankPREsRecvd_178 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 902 = bankRowHits_178 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 903 = bankACTsRecvd_179 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 904 = bankREADsRecvd_179 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 905 = bankWRITEsRecvd_179 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 906 = bankPREsRecvd_179 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 907 = bankRowHits_179 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 908 = bankACTsRecvd_180 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 909 = bankREADsRecvd_180 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 910 = bankWRITEsRecvd_180 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 911 = bankPREsRecvd_180 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 912 = bankRowHits_180 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 913 = bankACTsRecvd_181 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 914 = bankREADsRecvd_181 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 915 = bankWRITEsRecvd_181 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 916 = bankPREsRecvd_181 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 917 = bankRowHits_181 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 918 = bankACTsRecvd_182 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 919 = bankREADsRecvd_182 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 920 = bankWRITEsRecvd_182 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 921 = bankPREsRecvd_182 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 922 = bankRowHits_182 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 923 = bankACTsRecvd_183 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 924 = bankREADsRecvd_183 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 925 = bankWRITEsRecvd_183 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 926 = bankPREsRecvd_183 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 927 = bankRowHits_183 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 928 = bankACTsRecvd_184 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 929 = bankREADsRecvd_184 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 930 = bankWRITEsRecvd_184 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 931 = bankPREsRecvd_184 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 932 = bankRowHits_184 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 933 = bankACTsRecvd_185 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 934 = bankREADsRecvd_185 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 935 = bankWRITEsRecvd_185 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 936 = bankPREsRecvd_185 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 937 = bankRowHits_185 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 938 = bankACTsRecvd_186 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 939 = bankREADsRecvd_186 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 940 = bankWRITEsRecvd_186 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 941 = bankPREsRecvd_186 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 942 = bankRowHits_186 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 943 = bankACTsRecvd_187 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 944 = bankREADsRecvd_187 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 945 = bankWRITEsRecvd_187 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 946 = bankPREsRecvd_187 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 947 = bankRowHits_187 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 948 = bankACTsRecvd_188 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 949 = bankREADsRecvd_188 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 950 = bankWRITEsRecvd_188 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 951 = bankPREsRecvd_188 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 952 = bankRowHits_188 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 953 = bankACTsRecvd_189 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 954 = bankREADsRecvd_189 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 955 = bankWRITEsRecvd_189 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 956 = bankPREsRecvd_189 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 957 = bankRowHits_189 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 958 = bankACTsRecvd_190 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 959 = bankREADsRecvd_190 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 960 = bankWRITEsRecvd_190 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 961 = bankPREsRecvd_190 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 962 = bankRowHits_190 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 963 = bankACTsRecvd_191 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 964 = bankREADsRecvd_191 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 965 = bankWRITEsRecvd_191 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 966 = bankPREsRecvd_191 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 967 = bankRowHits_191 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 968 = bankACTsRecvd_192 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 969 = bankREADsRecvd_192 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 970 = bankWRITEsRecvd_192 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 971 = bankPREsRecvd_192 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 972 = bankRowHits_192 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 973 = bankACTsRecvd_193 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 974 = bankREADsRecvd_193 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 975 = bankWRITEsRecvd_193 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 976 = bankPREsRecvd_193 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 977 = bankRowHits_193 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 978 = bankACTsRecvd_194 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 979 = bankREADsRecvd_194 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 980 = bankWRITEsRecvd_194 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 981 = bankPREsRecvd_194 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 982 = bankRowHits_194 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 983 = bankACTsRecvd_195 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 984 = bankREADsRecvd_195 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 985 = bankWRITEsRecvd_195 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 986 = bankPREsRecvd_195 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 987 = bankRowHits_195 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 988 = bankACTsRecvd_196 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 989 = bankREADsRecvd_196 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 990 = bankWRITEsRecvd_196 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 991 = bankPREsRecvd_196 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 992 = bankRowHits_196 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 993 = bankACTsRecvd_197 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 994 = bankREADsRecvd_197 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 995 = bankWRITEsRecvd_197 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 996 = bankPREsRecvd_197 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 997 = bankRowHits_197 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 998 = bankACTsRecvd_198 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 999 = bankREADsRecvd_198 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1000 = bankWRITEsRecvd_198 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1001 = bankPREsRecvd_198 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1002 = bankRowHits_198 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1003 = bankACTsRecvd_199 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1004 = bankREADsRecvd_199 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1005 = bankWRITEsRecvd_199 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1006 = bankPREsRecvd_199 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1007 = bankRowHits_199 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1008 = bankACTsRecvd_200 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1009 = bankREADsRecvd_200 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1010 = bankWRITEsRecvd_200 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1011 = bankPREsRecvd_200 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1012 = bankRowHits_200 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1013 = bankACTsRecvd_201 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1014 = bankREADsRecvd_201 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1015 = bankWRITEsRecvd_201 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1016 = bankPREsRecvd_201 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1017 = bankRowHits_201 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1018 = bankACTsRecvd_202 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1019 = bankREADsRecvd_202 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1020 = bankWRITEsRecvd_202 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1021 = bankPREsRecvd_202 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1022 = bankRowHits_202 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1023 = bankACTsRecvd_203 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1024 = bankREADsRecvd_203 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1025 = bankWRITEsRecvd_203 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1026 = bankPREsRecvd_203 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1027 = bankRowHits_203 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1028 = bankACTsRecvd_204 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1029 = bankREADsRecvd_204 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1030 = bankWRITEsRecvd_204 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1031 = bankPREsRecvd_204 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1032 = bankRowHits_204 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1033 = bankACTsRecvd_205 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1034 = bankREADsRecvd_205 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1035 = bankWRITEsRecvd_205 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1036 = bankPREsRecvd_205 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1037 = bankRowHits_205 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1038 = bankACTsRecvd_206 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1039 = bankREADsRecvd_206 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1040 = bankWRITEsRecvd_206 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1041 = bankPREsRecvd_206 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1042 = bankRowHits_206 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1043 = bankACTsRecvd_207 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1044 = bankREADsRecvd_207 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1045 = bankWRITEsRecvd_207 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1046 = bankPREsRecvd_207 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1047 = bankRowHits_207 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1048 = bankACTsRecvd_208 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1049 = bankREADsRecvd_208 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1050 = bankWRITEsRecvd_208 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1051 = bankPREsRecvd_208 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1052 = bankRowHits_208 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1053 = bankACTsRecvd_209 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1054 = bankREADsRecvd_209 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1055 = bankWRITEsRecvd_209 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1056 = bankPREsRecvd_209 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1057 = bankRowHits_209 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1058 = bankACTsRecvd_210 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1059 = bankREADsRecvd_210 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1060 = bankWRITEsRecvd_210 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1061 = bankPREsRecvd_210 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1062 = bankRowHits_210 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1063 = bankACTsRecvd_211 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1064 = bankREADsRecvd_211 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1065 = bankWRITEsRecvd_211 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1066 = bankPREsRecvd_211 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1067 = bankRowHits_211 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1068 = bankACTsRecvd_212 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1069 = bankREADsRecvd_212 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1070 = bankWRITEsRecvd_212 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1071 = bankPREsRecvd_212 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1072 = bankRowHits_212 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1073 = bankACTsRecvd_213 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1074 = bankREADsRecvd_213 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1075 = bankWRITEsRecvd_213 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1076 = bankPREsRecvd_213 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1077 = bankRowHits_213 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1078 = bankACTsRecvd_214 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1079 = bankREADsRecvd_214 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1080 = bankWRITEsRecvd_214 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1081 = bankPREsRecvd_214 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1082 = bankRowHits_214 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1083 = bankACTsRecvd_215 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1084 = bankREADsRecvd_215 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1085 = bankWRITEsRecvd_215 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1086 = bankPREsRecvd_215 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1087 = bankRowHits_215 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1088 = bankACTsRecvd_216 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1089 = bankREADsRecvd_216 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1090 = bankWRITEsRecvd_216 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1091 = bankPREsRecvd_216 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1092 = bankRowHits_216 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1093 = bankACTsRecvd_217 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1094 = bankREADsRecvd_217 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1095 = bankWRITEsRecvd_217 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1096 = bankPREsRecvd_217 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1097 = bankRowHits_217 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1098 = bankACTsRecvd_218 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1099 = bankREADsRecvd_218 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1100 = bankWRITEsRecvd_218 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1101 = bankPREsRecvd_218 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1102 = bankRowHits_218 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1103 = bankACTsRecvd_219 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1104 = bankREADsRecvd_219 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1105 = bankWRITEsRecvd_219 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1106 = bankPREsRecvd_219 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1107 = bankRowHits_219 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1108 = bankACTsRecvd_220 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1109 = bankREADsRecvd_220 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1110 = bankWRITEsRecvd_220 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1111 = bankPREsRecvd_220 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1112 = bankRowHits_220 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1113 = bankACTsRecvd_221 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1114 = bankREADsRecvd_221 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1115 = bankWRITEsRecvd_221 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1116 = bankPREsRecvd_221 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1117 = bankRowHits_221 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1118 = bankACTsRecvd_222 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1119 = bankREADsRecvd_222 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1120 = bankWRITEsRecvd_222 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1121 = bankPREsRecvd_222 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1122 = bankRowHits_222 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1123 = bankACTsRecvd_223 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1124 = bankREADsRecvd_223 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1125 = bankWRITEsRecvd_223 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1126 = bankPREsRecvd_223 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1127 = bankRowHits_223 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1128 = bankACTsRecvd_224 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1129 = bankREADsRecvd_224 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1130 = bankWRITEsRecvd_224 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1131 = bankPREsRecvd_224 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1132 = bankRowHits_224 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1133 = bankACTsRecvd_225 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1134 = bankREADsRecvd_225 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1135 = bankWRITEsRecvd_225 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1136 = bankPREsRecvd_225 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1137 = bankRowHits_225 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1138 = bankACTsRecvd_226 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1139 = bankREADsRecvd_226 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1140 = bankWRITEsRecvd_226 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1141 = bankPREsRecvd_226 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1142 = bankRowHits_226 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1143 = bankACTsRecvd_227 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1144 = bankREADsRecvd_227 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1145 = bankWRITEsRecvd_227 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1146 = bankPREsRecvd_227 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1147 = bankRowHits_227 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1148 = bankACTsRecvd_228 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1149 = bankREADsRecvd_228 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1150 = bankWRITEsRecvd_228 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1151 = bankPREsRecvd_228 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1152 = bankRowHits_228 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1153 = bankACTsRecvd_229 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1154 = bankREADsRecvd_229 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1155 = bankWRITEsRecvd_229 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1156 = bankPREsRecvd_229 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1157 = bankRowHits_229 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1158 = bankACTsRecvd_230 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1159 = bankREADsRecvd_230 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1160 = bankWRITEsRecvd_230 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1161 = bankPREsRecvd_230 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1162 = bankRowHits_230 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1163 = bankACTsRecvd_231 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1164 = bankREADsRecvd_231 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1165 = bankWRITEsRecvd_231 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1166 = bankPREsRecvd_231 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1167 = bankRowHits_231 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1168 = bankACTsRecvd_232 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1169 = bankREADsRecvd_232 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1170 = bankWRITEsRecvd_232 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1171 = bankPREsRecvd_232 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1172 = bankRowHits_232 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1173 = bankACTsRecvd_233 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1174 = bankREADsRecvd_233 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1175 = bankWRITEsRecvd_233 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1176 = bankPREsRecvd_233 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1177 = bankRowHits_233 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1178 = bankACTsRecvd_234 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1179 = bankREADsRecvd_234 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1180 = bankWRITEsRecvd_234 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1181 = bankPREsRecvd_234 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1182 = bankRowHits_234 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1183 = bankACTsRecvd_235 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1184 = bankREADsRecvd_235 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1185 = bankWRITEsRecvd_235 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1186 = bankPREsRecvd_235 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1187 = bankRowHits_235 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1188 = bankACTsRecvd_236 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1189 = bankREADsRecvd_236 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1190 = bankWRITEsRecvd_236 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1191 = bankPREsRecvd_236 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1192 = bankRowHits_236 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1193 = bankACTsRecvd_237 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1194 = bankREADsRecvd_237 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1195 = bankWRITEsRecvd_237 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1196 = bankPREsRecvd_237 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1197 = bankRowHits_237 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1198 = bankACTsRecvd_238 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1199 = bankREADsRecvd_238 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1200 = bankWRITEsRecvd_238 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1201 = bankPREsRecvd_238 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1202 = bankRowHits_238 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1203 = bankACTsRecvd_239 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1204 = bankREADsRecvd_239 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1205 = bankWRITEsRecvd_239 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1206 = bankPREsRecvd_239 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1207 = bankRowHits_239 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1208 = bankACTsRecvd_240 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1209 = bankREADsRecvd_240 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1210 = bankWRITEsRecvd_240 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1211 = bankPREsRecvd_240 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1212 = bankRowHits_240 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1213 = bankACTsRecvd_241 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1214 = bankREADsRecvd_241 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1215 = bankWRITEsRecvd_241 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1216 = bankPREsRecvd_241 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1217 = bankRowHits_241 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1218 = bankACTsRecvd_242 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1219 = bankREADsRecvd_242 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1220 = bankWRITEsRecvd_242 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1221 = bankPREsRecvd_242 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1222 = bankRowHits_242 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1223 = bankACTsRecvd_243 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1224 = bankREADsRecvd_243 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1225 = bankWRITEsRecvd_243 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1226 = bankPREsRecvd_243 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1227 = bankRowHits_243 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1228 = bankACTsRecvd_244 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1229 = bankREADsRecvd_244 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1230 = bankWRITEsRecvd_244 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1231 = bankPREsRecvd_244 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1232 = bankRowHits_244 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1233 = bankACTsRecvd_245 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1234 = bankREADsRecvd_245 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1235 = bankWRITEsRecvd_245 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1236 = bankPREsRecvd_245 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1237 = bankRowHits_245 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1238 = bankACTsRecvd_246 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1239 = bankREADsRecvd_246 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1240 = bankWRITEsRecvd_246 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1241 = bankPREsRecvd_246 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1242 = bankRowHits_246 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1243 = bankACTsRecvd_247 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1244 = bankREADsRecvd_247 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1245 = bankWRITEsRecvd_247 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1246 = bankPREsRecvd_247 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1247 = bankRowHits_247 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1248 = bankACTsRecvd_248 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1249 = bankREADsRecvd_248 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1250 = bankWRITEsRecvd_248 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1251 = bankPREsRecvd_248 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1252 = bankRowHits_248 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1253 = bankACTsRecvd_249 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1254 = bankREADsRecvd_249 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1255 = bankWRITEsRecvd_249 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1256 = bankPREsRecvd_249 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1257 = bankRowHits_249 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1258 = bankACTsRecvd_250 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1259 = bankREADsRecvd_250 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1260 = bankWRITEsRecvd_250 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1261 = bankPREsRecvd_250 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1262 = bankRowHits_250 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1263 = bankACTsRecvd_251 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1264 = bankREADsRecvd_251 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1265 = bankWRITEsRecvd_251 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1266 = bankPREsRecvd_251 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1267 = bankRowHits_251 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1268 = bankACTsRecvd_252 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1269 = bankREADsRecvd_252 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1270 = bankWRITEsRecvd_252 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1271 = bankPREsRecvd_252 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1272 = bankRowHits_252 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1273 = bankACTsRecvd_253 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1274 = bankREADsRecvd_253 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1275 = bankWRITEsRecvd_253 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1276 = bankPREsRecvd_253 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1277 = bankRowHits_253 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1278 = bankACTsRecvd_254 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1279 = bankREADsRecvd_254 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1280 = bankWRITEsRecvd_254 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1281 = bankPREsRecvd_254 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1282 = bankRowHits_254 [Number of row hits at bank x] (commands) Enable level = 5
            STATISTIC 1283 = bankACTsRecvd_255 [Number of activate commands received at bank x] (commands) Enable level = 5
            STATISTIC 1284 = bankREADsRecvd_255 [Number of read commands received at bank x] (commands) Enable level = 5
            STATISTIC 1285 = bankWRITEsRecvd_255 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1286 = bankPREsRecvd_255 [Number of write commands received at bank x] (commands) Enable level = 5
            STATISTIC 1287 = bankRowHits_255 [Number of row hits at bank x] (commands) Enable level = 5
         NUM PORTS = 1
            PORT 0 = ctrlLink (link to controller)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 9
            PARAMETER 0 = numRanksPerChannel (Total number of ranks per channel) [<required>]
            PARAMETER 1 = numBankGroupsPerRank (Total number of bank groups per rank) [<required>]
            PARAMETER 2 = numBanksPerBankGroup (Total number of banks per group) [<required>]
            PARAMETER 3 = boolAllocateCmdResACT (Allocate space in Controller Res Q for ACT Cmds) [<required>]
            PARAMETER 4 = boolAllocateCmdResREAD (Allocate space in Controller Res Q for READ Cmds) [<required>]
            PARAMETER 5 = boolAllocateCmdResREADA (Allocate space in Controller Res Q for READA Cmds) [<required>]
            PARAMETER 6 = boolAllocateCmdResWRITE (Allocate space in Controller Res Q for WRITE Cmds) [<required>]
            PARAMETER 7 = boolAllocateCmdResWRITEA (Allocate space in Controller Res Q for WRITEA Cmds) [<required>]
            PARAMETER 8 = boolAllocateCmdResPRE (Allocate space in Controller Res Q for PRE Cmds) [<required>]
    c_Dimm: Test DIMM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_Dimm.hpp
      Component 2: c_MemhBridge
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 8
            STATISTIC 0 = readTxnsSent [Number of read transactions sent] (reads) Enable level = 1
            STATISTIC 1 = writeTxnsSent [Number of write transactions sent] (writes) Enable level = 1
            STATISTIC 2 = readTxnsCompleted [Number of read transactions completed] (reads) Enable level = 1
            STATISTIC 3 = writeTxnsCompleted [Number of write transactions completed] (writes) Enable level = 1
            STATISTIC 4 = txnsPerCycle [Transactions Per Cycle] (Txns/Cycle) Enable level = 1
            STATISTIC 5 = readTxnsLatency [Average latency of read transactions] (cycles) Enable level = 1
            STATISTIC 6 = writeTxnsLatency [Average latency of write transactions] (cycles) Enable level = 1
            STATISTIC 7 = txnsLatency [Average latency of (read/write) transactions] (cycles) Enable level = 1
         NUM PORTS = 2
            PORT 0 = cpuLink (link to/from CPU)
            PORT 1 = memLink (link to memory-side components (txn dispatcher or controller))
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = maxOutstandingReqs (Maximum number of the outstanding requests) [<required>]
    c_MemhBridge: Bridge to communicate with MemoryHierarchy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_MemhBridge.hpp
      Component 3: c_TraceFileReader
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 8
            STATISTIC 0 = readTxnsSent [Number of read transactions sent] (reads) Enable level = 1
            STATISTIC 1 = writeTxnsSent [Number of write transactions sent] (writes) Enable level = 1
            STATISTIC 2 = readTxnsCompleted [Number of read transactions completed] (reads) Enable level = 1
            STATISTIC 3 = writeTxnsCompleted [Number of write transactions completed] (writes) Enable level = 1
            STATISTIC 4 = txnsPerCycle [Transactions Per Cycle] (Txns/Cycle) Enable level = 1
            STATISTIC 5 = readTxnsLatency [Average latency of read transactions] (cycles) Enable level = 1
            STATISTIC 6 = writeTxnsLatency [Average latency of write transactions] (cycles) Enable level = 1
            STATISTIC 7 = txnsLatency [Average latency of (read/write) transactions] (cycles) Enable level = 1
         NUM PORTS = 1
            PORT 0 = memLink (link to memory-side components (txn dispatcher or controller))
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = maxOutstandingReqs (Maximum number of the outstanding requests) [<required>]
            PARAMETER 1 = numTxnPerCycle (The number of transactions generated per cycle) [<required>]
            PARAMETER 2 = traceFile (Location of trace file to read) [<required>]
            PARAMETER 3 = traceFileType (Trace file type (DEFAULT or USIMM)) [<required>]
    c_TraceFileReader: Test Trace file Generator
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_TraceFileReader.hpp
      Component 4: c_TxnDispatcher
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = txnGen (link to/from a transaction generator)
            PORT 1 = lane_%(lanes)d (link to/from lanes)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = numLanes (Total number of lanes) [<required>]
            PARAMETER 1 = laneIdxPosition (Bit posiiton of the lane index in the address.. [End:Start]) [<required>]
    c_TxnDispatcher: Transaction dispatcher
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_TxnDispatcher.hpp
      Component 5: c_TxnGen
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 8
            STATISTIC 0 = readTxnsSent [Number of read transactions sent] (reads) Enable level = 1
            STATISTIC 1 = writeTxnsSent [Number of write transactions sent] (writes) Enable level = 1
            STATISTIC 2 = readTxnsCompleted [Number of read transactions completed] (reads) Enable level = 1
            STATISTIC 3 = writeTxnsCompleted [Number of write transactions completed] (writes) Enable level = 1
            STATISTIC 4 = txnsPerCycle [Transactions Per Cycle] (Txns/Cycle) Enable level = 1
            STATISTIC 5 = readTxnsLatency [Average latency of read transactions] (cycles) Enable level = 1
            STATISTIC 6 = writeTxnsLatency [Average latency of write transactions] (cycles) Enable level = 1
            STATISTIC 7 = txnsLatency [Average latency of (read/write) transactions] (cycles) Enable level = 1
         NUM PORTS = 1
            PORT 0 = memLink (link to memory-side components (txn dispatcher or controller))
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = maxOutstandingReqs (Maximum number of the outstanding requests) [<required>]
            PARAMETER 1 = numTxnPerCycle (The number of transactions generated per cycle) [<required>]
            PARAMETER 2 = readWriteRatio (Ratio of read txn's to generate : write txn's to generate) [<required>]
    c_TxnGen: Test Txn Generator
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_TxnGen.hpp
Num SubComponents = 5
      SubComponent 0: c_AddressHasher
      Interface: SST::CramSim::c_AddressHasher
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = numBytesPerTransaction (Number of bytes retrieved for every transaction) [1]
            PARAMETER 1 = strAddressMapStr (String defining the address mapping scheme) [_r_l_b_R_B_h_]
    c_AddressHasher: Hashes addresses based on config parameters
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_AddressHasher.hpp
      SubComponent 1: c_CmdScheduler
      Interface: SST::CramSim::c_CmdScheduler
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = numCmdQEntries (The number of entries in command scheduler's command queue) [<required>]
            PARAMETER 1 = cmdSchedulingPolicy () [BANK]
    c_CmdScheduler: Command Scheduler
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_CmdScheduler.hpp
      SubComponent 2: c_DeviceDriver
      Interface: SST::CramSim::c_DeviceDriver
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 46
            PARAMETER 0 = numChannels (Total number of channels per DIMM) [<required>]
            PARAMETER 1 = numPChannelsPerChannel (Total number of channels per pseudo channel (added to support HBM)) [<required>]
            PARAMETER 2 = numRanksPerChannel (Total number of ranks per (p)channel) [<required>]
            PARAMETER 3 = numBankGroupsPerRank (Total number of bank groups per rank) [<required>]
            PARAMETER 4 = numBanksPerBankGroup (Total number of banks per group) [<required>]
            PARAMETER 5 = numRowsPerBankNumber of rows in every bank (<empty>) [<required>]
            PARAMETER 6 = numColsPerBank (Number of cols in every bank) [<required>]
            PARAMETER 7 = boolPrintCmdTrace (Print a command trace) [<required>]
            PARAMETER 8 = strCmdTraceFile (Filename to print the command trace, or - for stdout) [<required>]
            PARAMETER 9 = boolAllocateCmdResACT (Allocate space in DeviceDriver Res Q for ACT Cmds) [<required>]
            PARAMETER 10 = boolAllocateCmdResREAD (Allocate space in DeviceDriver Res Q for READ Cmds) [<required>]
            PARAMETER 11 = boolAllocateCmdResREADA (Allocate space in DeviceDriver Res Q for READA Cmds) [<required>]
            PARAMETER 12 = boolAllocateCmdResWRITE (Allocate space in DeviceDriver Res Q for WRITE Cmds) [<required>]
            PARAMETER 13 = boolAllocateCmdResWRITEA (Allocate space in DeviceDriver Res Q for WRITEA Cmds) [<required>]
            PARAMETER 14 = boolAllocateCmdResPRE (Allocate space in DeviceDriver Res Q for PRE Cmds) [<required>]
            PARAMETER 15 = boolUseRefresh (Whether to use REF or not) [<required>]
            PARAMETER 16 = boolDualCommandBus (Whether to use dual command bus (added to support HBM)) [<required>]
            PARAMETER 17 = boolMultiCycleACT (Whether to use multi-cycle (two cycles) active command (added to support HBM)) [<required>]
            PARAMETER 18 = nRC (Bank Param) [<required>]
            PARAMETER 19 = nRRD (Bank Param) [<required>]
            PARAMETER 20 = nRRD_L (Bank Param) [<required>]
            PARAMETER 21 = nRRD_S (Bank Param) [<required>]
            PARAMETER 22 = nRCD (Bank Param) [<required>]
            PARAMETER 23 = nCCD (Bank Param) [<required>]
            PARAMETER 24 = nCCD_L (Bank Param) [<required>]
            PARAMETER 25 = nCCD_L_WR (Bank Param) [<required>]
            PARAMETER 26 = nCCD_S (Bank Param) [<required>]
            PARAMETER 27 = nAL (Bank Param) [<required>]
            PARAMETER 28 = nCL (Bank Param) [<required>]
            PARAMETER 29 = nCWL (Bank Param) [<required>]
            PARAMETER 30 = nWR (Bank Param) [<required>]
            PARAMETER 31 = nWTR (Bank Param) [<required>]
            PARAMETER 32 = nWTR_L (Bank Param) [<required>]
            PARAMETER 33 = nWTR_S (Bank Param) [<required>]
            PARAMETER 34 = nRTW (Bank Param) [<required>]
            PARAMETER 35 = nEWTR (Bank Param) [<required>]
            PARAMETER 36 = nERTW (Bank Param) [<required>]
            PARAMETER 37 = nEWTW (Bank Param) [<required>]
            PARAMETER 38 = nERTR (Bank Param) [<required>]
            PARAMETER 39 = nRAS (Bank Param) [<required>]
            PARAMETER 40 = nRTP (Bank Param) [<required>]
            PARAMETER 41 = nRP (Bank Param) [<required>]
            PARAMETER 42 = nRFC (Bank Param) [<required>]
            PARAMETER 43 = nREFI (Bank Param) [<required>]
            PARAMETER 44 = nFAW (Bank Param) [<required>]
            PARAMETER 45 = nBL (Bank Param) [<required>]
    c_DeviceDriver: Dram Control Unit
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_DeviceDriver.hpp
      SubComponent 3: c_TxnConverter
      Interface: SST::CramSim::c_TxnConverter
         NUM STATISTICS = 5
            STATISTIC 0 = readTxnsRecvd [Number of read transactions received] (reads) Enable level = 1
            STATISTIC 1 = writeTxnsRecvd [Number of write transactions received] (writes) Enable level = 1
            STATISTIC 2 = totalTxnsRecvd [Number of write transactions received] (transactions) Enable level = 1
            STATISTIC 3 = reqQueueSize [Total size of the request queue over time] (transactions) Enable level = 1
            STATISTIC 4 = resQueueSize [Total size of the response queue over time] (transactions) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = relCommandWidth (Relative width of each command) [<required>]
            PARAMETER 1 = bankPolicy (Select which bank policy to model) [CLOSE]
            PARAMETER 2 = boolUseReadA (Whether to use READ or READA Cmds) [<required>]
            PARAMETER 3 = boolUseWriteA (Whether to use WRITE or WRITEA Cmds) [<required>]
            PARAMETER 4 = bankCloseTime () [<required>]
    c_TxnConverter: Transaction Converter
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_TxnConverter.hpp
      SubComponent 4: c_TxnScheduler
      Interface: SST::CramSim::c_TxnScheduler
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = txnSchedulingPolicy (Transaction scheduling policy) [FCFS]
            PARAMETER 1 = numTxnQEntries (The number of transaction queue entries) [32]
            PARAMETER 2 = boolReadFirstTxnScheduling () [0]
            PARAMETER 3 = maxPendingWriteThreshold () [1.0]
            PARAMETER 4 = minPendingWriteThreshold () [0.2]
    c_TxnScheduler: Transaction Scheduler
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:32:04, using file: c_TxnScheduler.hpp
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 1 = GNA ()
Num Components = 1
      Component 0: GNA
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = mem_link (Connection to memory)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = memory (Interface to memory (e.g., caches)) [SST::Interfaces::SimpleMem]
         NUM PARAMETERS = 7
            PARAMETER 0 = verbose ((uint) Determine how verbose the output from the CPU is) [0]
            PARAMETER 1 = clock ((string) Clock frequency) [1GHz]
            PARAMETER 2 = BWPperTic (Max # of Brain Wave Pulses which can be delivered each clock cycle) [2]
            PARAMETER 3 = STSDispatch (Max # spikes that can be dispatched to the STS in a clock cycle) [2]
            PARAMETER 4 = STSParallelism (Max # spikes the STS can process in parallelism ) [2]
            PARAMETER 5 = MaxOutMem (Maximum # of outgoing memory requests per cycle) [STSParallelism]
            PARAMETER 6 = neurons ((uint) number of neurons) [32]
    GNA: Spiking Temportal Processing Unit
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:17, using file: GNA.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 2 = Messier ()
Num Components = 1
      Component 0: Messier
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 4
            STATISTIC 0 = reads [Determine the number of reads] (reads) Enable level = 1
            STATISTIC 1 = writes [Determine the number of writes] (writes) Enable level = 1
            STATISTIC 2 = avg_time [The average time spent on each read request] (cycles) Enable level = 3
            STATISTIC 3 = histogram_idle [The histogram of cycles length while controller is idle] (cycles) Enable level = 1
         NUM PORTS = 1
            PORT 0 = bus (Link to the socket controller)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 36
            PARAMETER 0 = clock (Internal Controller Clock Rate.) [1.0 Ghz]
            PARAMETER 1 = memory_clock (NVM Chips Clock Rate.) [1.0 Ghz]
            PARAMETER 2 = size (The size of the whole NVM-Based DIMM in KBs) [8388608]
            PARAMETER 3 = write_buffer_size (The size of the internal write buffer (# entries) ) [64]
            PARAMETER 4 = max_requests (This determines the max number of requests can be buffered at the NVMDIMM) [64]
            PARAMETER 5 = max_outstanding (This determines the max number of outstanding/executing requests inside the NVMDIMM) [16]
            PARAMETER 6 = max_current_weight (Determines the power limit, which in turn limits the outstanding requests) [120]
            PARAMETER 7 = write_weight (Determines the average power weight of a currently executing write operation) [15]
            PARAMETER 8 = read_weight (Determines the average power weight of a currently executing read operation) [3]
            PARAMETER 9 = tCMD (The time needed to send a command from the controller to the NVM-Chip (in controller cycles)) [1]
            PARAMETER 10 = tCL (The time needed to read a word from an already activated row (in controller cycles)) [70]
            PARAMETER 11 = tCL_W (The time needed to write a word completely to the PCM Chip (in controller cycles)) [1000]
            PARAMETER 12 = tRCD (The time needed to activate a row in PCM chips (in controller cycles)) [300]
            PARAMETER 13 = tBURST (The time needed for submitting a data burst on the bus) [7]
            PARAMETER 14 = device_width (This determines the NVM-Chip output width) [8]
            PARAMETER 15 = num_devices (The number of NVM-Chip devices) [8]
            PARAMETER 16 = num_ranks (The number of ranks) [1]
            PARAMETER 17 = num_banks (The number of banks on each rank) [16]
            PARAMETER 18 = cache_enabled (If internal cache is enabled or not) [0]
            PARAMETER 19 = modulo (If internal modulo scheduling is enabled or not) [0]
            PARAMETER 20 = modulo_unit (The unit of module, if N, this means for each N reads, we service a write) [4]
            PARAMETER 21 = cache_persistent (There is enough power to write-back the cache) [0]
            PARAMETER 22 = cache_latency (The cache latency) [0]
            PARAMETER 23 = cache_size (The cache size in KBs) [0]
            PARAMETER 24 = cache_bs (The cache block size) [0]
            PARAMETER 25 = cache_assoc (The cache associativity) [0]
            PARAMETER 26 = row_buffer_size (The row buffer size in bytes) [8192]
            PARAMETER 27 = flush_th (This determines the percentage of max number of entries in write buffer that triggers flushing it) [50]
            PARAMETER 28 = flush_th_low (This determines the percentage of the low threshold number of entries) [30]
            PARAMETER 29 = max_writes (This determines the maximum number of concurrent writes at NVM chips (not including those on buffer) [1]
            PARAMETER 30 = cacheline_interleaving (This determines if cacheline interleaving is used (1) or bank interleaving (0) ) [1]
            PARAMETER 31 = adaptive_writes (This indicates that the writes flushing mode: 0 means naive interleaving) [0]
            PARAMETER 32 = write_cancel (This indicates that the write cancellation optimization: 0 means not enabled) [0]
            PARAMETER 33 = write_cancel_th (This indicates that the write cancellation threshold: 0 means dynamic) [0]
            PARAMETER 34 = group_size (This indicates the number of banks in each group, to be locked when draining) [0]
            PARAMETER 35 = lock_period (This indicates the period of locking a group in cycles) [10000]
    Messier: Messier Component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:04:37, using file: ./Messier.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 3 = Opal ()
Num Components = 1
      Component 0: Opal
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 2
            STATISTIC 0 = local_mem_usage [Number of pages allocated in local memory] (requests) Enable level = 1
            STATISTIC 1 = shared_mem_usage [Number of pages allocated in shared memory] (requests) Enable level = 1
         NUM PORTS = 3
            PORT 0 = coreLink%(num_cores)d (Link to receive core requests)
            PORT 1 = mmuLink%(num_cores)d (Link to receive mmu requests)
            PORT 2 = memCntrLink%(num_memCntrls)d (Link to receive memory controller requests)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 27
            PARAMETER 0 = clock (Internal Controller Clock Rate.) [1.0 Ghz]
            PARAMETER 1 = latency (The time to be spent to service a memory request) [1000]
            PARAMETER 2 = verbose (debug level) [1]
            PARAMETER 3 = max_inst (maximum number of instructions per cycle) [1]
            PARAMETER 4 = num_nodes (number of disaggregated nodes in the system) [1]
            PARAMETER 5 = cores_per_node (total number of cores. this will be used to account for TLB shootdown latency) [1]
            PARAMETER 6 = num_ports (total number of request links) [2]
            PARAMETER 7 = num_cores (total number of core request links) [2]
            PARAMETER 8 = num_memCntrls (total number of loacl memory controller request links) [2]
            PARAMETER 9 = num_globalMemCntrls (total number of global memory controller request links) [2]
            PARAMETER 10 = num_pools (This determines the number of memory pools) [1]
            PARAMETER 11 = num_domains (The number of domains in the system, typically similar to number of sockets/SoCs) [1]
            PARAMETER 12 = allocation_policy (0 is private pools, then clustered pools, then public pools) [0]
            PARAMETER 13 = shared_mempools (This determines the number of shared memory pools) [1]
            PARAMETER 14 = shared_mem.mempool%(shared_mempools).start (the starting physical address of each shared memory pool in KBs) [0]
            PARAMETER 15 = shared_mem.mempool%(shared_mempools).size (Size of each shared memory pool in KBs) [1024]
            PARAMETER 16 = shared_mem.mempool%(shared_mempools).frame_size (Size of each shared memory pool in KBs) [4]
            PARAMETER 17 = shared_mem.mempool%(shared_mempools).mem_tech (memory technology of each shared memory pool in KBs) [0]
            PARAMETER 18 = local_mem.mempool%(num_nodes).start (the starting physical address of each local memory pool in KBs) [0]
            PARAMETER 19 = local_mem.mempool%(num_nodes).size (Size of each local memory pool in KBs) [1024]
            PARAMETER 20 = local_mem.mempool%(num_nodes).frame_size (frame size of each local memory pool in KBs) [4]
            PARAMETER 21 = local_mem.mempool%(num_nodes).mem_tech (memory technology of each local memory pool in KBs) [0]
            PARAMETER 22 = startaddress%(num_pools) (the starting physical address of the pool) [0]
            PARAMETER 23 = type%(num_pools) (0 means private for specific NUMA domain, 1 means shared among specific NUMA domains, 2 means public) [2]
            PARAMETER 24 = cluster_size (This determines the number of NUMA domains in each cluster, if clustering is used) [1]
            PARAMETER 25 = memtype%(num_pools) (0 for typical DRAM, 1 for die-stacked DRAM, 2 for NVM) [0]
            PARAMETER 26 = typepriority%(num_pools) (0 means die-stacked, typical DRAM, then NVM) [0]
    Opal: Memory Allocation Manager
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:06:35, using file: Opal.h
Num SubComponents = 3
      SubComponent 0: MemoryManagerOpal
      Interface: SST::ArielComponent::ArielMemoryManager
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = opal_link_%(corecound)d (Each core's link to the Opal memory manager)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = translator (Temporarily, which memory manager to use to translate addresses) [SST::Ariel::ArielMemoryManager]
         NUM PARAMETERS = 3
            PARAMETER 0 = corecount (Sets the verbosity of the memory manager output) [1]
            PARAMETER 1 = opal_latency (latency to communicate to the Opal manager) [32ps]
            PARAMETER 2 = translator ((temporary) translation memory manager to actually translate addresses for now) [MemoryManagerSimple]
    MemoryManagerOpal: Memory manager which uses the Opal memory allocation component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:06:47, using file: arielmemmgr_opal.h
      SubComponent 1: OpalMemNIC
      Interface: SST::MemHierarchy::MemLinkBase
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = port (Link to network)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 14
            PARAMETER 0 = debug ((int) Where to print debug output. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 1 = debug_level ((int) Debug verbosity level. Between 0 and 10) [0]
            PARAMETER 2 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 3 = accept_region ((bool) Set by parent component but user should unset if region (addr_range_start/end, interleave_size/step) params are provided to memory. Provides backward compatibility for address translation between memory controller and directory.) [false]
            PARAMETER 4 = group ((int) Group ID. See params 'sources' and 'destinations'. If not specified, the parent component will guess.) [1]
            PARAMETER 5 = sources ((comma-separated list of ints) List of group IDs that serve as sources for this component. If not specified, defaults to 'group - 1'.) [group-1]
            PARAMETER 6 = destinations ((comma-separated list of ints) List of group IDs that serve as destinations for this component. If not specified, defaults to 'group + 1'.) [group+1]
            PARAMETER 7 = node (Node number in multinode environment) [0]
            PARAMETER 8 = shared_memory (Shared meory enable flag) [0]
            PARAMETER 9 = local_memory_size (Local memory size to mask local memory addresses) [0]
            PARAMETER 10 = network_bw (Network bandwidth) [80GiB/s]
            PARAMETER 11 = network_input_buffer_size (Size of input buffer) [1KiB]
            PARAMETER 12 = network_output_buffer_size (Size of output buffer) [1KiB]
            PARAMETER 13 = min_packet_size (Size of packet with a payload (e.g., control message size)) [8B]
    OpalMemNIC: MemNIC for Opal multi-node configurations
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:06:57, using file: opalMemNIC.h
      SubComponent 2: PageFaultHandler
      Interface: SST::SambaComponent::PageFaultHandler
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = opal_link_%(corecound)d (Each core's mmu link to the Opal page fault handler)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = opal_latency (latency to communicate to the Opal manager) [32ps]
    PageFaultHandler: Page fault hander uses the Opal memory allocation component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:07:10, using file: PageFaultHandler.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 4 = Samba ()
Num Components = 1
      Component 0: Samba
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 6
            STATISTIC 0 = tlb_hits [Number of TLB hits] (requests) Enable level = 1
            STATISTIC 1 = tlb_misses [Number of TLB misses] (requests) Enable level = 1
            STATISTIC 2 = total_waiting [The total waiting time] (cycles) Enable level = 1
            STATISTIC 3 = write_requests [Stat write_requests] (requests) Enable level = 1
            STATISTIC 4 = tlb_shootdown [Number of TLB clears because of page-frees] (shootdowns) Enable level = 2
            STATISTIC 5 = tlb_page_allocs [Number of pages allocated by the memory manager] (pages) Enable level = 2
         NUM PORTS = 4
            PORT 0 = cpu_to_mmu%(corecount)d (Each Samba has link to its core)
            PORT 1 = mmu_to_cache%(corecount)d (Each Samba to its corresponding cache)
            PORT 2 = ptw_to_mem%(corecount)d (Each TLB hierarchy has a link to the memory for page walking)
            PORT 3 = alloc_link_%(corecount)d (Each core's link to an allocation tracker (e.g. memSieve))
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = pagefaulthandler (subcomponent to manage page faults) [SST::SambaComponent::PageFaultHandler]
         NUM PARAMETERS = 17
            PARAMETER 0 = corecount (Number of CPU cores to emulate, i.e., number of private Sambas) [1]
            PARAMETER 1 = levels (Number of TLB levels per Samba) [1]
            PARAMETER 2 = perfect (This is set to 1, when modeling an ideal TLB hierachy with 100% hit rate) [0]
            PARAMETER 3 = os_page_size (This represents the size of frames the OS allocates in KB) [4]
            PARAMETER 4 = sizes_L%(levels) (Number of page sizes supported by Samba) [1]
            PARAMETER 5 = page_size%(sizes)_L%(levels)d (the page size of the supported page size number x in level y) [4]
            PARAMETER 6 = max_outstanding_L%(levels)d (the number of max outstanding misses) [1]
            PARAMETER 7 = max_width_L%(levels)d (the number of accesses on the same cycle) [1]
            PARAMETER 8 = size%(sizes)_L%(levels)d (the number of entries of page size number x on level y) [1]
            PARAMETER 9 = upper_link_L%(levels)d (the latency of the upper link connects to this structure) [0]
            PARAMETER 10 = assoc%(sizes)_L%(levels)d (the associativity of size number X in Level Y) [1]
            PARAMETER 11 = clock (the clock frequency) [1GHz]
            PARAMETER 12 = latency_L%(levels)d (the access latency in cycles for this level of memory) [1]
            PARAMETER 13 = parallel_mode_L%(levels)d (this is for the corner case of having a one cycle overlap with accessing cache) [0]
            PARAMETER 14 = page_walk_latency (Each page table walk latency in nanoseconds) [50]
            PARAMETER 15 = self_connected (Determines if the page walkers are acutally connected to memory hierarchy or just add fixed latency (self-connected)) [0]
            PARAMETER 16 = emulate_faults (This indicates if the page faults should be emulated through requesting pages from page fault handler) [0]
    Samba: Memory Management Unit (MMU) Component of SST
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:07:51, using file: Samba.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 5 = VaultSimC ()
Num Components = 3
      Component 0: VaultSimC
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 1
            STATISTIC 0 = Mem_Outstanding [Number of memory requests outstanding each cycle] (reqs/cycle) Enable level = 1
         NUM PORTS = 1
            PORT 0 = bus (Link to the logic layer)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = clock (Vault Clock Rate.) [1.0 Ghz]
            PARAMETER 1 = numVaults2 (Number of bits to determine vault address (i.e. log_2(number of vaults per cube))) [<required>]
            PARAMETER 2 = VaultID (Vault Unique ID (Unique to cube).) [<required>]
            PARAMETER 3 = debug (0 (default): No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [<required>]
            PARAMETER 4 = delay (Static vault delay) [40ns]
    VaultSimC: A memory vault in a stacked memory
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:13:33, using file: ../../../../src/sst/elements/VaultSimC/VaultSimC.h
      Component 1: cpu
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = toMem (Link to the memory system)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = clock (Simple CPU Clock Rate.) [<required>]
            PARAMETER 1 = threads (Number of simulated threads in cpu.) [<required>]
            PARAMETER 2 = app (Synthetic Application. 0:miniMD-like 1:phdMesh-like. (See app.cpp for details).) [<required>]
            PARAMETER 3 = bwlimit (Maximum number of memory instructions issued by the processor per cycle. Note, each thread can only have at most 2 outstanding memory references at a time. ) [<required>]
            PARAMETER 4 = seed (Optional random number generator seed. If not defined or 0, uses srandomdev().) [<required>]
    cpu: A simple 'cpu' 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:13:43, using file: ./cpu.h
      Component 2: logicLayer
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 4
            STATISTIC 0 = BW_recv_from_CPU [Bandwidth used (recieves from the CPU by the LL) per cycle (in messages)] (reqs/cycle) Enable level = 1
            STATISTIC 1 = BW_send_to_CPU [Bandwidth used (sends from the CPU by the LL) per cycle (in messages)] (reqs/cycle) Enable level = 2
            STATISTIC 2 = BW_recv_from_Mem [Bandwidth used (recieves from other memories by the LL) per cycle (in messages)] (reqs/cycle) Enable level = 3
            STATISTIC 3 = BW_send_to_Mem [Bandwidth used (sends from other memories by the LL) per cycle (in messages)] (reqs/cycle) Enable level = 4
         NUM PORTS = 3
            PORT 0 = bus_%(vaults)d (Link to the individual memory vaults)
            PORT 1 = toCPU (Connection towards the processor (directly to the proessor, or down the chain in the direction of the processor))
            PORT 2 = toMem (If 'terminal' is 0 (i.e. this is not the last cube in the chain) then this port connects to the next cube.)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = clock (Logic Layer Clock Rate.) [<required>]
            PARAMETER 1 = llID (Logic Layer ID (Unique id within chain)) [<required>]
            PARAMETER 2 = bwlimit (Number of memory events which can be processed per cycle per link.) [<required>]
            PARAMETER 3 = LL_MASK (Bitmask to determine 'ownership' of an address by a cube. A cube 'owns' an address if ((((addr >> LL_SHIFT) & LL_MASK) == llID) || (LL_MASK == 0)). LL_SHIFT is set in vaultGlobals.h and is 8 by default.) [<required>]
            PARAMETER 4 = terminal (Is this the last cube in the chain?) [<required>]
            PARAMETER 5 = vaults (Number of vaults per cube.) [<required>]
            PARAMETER 6 = debug (0 (default): No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [<required>]
    logicLayer: A logic layer in a stacked memory
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:13:33, using file: ./logicLayer.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 6 = ariel ()
Num Components = 1
      Component 0: ariel
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 21
            STATISTIC 0 = read_requests [Statistic counts number of read requests] (requests) Enable level = 1
            STATISTIC 1 = write_requests [Statistic counts number of write requests] (requests) Enable level = 1
            STATISTIC 2 = read_request_sizes [Statistic for size of read requests] (bytes) Enable level = 1
            STATISTIC 3 = write_request_sizes [Statistic for size of write requests] (bytes) Enable level = 1
            STATISTIC 4 = split_read_requests [Statistic counts number of split read requests (requests which come from multiple lines)] (requests) Enable level = 1
            STATISTIC 5 = split_write_requests [Statistic counts number of split write requests (requests which are split over multiple lines)] (requests) Enable level = 1
            STATISTIC 6 = no_ops [Statistic counts instructions which do not execute a memory operation] (instructions) Enable level = 1
            STATISTIC 7 = flush_requests [Statistic counts instructions which perform flushes] (requests) Enable level = 1
            STATISTIC 8 = fence_requests [Statistic counts instructions which perform fences] (requests) Enable level = 1
            STATISTIC 9 = instruction_count [Statistic for counting instructions] (instructions) Enable level = 1
            STATISTIC 10 = max_insts [Maximum number of instructions reached by a thread] (instructions) Enable level = 0
            STATISTIC 11 = fp_dp_ins [Statistic for counting DP-floating point instructions] (instructions) Enable level = 1
            STATISTIC 12 = fp_dp_simd_ins [Statistic for counting DP-FP SIMD instructons] (instructions) Enable level = 1
            STATISTIC 13 = fp_dp_scalar_ins [Statistic for counting DP-FP Non-SIMD instructons] (instructions) Enable level = 1
            STATISTIC 14 = fp_dp_ops [Statistic for counting DP-FP operations (inst * SIMD width)] (instructions) Enable level = 1
            STATISTIC 15 = fp_sp_ins [Statistic for counting SP-floating point instructions] (instructions) Enable level = 1
            STATISTIC 16 = fp_sp_simd_ins [Statistic for counting SP-FP SIMD instructons] (instructions) Enable level = 1
            STATISTIC 17 = fp_sp_scalar_ins [Statistic for counting SP-FP Non-SIMD instructons] (instructions) Enable level = 1
            STATISTIC 18 = fp_sp_ops [Statistic for counting SP-FP operations (inst * SIMD width)] (instructions) Enable level = 1
            STATISTIC 19 = cycles [Statistic for counting cycles of the Ariel core.] (cycles) Enable level = 1
            STATISTIC 20 = active_cycles [Statistic for counting active cycles (cycles not idle) of the Ariel core.] (cycles) Enable level = 1
         NUM PORTS = 2
            PORT 0 = cache_link_%(corecount)d (Each core's link to its cache)
            PORT 1 = gpu_link_%(corecount)d (Each core's link to the GPU)
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = memmgr (Memory manager to translate virtual addresses to physical, handle malloc/free, etc.) [SST::ArielComponent::ArielMemoryManager]
            SUB COMPONENT SLOT 1 = memory (Interface to the memoryHierarchy (e.g., caches)) [SST::Interfaces::SimpleMem]
         NUM PARAMETERS = 30
            PARAMETER 0 = verbose (Verbosity for debugging. Increased numbers for increased verbosity.) [0]
            PARAMETER 1 = profilefunctions (Profile functions for Ariel execution, 0 = none, >0 = enable) [0]
            PARAMETER 2 = corecount (Number of CPU cores to emulate) [1]
            PARAMETER 3 = checkaddresses (Verify that addresses are valid with respect to cache lines) [0]
            PARAMETER 4 = maxissuepercycle (Maximum number of requests to issue per cycle, per core) [1]
            PARAMETER 5 = maxcorequeue (Maximum queue depth per core) [64]
            PARAMETER 6 = maxtranscore (Maximum number of pending transactions) [16]
            PARAMETER 7 = pipetimeout (Read timeout between Ariel and traced application) [10]
            PARAMETER 8 = cachelinesize (Line size of the attached caching structure) [64]
            PARAMETER 9 = arieltool (Path to the Ariel PIN-tool shared library) []
            PARAMETER 10 = launcher (Specify the launcher to be used for instrumentation, default is path to PIN) [PINTOOL_EXECUTABLE]
            PARAMETER 11 = executable (Executable to trace) []
            PARAMETER 12 = launchparamcount (Number of parameters supplied for the launch tool) [0]
            PARAMETER 13 = launchparam%(launchparamcount) (Set the parameter to the launcher) []
            PARAMETER 14 = envparamcount (Number of environment parameters to supply to the Ariel executable, default=-1 (use SST environment)) [-1]
            PARAMETER 15 = envparamname%(envparamcount) (Sets the environment parameter name) []
            PARAMETER 16 = envparamval%(envparamcount) (Sets the environment parameter value) []
            PARAMETER 17 = appargcount (Number of arguments to the traced executable) [0]
            PARAMETER 18 = apparg%(appargcount)d (Arguments for the traced executable) []
            PARAMETER 19 = arielmode (Tool interception mode, set to 1 to trace entire program (default), set to 0 to delay tracing until ariel_enable() call., set to 2 to attempt auto-detect) [2]
            PARAMETER 20 = arielinterceptcalls (Toggle intercepting library calls) [0]
            PARAMETER 21 = arielstack (Dump stack on malloc calls (also requires enabling arielinterceptcalls). May increase overhead due to keeping a shadow stack.) [0]
            PARAMETER 22 = mallocmapfile (File with valid 'ariel_malloc_flag' ids) []
            PARAMETER 23 = tracePrefix (Prefix when tracing is enable) []
            PARAMETER 24 = clock (Clock rate at which events are generated and processed) [1GHz]
            PARAMETER 25 = tracegen (Select the trace generator for Ariel (which records traced memory operations) []
            PARAMETER 26 = memmgr (Memory manager to use for address translation) [ariel.MemoryManagerSimple]
            PARAMETER 27 = writepayloadtrace (Trace write payloads and put real memory contents into the memory system) [0]
            PARAMETER 28 = instrument_instructions (turn on or off instruction instrumentation in fesimple) [1]
            PARAMETER 29 = gpu_enabled (If enabled, gpu links will be set up) [0]
    ariel: PIN-based CPU model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:30:46, using file: arielcpu.h
Num SubComponents = 2
      SubComponent 0: MemoryManagerMalloc
      Interface: SST::ArielComponent::ArielMemoryManager
         NUM STATISTICS = 8
            STATISTIC 0 = tlb_hits [Hits in the simple Ariel TLB] (hits) Enable level = 2
            STATISTIC 1 = tlb_evicts [Number of evictions in the simple Ariel TLB] (evictions) Enable level = 2
            STATISTIC 2 = tlb_translate_queries [Number of TLB translations performed] (translations) Enable level = 2
            STATISTIC 3 = tlb_shootdown [Number of TLB clears because of page-frees] (shootdowns) Enable level = 2
            STATISTIC 4 = tlb_page_allocs [Number of pages allocated by the memory manager] (pages) Enable level = 2
            STATISTIC 5 = bytes_allocated_in_pool [Number of bytes allocated explicitly to memory pool <SubId>. Count is # of allocations] (bytes) Enable level = 3
            STATISTIC 6 = bytes_freed_from_pool [Number of bytes freed explicitly from memory pool <SubId>. Count is # of frees] (bytes) Enable level = 3
            STATISTIC 7 = demand_page_allocs [Number of on-demand page allocations in memory pool <SubId>] (count) Enable level = 3
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 9
            PARAMETER 0 = verbose (Verbosity for debugging. Increased numbers for increased verbosity.) [0]
            PARAMETER 1 = vtop_translate (Set to yes to perform virt-phys translation (TLB) or no to disable) [yes]
            PARAMETER 2 = pagemappolicy (Select the page mapping policy for Ariel [LINEAR|RANDOMIZED]) [LINEAR]
            PARAMETER 3 = translatecacheentries (Keep a translation cache of this many entries to improve emulated core performance) [4096]
            PARAMETER 4 = memorylevels (Number of memory levels in the system) [1]
            PARAMETER 5 = defaultlevel (Default memory level) [0]
            PARAMETER 6 = pagesize%(memorylevels)d (Page size for memory Level x) [4096]
            PARAMETER 7 = pagecount%(memorylevels)d (Page count for memory Level x) [131072]
            PARAMETER 8 = page_populate_%(memorylevels)d (Pre-populate/partially pre-populate a page table for a level in memory, this is the file to read in.) []
    MemoryManagerMalloc: MLM memory manager which supports malloc/free in different memory pools
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:05, using file: arielmemmgr_malloc.h
      SubComponent 1: MemoryManagerSimple
      Interface: SST::ArielComponent::ArielMemoryManager
         NUM STATISTICS = 5
            STATISTIC 0 = tlb_hits [Hits in the simple Ariel TLB] (hits) Enable level = 2
            STATISTIC 1 = tlb_evicts [Number of evictions in the simple Ariel TLB] (evictions) Enable level = 2
            STATISTIC 2 = tlb_translate_queries [Number of TLB translations performed] (translations) Enable level = 2
            STATISTIC 3 = tlb_shootdown [Number of TLB clears because of page-frees] (shootdowns) Enable level = 2
            STATISTIC 4 = tlb_page_allocs [Number of pages allocated by the memory manager] (pages) Enable level = 2
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = verbose (Verbosity for debugging. Increased numbers for increased verbosity.) [0]
            PARAMETER 1 = vtop_translate (Set to yes to perform virt-phys translation (TLB) or no to disable) [yes]
            PARAMETER 2 = pagemappolicy (Select the page mapping policy for Ariel [LINEAR|RANDOMIZED]) [LINEAR]
            PARAMETER 3 = translatecacheentries (Keep a translation cache of this many entries to improve emulated core performance) [4096]
            PARAMETER 4 = pagesize0 (Page size) [4096]
            PARAMETER 5 = pagecount0 (Page count) [131072]
            PARAMETER 6 = page_populate_0 (Pre-populate/partially pre-populate the page table, this is the file to read in.) []
    MemoryManagerSimple: Simple allocate-on-first touch memory manager
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:30:58, using file: arielmemmgr_simple.h
Num Modules = 2
      Module 0: CompressedBinaryTraceGenerator
         NUM PARAMETERS = 1
            PARAMETER 0 = trace_prefix (Sets the prefix for the trace file) [ariel-core-]
    CompressedBinaryTraceGenerator: Provides tracing to compressed file capabilities
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:14, using file: arielgzbintracegen.h
      Module 1: TextTraceGenerator
         NUM PARAMETERS = 1
            PARAMETER 0 = trace_prefix (Sets the prefix for the trace file) [ariel-core-]
    TextTraceGenerator: Provides tracing to text file capabilities
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:12, using file: arieltexttracegen.h
Num SSTPartitioners = 0
================================================================================
ELEMENT 7 = cacheTracer ()
Num Components = 1
      Component 0: cacheTracer
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = northBus (Connect towards cpu side)
            PORT 1 = southBus (Connect towards memory side)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = clock (Frequency, same as system clock frequency) [1 GHz]
            PARAMETER 1 = statsPrefix (writes stats to statsPrefix file) []
            PARAMETER 2 = tracePrefix (writes trace to tracePrefix tracing is enable) []
            PARAMETER 3 = debug (Print debug statements with increasing verbosity [0-10]) [0]
            PARAMETER 4 = statistics (0-No-stats, 1-print-stats) [0]
            PARAMETER 5 = pageSize (Page Size (bytes), used for selecting number of bins for address histogram ) [4096]
            PARAMETER 6 = accessLatencyBins (Number of bins for access latency histogram10) [<required>]
    cacheTracer: Cache Tracing Plugin for MemHierarchy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:17, using file: cacheTracer.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 8 = cassini ()
Num Components = 0
Num SubComponents = 5
      SubComponent 0: AddrHistogrammer
      Interface: SST::MemHierarchy::CacheListener
         NUM STATISTICS = 2
            STATISTIC 0 = histogram_reads [Histogram of page read counts] (counts) Enable level = 1
            STATISTIC 1 = histogram_writes [Histogram of page write counts] (counts) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = addr_cutoff (Addresses above this cutoff won't be recorded) [1TB]
            PARAMETER 1 = virtual_addr (Record virtual addresses (1) or physical (0)) [<required>]
    AddrHistogrammer: Address access histogram generator
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:49, using file: addrHistogrammer.h
      SubComponent 1: NextBlockPrefetcher
      Interface: SST::MemHierarchy::CacheListener
         NUM STATISTICS = 3
            STATISTIC 0 = prefetches_issued [Number of prefetch requests issued] (prefetches) Enable level = 1
            STATISTIC 1 = miss_events_processed [Number of cache misses received] (misses) Enable level = 2
            STATISTIC 2 = hit_events_processed [Number of cache hits received] (hits) Enable level = 2
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = cache_line_size (Size of the cache line the prefetcher is attached to) [64]
    NextBlockPrefetcher: Next Block Prefetcher
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:38, using file: nbprefetch.h
      SubComponent 2: PalaPrefetcher
      Interface: SST::MemHierarchy::CacheListener
         NUM STATISTICS = 4
            STATISTIC 0 = prefetches_issued [Counts number of prefetches issued] (prefetches) Enable level = 1
            STATISTIC 1 = prefetches_canceled_by_page_boundary [Counts number of prefetches which spanned over page boundaries and so did not issue] (prefetches) Enable level = 1
            STATISTIC 2 = prefetches_canceled_by_history [Counts number of prefetches which did not get issued because of prefetch history] (prefetches) Enable level = 1
            STATISTIC 3 = prefetch_opportunities [Counts the number of prefetch opportunities] (prefetches) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 10
            PARAMETER 0 = verbose (Controls the verbosity of the cassini components) []
            PARAMETER 1 = cache_line_size (Controls the cache line size of the cache the prefetcher is attached too) [64]
            PARAMETER 2 = history (Start of Address Range, for this controller.) [16]
            PARAMETER 3 = reach (Reach of the prefetcher (ie how far forward to make requests)) [2]
            PARAMETER 4 = detect_range (Range to detact addresses over in request-counts, default is 4.) [4]
            PARAMETER 5 = address_count (Number of addresses to keep in the prefetch table) [64]
            PARAMETER 6 = page_size (Start of Address Range, for this controller.) [4096]
            PARAMETER 7 = overrun_page_boundaries (Allow prefetcher to run over page alignment boundaries, default is 0 (false)) [0]
            PARAMETER 8 = tag_size (Number of bits used for address matching in table) [48]
            PARAMETER 9 = addr_size (Number of bits used for addresses) [64]
    PalaPrefetcher: Stride Prefetcher [Palacharla 1994]
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:30, using file: palaprefetch.h
      SubComponent 3: StridePrefetcher
      Interface: SST::MemHierarchy::CacheListener
         NUM STATISTICS = 4
            STATISTIC 0 = prefetches_issued [Number of prefetch requests issued] (prefetches) Enable level = 1
            STATISTIC 1 = prefetches_canceled_by_page_boundary [Prefetches which would not be executed because they span over a page boundary.] (prefetches) Enable level = 1
            STATISTIC 2 = prefetches_canceled_by_history [Prefetches which did not get issued because of a prefetch history in the table] (prefetches) Enable level = 1
            STATISTIC 3 = prefetch_opportunities [Count of opportunities to prefetch] (prefetches) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = verbose (Controls the verbosity of the Cassini component) [0]
            PARAMETER 1 = cache_line_size (Size of the cache line the prefetcher is attached to) [64]
            PARAMETER 2 = history (Number of entries to keep for historical comparison) [16]
            PARAMETER 3 = reach (Reach (how far forward the prefetcher should fetch lines)) [2]
            PARAMETER 4 = detect_range (Range to detect addresses over in request counts) [4]
            PARAMETER 5 = address_count (Number of addresses to keep in prefetch table) [64]
            PARAMETER 6 = page_size (Page size for this controller) [4096]
            PARAMETER 7 = overrun_page_boundaries (Allow prefetcher to run over page boundaries, 0 is no, 1 is yes) [0]
    StridePrefetcher: Stride Detection Prefetcher
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:23, using file: strideprefetch.h
      SubComponent 4: cacheLineTrack
      Interface: SST::MemHierarchy::CacheListener
         NUM STATISTICS = 5
            STATISTIC 0 = hist_reads_log2 [Histogram of log2(cacheline reads before eviction)] (counts) Enable level = 1
            STATISTIC 1 = hist_writes_log2 [Histogram of log2(cacheline write before eviction)] (counts) Enable level = 1
            STATISTIC 2 = hist_age_log2 [Histogram of log2(cacheline ages before eviction)] (counts) Enable level = 1
            STATISTIC 3 = hist_word_accesses [Histogram of cacheline words accessed before eviction] (counts) Enable level = 1
            STATISTIC 4 = evicts [Number of evictions seen] (counts) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = addr_cutoff (Addresses above this cutoff won't be recorded) [1TB]
    cacheLineTrack: Tracks cacheline usage before eviction
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:56, using file: cacheLineTrack.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 9 = ember ()
Num Components = 1
      Component 0: EmberEngine
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 4
            PORT 0 = detailed%(num_vNics)d (Port connected to the detailed model)
            PORT 1 = nic (Port connected to the nic)
            PORT 2 = loop (Port connected to the loopBack)
            PORT 3 = memoryHeap (Port connected to the memory heap)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 15
            PARAMETER 0 = verbose (Sets the output verbosity of the component) [0]
            PARAMETER 1 = jobId (Sets the job id) [-1]
            PARAMETER 2 = netMapName (used internally) [-1]
            PARAMETER 3 = _apiName (used internally) [-1]
            PARAMETER 4 = _jobId (used internally) [-1]
            PARAMETER 5 = _motifNum (used internally) [-1]
            PARAMETER 6 = motif_count (Sets the number of motifs which will be run in this simulation, default is 1) [1]
            PARAMETER 7 = distribModule (Sets the distribution SST module for compute modeling, default is a constant distribution of mean 1) [1.0]
            PARAMETER 8 = rankmapper (Sets the rank mapping SST module to load to rank translations, default is linear mapping) [ember.LinearMap]
            PARAMETER 9 = mapFile (Sets the name of the input file for custom map) [mapFile.txt]
            PARAMETER 10 = motif%(motif_count)d (Sets the event generator or motif for the engine) [ember.EmberPingPongGenerator]
            PARAMETER 11 = name (Sets the event generator or motif for the engine) [ember.EmberPingPongGenerator]
            PARAMETER 12 = api (Sets the api used by a motif) [hermesParams]
            PARAMETER 13 = spyplotmode (Sets the spyplot generation mode, 0 = none, 1 = spy on sends) [0]
            PARAMETER 14 = motifLog (Sets a file path to a file where motif execution details are written, empty = no log) []
    EmberEngine: Base communicator motif engine.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:34:58, using file: emberengine.h
Num SubComponents = 123
      SubComponent 0: 3DAMRMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 9
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.printmap (Prints a map of blocks to ranks (="no" or "yes")) [no]
            PARAMETER 2 = arg.blockfile (File containing the 3D AMR blocks (from MiniAMR)) [blocks.amr]
            PARAMETER 3 = arg.nx (Sets the size of a block in X) [8]
            PARAMETER 4 = arg.ny (Sets the size of a block in Y) [8]
            PARAMETER 5 = arg.nz (Sets the size of a block in Z) [8]
            PARAMETER 6 = arg.filetype (Mesh file type, set to 'binary' or 'text') [text]
            PARAMETER 7 = arg.fieldspercell (Sets the number of fields per mesh cell) [8]
            PARAMETER 8 = arg.verbose (Sets the verbosity of the output) [0]
    3DAMRMotif: Models an adaptive refinement step from MiniAMR
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:29, using file: mpi/motifs/ember3damr.h
      SubComponent 1: AllPingPongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.messageSize (Sets the message size of the ping pong operation) [128]
            PARAMETER 1 = arg.iterations (Sets the number of ping pong operations to perform) [1024]
            PARAMETER 2 = arg.computetime (Sets the time spent computing some values) [1000]
    AllPingPongMotif: Performs a All Ping Pong Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:04, using file: mpi/motifs/emberallpingpong.h
      SubComponent 2: AllgatherMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 22
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allgather [Time spent in Allgather event] (ns) Enable level = 0
            STATISTIC 16 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 18 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 19 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 20 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 21 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.iterations (Sets the number of alltoall operations to perform) [1]
            PARAMETER 1 = arg.bytes (Sets the number of bytes per rank) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
    AllgatherMotif: Performs a Allgather operation with type set to float64 and operation SUM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:27, using file: mpi/motifs/emberallgather.h
      SubComponent 3: AllgathervMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.iterations (Sets the number of alltoall operations to perform) [1]
            PARAMETER 1 = arg.bytes (Sets the number of bytes per rank) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
    AllgathervMotif: Performs a Allgatherv operation with type set to float64 and operation SUM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:19, using file: mpi/motifs/emberallgatherv.h
      SubComponent 4: AllreduceMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.iterations (Sets the number of allreduce operations to perform) [1]
            PARAMETER 1 = arg.count (Sets the number of elements to reduce) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
    AllreduceMotif: Performs a Allreduce operation with type set to float64 and operation SUM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:11, using file: mpi/motifs/emberallreduce.h
      SubComponent 5: AlltoallMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.iterations (Sets the number of alltoall operations to perform) [1]
            PARAMETER 1 = arg.bytes (Sets the number of bytes per rank) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
    AlltoallMotif: Performs a Alltoall operation with type set to float64 and operation SUM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:34, using file: mpi/motifs/emberalltoall.h
      SubComponent 6: AlltoallvMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.iterations (Sets the number of alltoall operations to perform) [1]
            PARAMETER 1 = arg.bytes (Sets the number of bytes per rank) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
    AlltoallvMotif: Performs a Alltoallv operation with type set to float64 and operation SUM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:41, using file: mpi/motifs/emberalltoallv.h
      SubComponent 7: BarrierMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = arg.iterations (Sets the number of barrier operations to perform) [1024]
            PARAMETER 1 = arg.compute (Sets the time spent computing) [1]
    BarrierMotif: Performs a Barrier Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:56, using file: mpi/motifs/emberbarrier.h
      SubComponent 8: BcastMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = arg.iterations (Sets the number of bcast operations to perform) [1]
            PARAMETER 1 = arg.count (Sets the number of elements to bcast) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
            PARAMETER 3 = arg.root (Sets the root of the reduction) [0]
    BcastMotif: Performs a broadcast operation with type set to float64 from a user-specified reduction-tree root
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:56, using file: mpi/motifs/emberbcast.h
      SubComponent 9: BiPingPongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = arg.messageSize (Sets the message size of the operation) [1024]
            PARAMETER 1 = arg.iterations (Sets the number of operations to perform) [1]
    BiPingPongMotif: Performs a InOut Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:42, using file: mpi/motifs/emberbipingpong.h
      SubComponent 10: CMT1DMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 9
            PARAMETER 0 = arg.iterations (Sets the number of data exchanges to perform) [1]
            PARAMETER 1 = arg.elementsize (Sets the number of gridpoints per element) [10]
            PARAMETER 2 = arg.variables (Sets the number of physical quantities for which derivatives are calculated) [1]
            PARAMETER 3 = arg.threads (Sets the number of MPI threads per processor) [1]
            PARAMETER 4 = arg.nelt (Sets the number of elements per processor) [1000]
            PARAMETER 5 = arg.processorflops (Sets the processor flops for compute time estimation) [4]
            PARAMETER 6 = arg.processorfreq (Sets the processor frequency for compute time estimation) [2.5]
            PARAMETER 7 = arg.nsComputeMean (Sets the mean compute time per processor) [1000]
            PARAMETER 8 = arg.nsComputeStddev (Sets the stddev in compute time per processor) [50]
    CMT1DMotif: Performs nearest neighbor exchange over a linear/1D decomposition
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:45, using file: mpi/motifs/embercmt1d.h
      SubComponent 11: CMT2DMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 13
            PARAMETER 0 = arg.iterations (Sets the number of data exchanges to perform) [1]
            PARAMETER 1 = arg.elementsize (Sets the number of gridpoints per element) [10]
            PARAMETER 2 = arg.variables (Sets the number of physical quantities for which derivatives are calculated) [1]
            PARAMETER 3 = arg.px (Sets the size of the processors in the machine in x_dim) [4]
            PARAMETER 4 = arg.py (Sets the size of the processors in the machine in y_dim) [4]
            PARAMETER 5 = arg.threads (Sets the number of MPI threads per processor) [1]
            PARAMETER 6 = arg.mx (Sets the number of elements per processor in x dim) [10]
            PARAMETER 7 = arg.my (Sets the number of elements per processor in y dim) [10]
            PARAMETER 8 = arg.mz (Sets the number of elements per processor in z dim) [10]
            PARAMETER 9 = arg.processorflops (Sets the processor flops for compute time estimation) [4]
            PARAMETER 10 = arg.processorfreq (Sets the processor frequency for compute time estimation) [2.5]
            PARAMETER 11 = arg.nsComputeMean (Sets the mean compute time per processor) [1000]
            PARAMETER 12 = arg.nsComputeStddev (Sets the stddev in compute time per processor) [50]
    CMT2DMotif: Performs nearest neighbor exchange over a 2D mesh decomposition
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:52, using file: mpi/motifs/embercmt2d.h
      SubComponent 12: CMT3DMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 14
            PARAMETER 0 = arg.iterations (Sets the number of data exchanges to perform) [1]
            PARAMETER 1 = arg.elementsize (Sets the number of gridpoints per element) [10]
            PARAMETER 2 = arg.variables (Sets the number of physical quantities for which derivatives are calculated) [1]
            PARAMETER 3 = arg.px (Sets the size of the processors in the machine in x_dim) [8]
            PARAMETER 4 = arg.py (Sets the size of the processors in the machine in y_dim) [8]
            PARAMETER 5 = arg.pz (Sets the size of the processors in the machine in z_dim) [8]
            PARAMETER 6 = arg.threads (Sets the number of MPI threads per processor) [1]
            PARAMETER 7 = arg.mx (Sets the number of elements per MPI rank in x dim) [10]
            PARAMETER 8 = arg.my (Sets the number of elements per MPI rank in y dim) [10]
            PARAMETER 9 = arg.mz (Sets the number of elements per MPI rank in z dim) [10]
            PARAMETER 10 = arg.processorflops (Sets the processor flops for compute time estimation) [4]
            PARAMETER 11 = arg.processorfreq (Sets the processor frequency for compute time estimation) [2.5]
            PARAMETER 12 = arg.nsComputeMean (Sets the mean compute time per processor) [1000]
            PARAMETER 13 = arg.nsComputeStddev (Sets the stddev in compute time per processor) [50]
    CMT3DMotif: Performs nearest neighbor exchange over a 3D machine decomposition
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:59, using file: mpi/motifs/embercmt3d.h
      SubComponent 13: CMTCRMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 14
            PARAMETER 0 = arg.iterations (Sets the number of data exchanges to perform) [1]
            PARAMETER 1 = arg.elementsize (Sets the number of gridpoints per element) [10]
            PARAMETER 2 = arg.variables (Sets the number of physical quantities for which derivatives are calculated) [1]
            PARAMETER 3 = arg.mx (Sets the number of elements per processor in x dim) [10]
            PARAMETER 4 = arg.my (Sets the number of elements per processor in y dim) [10]
            PARAMETER 5 = arg.mz (Sets the number of elements per processor in z dim) [10]
            PARAMETER 6 = arg.px (Sets the size of the processors in the machine in x_dim) [4]
            PARAMETER 7 = arg.py (Sets the size of the processors in the machine in y_dim) [4]
            PARAMETER 8 = arg.pz (Sets the size of the processors in the machine in z_dim) [4]
            PARAMETER 9 = arg.threads (Sets the number of MPI threads per processor) [1]
            PARAMETER 10 = arg.processorflops (Sets the processor flops for compute time estimation) [4]
            PARAMETER 11 = arg.processorfreq (Sets the processor frequency for compute time estimation) [2.5]
            PARAMETER 12 = arg.nsComputeMean (Sets the mean compute time per processor) [1000]
            PARAMETER 13 = arg.nsComputeStddev (Sets the stddev in compute time per processor) [50]
    CMTCRMotif: Performs all-to-all communication using Crystal Router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:07, using file: mpi/motifs/embercmtcr.h
      SubComponent 14: CommDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = pex (Sets the processors in the X-dimension) [1]
            PARAMETER 1 = pey (Sets the processors in the Y-dimension) [1]
            PARAMETER 2 = pez (Sets the processors in the Z-dimension) [1]
            PARAMETER 3 = basephase (Starts the phase at offset.) [0]
            PARAMETER 4 = compute_at_step (Sets the computation time in between each communication phase in nanoseconds) [1000]
            PARAMETER 5 = items_per_node (Sets the number of items to exchange between nodes per phase) [100]
    CommDoubleMotif: Performs a communication doubling pattern based on a research scientific analytics problem
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:36:54, using file: mpi/motifs/ember3dcommdbl.h
      SubComponent 15: CommMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.messagesize (Sets the size of the message in bytes) [0]
    CommMotif: Performs a comm_split test.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:22, using file: mpi/motifs/embercomm.h
      SubComponent 16: DetailedRingMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.messagesize (Sets the size of the message in bytes) [1024]
    DetailedRingMotif: Performs a Ring Motif with detailed model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:16, using file: mpi/motifs/emberdetailedring.h
      SubComponent 17: DetailedStreamMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    DetailedStreamMotif: Performs a Stream Motif with detailed model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:25, using file: mpi/motifs/emberdetailedstream.h
      SubComponent 18: FFT3DMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 12
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.nx (Sets the size of a block in X) [8]
            PARAMETER 2 = arg.ny (Sets the size of a block in Y) [8]
            PARAMETER 3 = arg.nz (Sets the size of a block in Z) [8]
            PARAMETER 4 = arg.npRow (Sets the number of rows in the PE decomposition) [0]
            PARAMETER 5 = arg.nsPerElement () []
            PARAMETER 6 = arg.fwd_fft1 () []
            PARAMETER 7 = arg.fwd_fft2 () []
            PARAMETER 8 = arg.fwd_fft3 () []
            PARAMETER 9 = arg.bwd_fft1 () []
            PARAMETER 10 = arg.bwd_fft2 () []
            PARAMETER 11 = arg.bwd_fft3 () []
    FFT3DMotif: Models an FFT
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:38, using file: mpi/motifs/emberfft3d.h
      SubComponent 19: FiniMotif
      Interface: SST::Ember::EmberFiniGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    FiniMotif: Performs a communication finalize Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:36:47, using file: mpi/motifs/emberfini.h
      SubComponent 20: Halo2DMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = arg.iterations (Sets the number of halo2d operations to perform) [10]
            PARAMETER 1 = arg.computenano (Sets the number of nanoseconds to compute for) [10]
            PARAMETER 2 = arg.messagesizex (Sets the message size in X-dimension (in bytes)) [128]
            PARAMETER 3 = arg.messagesizey (Sets the message size in Y-dimension (in bytes)) [128]
            PARAMETER 4 = arg.computecopy (Sets the time spent copying data between messages) [5]
            PARAMETER 5 = arg.sizex (Sets the processor decomposition in Y) [0]
            PARAMETER 6 = arg.sizey (Sets the processor decomposition in X) [0]
    Halo2DMotif: Performs a 2D halo exchange Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:37:47, using file: mpi/motifs/emberhalo2d.h
      SubComponent 21: Halo2DNBRMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = arg.iterations (Sets the number of halo2d operations to perform) [10]
            PARAMETER 1 = arg.computenano (Sets the number of nanoseconds to compute for) [10]
            PARAMETER 2 = arg.messagesizex (Sets the message size in X-dimension (in bytes)) [128]
            PARAMETER 3 = arg.messagesizey (Sets the message size in Y-dimension (in bytes)) [128]
            PARAMETER 4 = arg.computecopy (Sets the time spent copying data between messages) [5]
            PARAMETER 5 = arg.sizex (Sets the processor decomposition in Y) [0]
            PARAMETER 6 = arg.sizey (Sets the processor decomposition in X) [0]
    Halo2DNBRMotif: Performs a 2D halo exchange Motif with non-blocking receives
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:37:55, using file: mpi/motifs/emberhalo2dNBR.h
      SubComponent 22: Halo3D26Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 14
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [10]
            PARAMETER 1 = arg.computetime (Sets the number of nanoseconds to compute for) [10]
            PARAMETER 2 = arg.flopspercell (Sets the number of number of floating point operations per cell, default is 26 (27 point stencil)) [26]
            PARAMETER 3 = arg.peflops (Sets the FLOP/s rate of the processor (used to calculate compute time if not supplied, default is 10000000000 FLOP/s)) [10000000000]
            PARAMETER 4 = arg.nx (Sets the problem size in X-dimension) [100]
            PARAMETER 5 = arg.ny (Sets the problem size in Y-dimension) [100]
            PARAMETER 6 = arg.nz (Sets the problem size in Z-dimension) [100]
            PARAMETER 7 = arg.pex (Sets the processors in X-dimension (0=auto)) [0]
            PARAMETER 8 = arg.pey (Sets the processors in Y-dimension (0=auto)) [0]
            PARAMETER 9 = arg.pez (Sets the processors in Z-dimension (0=auto)) [0]
            PARAMETER 10 = arg.copytime (Sets the time spent copying data between messages) [5]
            PARAMETER 11 = arg.doreduce (How often to do reduces, 1 = each iteration) [1]
            PARAMETER 12 = arg.fields_per_cell (Specify how many variables are being computed per cell (this is one of the dimensions in message size. Default is 1) [1]
            PARAMETER 13 = arg.datatype_width (Specify the size of a single variable, single grid point, typically 8 for double, 4 for float, default is 8 (double). This scales message size to ensure byte count is correct.) [8]
    Halo3D26Motif: Performs a 3D 26-non-blocking motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:40:45, using file: mpi/motifs/emberhalo3d26.h
      SubComponent 23: Halo3DMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 15
            PARAMETER 0 = arg.iterations (Sets the number of halo3d operations to perform) [10]
            PARAMETER 1 = arg.computetime (Sets the number of nanoseconds to compute for) [10]
            PARAMETER 2 = arg.flopspercell (Sets the number of number of floating point operations per cell, default is 26 (27 point stencil)) [26]
            PARAMETER 3 = arg.peflops (Sets the FLOP/s rate of the processor (used to calculate compute time if not supplied, default is 10000000000 FLOP/s)) [10000000000]
            PARAMETER 4 = arg.nx (Sets the problem size in X-dimension) [100]
            PARAMETER 5 = arg.ny (Sets the problem size in Y-dimension) [100]
            PARAMETER 6 = arg.nz (Sets the problem size in Z-dimension) [100]
            PARAMETER 7 = arg.pex (Sets the processors in X-dimension (0=auto)) [0]
            PARAMETER 8 = arg.pey (Sets the processors in Y-dimension (0=auto)) [0]
            PARAMETER 9 = arg.pez (Sets the processors in Z-dimension (0=auto)) [0]
            PARAMETER 10 = arg.copytime (Sets the time spent copying data between messages) [5]
            PARAMETER 11 = arg.doreduce (How often to do reduces, 1 = each iteration) [1]
            PARAMETER 12 = arg.fields_per_cell (Specify how many variables are being computed per cell (this is one of the dimensions in message size. Default is 1) [1]
            PARAMETER 13 = arg.field_chunk (Specify how many variables are being computed per cell (this is one of the dimensions in message size. Default is 1) [1]
            PARAMETER 14 = arg.datatype_width (Specify the size of a single variable, single grid point, typically 8 for double, 4 for float, default is 8 (double). This scales message size to ensure byte count is correct.) [8]
    Halo3DMotif: Performs a 3D blocking motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:40:20, using file: mpi/motifs/emberhalo3d.h
      SubComponent 24: Halo3DSVMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 15
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [10]
            PARAMETER 1 = arg.computetime (Sets the number of nanoseconds to compute for) [10]
            PARAMETER 2 = arg.flopspercell (Sets the number of number of floating point operations per cell, default is 26 (27 point stencil)) [26]
            PARAMETER 3 = arg.peflops (Sets the FLOP/s rate of the processor (used to calculate compute time if not supplied, default is 10000000000 FLOP/s)) [10000000000]
            PARAMETER 4 = arg.nx (Sets the problem size in X-dimension) [100]
            PARAMETER 5 = arg.ny (Sets the problem size in Y-dimension) [100]
            PARAMETER 6 = arg.nz (Sets the problem size in Z-dimension) [100]
            PARAMETER 7 = arg.pex (Sets the processors in X-dimension (0=auto)) [0]
            PARAMETER 8 = arg.pey (Sets the processors in Y-dimension (0=auto)) [0]
            PARAMETER 9 = arg.pez (Sets the processors in Z-dimension (0=auto)) [0]
            PARAMETER 10 = arg.copytime (Sets the time spent copying data between messages) [5]
            PARAMETER 11 = arg.doreduce (How often to do reduces, 1 = each iteration) [1]
            PARAMETER 12 = arg.fields_per_cell (Specify how many variables are being computed per cell (this is one of the dimensions in message size. Default is 1) [1]
            PARAMETER 13 = arg.field_chunk (Specify how many variables are being computed per field chunk. Default is 1) [1]
            PARAMETER 14 = arg.datatype_width (Specify the size of a single variable, single grid point, typically 8 for double, 4 for float, default is 8 (double). This scales message size to ensure byte count is correct.) [8]
    Halo3DSVMotif: Performs a 3D blocking motif with single variable commmunication
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:40:37, using file: mpi/motifs/emberhalo3dsv.h
      SubComponent 25: IncastMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.messageSize (Sets the message size of the ping pong operation) [1024]
            PARAMETER 1 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 2 = arg.incasttarget (Sets the incast target for communications) [0]
    IncastMotif: Performs a message incast Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:40:54, using file: mpi/motifs/emberincast.h
      SubComponent 26: InitMotif
      Interface: SST::Ember::EmberInitGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    InitMotif: Performs a communication Initialization Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:36:39, using file: mpi/motifs/emberinit.h
      SubComponent 27: LQCDMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.nx (Sets the size of a lattice site in X) [8]
            PARAMETER 2 = arg.ny (Sets the size of a lattice site in Y) [8]
            PARAMETER 3 = arg.nz (Sets the size of a lattice site in Z) [8]
            PARAMETER 4 = arg.nt (Sets the size of a lattice site in T) [8]
            PARAMETER 5 = arg.peflops (Processor element flops per second) [1000000000000]
            PARAMETER 6 = arg.computetime () []
            PARAMETER 7 = arg.verbose (Sets the verbosity of the output) [0]
    LQCDMotif: CG portion of Lattice QCD (MILC) with Naik Gathers.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:40:29, using file: mpi/motifs/emberlqcd.h
      SubComponent 28: MsgRateMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.msgSize (Sets the size of the message in bytes) [0]
            PARAMETER 2 = arg.numMsgs (Sets the size of the message in bytes) [128]
    MsgRateMotif: Performs a message rate test.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:15, using file: mpi/motifs/embermsgrate.h
      SubComponent 29: NASLUMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.pex (Sets the processor array size in X-dimension, 0 means auto-calculate) [0]
            PARAMETER 2 = arg.pey (Sets the processor array size in Y-dimension, 0 means auto-calculate) [0]
            PARAMETER 3 = arg.nx (Sets the problem size in the X-dimension) [50]
            PARAMETER 4 = arg.ny (Sets the problem size in the Y-dimension) [50]
            PARAMETER 5 = arg.nz (Sets the problem size in the Z-dimension) [50]
            PARAMETER 6 = arg.nzblock (Sets the Z-dimensional block size (Nz % Nzblock == 0, default is 1)) [1]
            PARAMETER 7 = arg.computetime (Sets the compute time per KBA-data block in nanoseconds) [1000]
    NASLUMotif: Performs a NAS-LU communication motif from 2 (opposite) vertices
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:08, using file: mpi/motifs/embernaslu.h
      SubComponent 30: NullMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    NullMotif: Performs an idle on the node, no traffic can be generated.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:37:32, using file: mpi/motifs/embernull.h
      SubComponent 31: PingPongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = arg.messageSize (Sets the message size of the ping pong operation) [1024]
            PARAMETER 1 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 2 = arg.rank2 (Sets the 2nd rank to pingpong with (0 is the 1st)) [1]
            PARAMETER 3 = arg.blockingSend (Sets the send mode) [1]
            PARAMETER 4 = arg.blockingRecv (Sets the recv mode) [1]
            PARAMETER 5 = arg.waitall (Sets the wait mode) [1]
    PingPongMotif: Performs a Ping-Pong Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:33, using file: mpi/motifs/emberpingpong.h
      SubComponent 32: RandomMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = arg.messagesize (Sets the message size of the communications (in count of DOUBLE)) [1]
            PARAMETER 1 = arg.iterations (Sets the number of iterations to perform) [1]
    RandomMotif: Performs a random traffic pattern communication
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:30, using file: mpi/motifs/emberrandomgen.h
      SubComponent 33: ReduceMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = arg.iterations (Sets the number of reduce operations to perform) [1]
            PARAMETER 1 = arg.count (Sets the number of elements to reduce) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
            PARAMETER 3 = arg.root (Sets the root of the reduction) [0]
    ReduceMotif: Performs a reduction operation with type set to float64 and operation SUM from a user-specified reduction-tree root
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:39:49, using file: mpi/motifs/emberreduce.h
      SubComponent 34: RingMotif
      Interface: SST::Ember::EmberRingGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.messagesize (Sets the size of the message in bytes) [1024]
    RingMotif: Performs a Ring Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:09, using file: mpi/motifs/emberring.h
      SubComponent 35: SIRIUSTraceMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = arg.traceprefix (Sets the trace prefix for loading SIRIUS files) []
    SIRIUSTraceMotif: Performs a SIRIUS trace-based execution
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:21, using file: mpi/motifs/embersiriustrace.h
      SubComponent 36: ScatterMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = arg.iterations (Sets the number of bcast operations to perform) [1]
            PARAMETER 1 = arg.count (Sets the number of elements to bcast) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
            PARAMETER 3 = arg.root (Sets the root of the reduction) [0]
    ScatterMotif: Performs a broadcast operation with type set to float64 from a user-specified reduction-tree root
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:40:04, using file: mpi/motifs/emberscatter.h
      SubComponent 37: ScattervMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = arg.iterations (Sets the number of bcast operations to perform) [1]
            PARAMETER 1 = arg.count (Sets the number of elements to bcast) [1]
            PARAMETER 2 = arg.compute (Sets the time spent computing) [1]
            PARAMETER 3 = arg.root (Sets the root of the reduction) [0]
    ScattervMotif: Performs a broadcast operation with type set to float64 from a user-specified reduction-tree root
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:40:12, using file: mpi/motifs/emberscatterv.h
      SubComponent 38: SendrecvMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 22
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Sendrecv [Time spent in Sendrecv event] (ns) Enable level = 0
            STATISTIC 12 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 13 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 15 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 16 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 18 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 19 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 20 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 21 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    SendrecvMotif: Performs a Sendrecv Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:37:01, using file: mpi/motifs/embersendrecv.h
      SubComponent 39: ShmemAddDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAddDoubleMotif: SHMEM add double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAdd.h
      SubComponent 40: ShmemAddFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAddFloatMotif: SHMEM add float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAdd.h
      SubComponent 41: ShmemAddIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAddIntMotif: SHMEM add int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAdd.h
      SubComponent 42: ShmemAddLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAddLongMotif: SHMEM add long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAdd.h
      SubComponent 43: ShmemAlltoall32Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAlltoall32Motif: SHMEM alltoall32
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAlltoall.h
      SubComponent 44: ShmemAlltoall64Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAlltoall64Motif: SHMEM alltoall64
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAlltoall.h
      SubComponent 45: ShmemAlltoalls32Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAlltoalls32Motif: SHMEM alltoalls32
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAlltoalls.h
      SubComponent 46: ShmemAlltoalls64Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAlltoalls64Motif: SHMEM alltoalls64
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAlltoalls.h
      SubComponent 47: ShmemAtomicIncIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAtomicIncIntMotif: SHMEM atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicInc.h
      SubComponent 48: ShmemAtomicIncLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAtomicIncLongMotif: SHMEM atomic inc long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicInc.h
      SubComponent 49: ShmemAtomicIncV2IntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAtomicIncV2IntMotif: SHMEM atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicIncV2.h
      SubComponent 50: ShmemAtomicIncV2LongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemAtomicIncV2LongMotif: SHMEM atomic inc long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicIncV2.h
      SubComponent 51: ShmemBarrierAllMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemBarrierAllMotif: SHMEM barrier_all
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemBarrierAll.h
      SubComponent 52: ShmemBarrierMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemBarrierMotif: SHMEM barrier
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemBarrier.h
      SubComponent 53: ShmemBroadcast32Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemBroadcast32Motif: SHMEM broadcasts32
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemBroadcast.h
      SubComponent 54: ShmemBroadcast64Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemBroadcast64Motif: SHMEM broadcasts64
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemBroadcast.h
      SubComponent 55: ShmemCollect32Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemCollect32Motif: SHMEM collects32
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemCollect.h
      SubComponent 56: ShmemCollect64Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemCollect64Motif: SHMEM collects64
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemCollect.h
      SubComponent 57: ShmemCswapDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemCswapDoubleMotif: SHMEM cswap double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemCswap.h
      SubComponent 58: ShmemCswapFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemCswapFloatMotif: SHMEM cswap float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemCswap.h
      SubComponent 59: ShmemCswapIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemCswapIntMotif: SHMEM cswap int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemCswap.h
      SubComponent 60: ShmemCswapLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemCswapLongMotif: SHMEM cswap long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemCswap.h
      SubComponent 61: ShmemFAM_AtomicIncIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_AtomicIncIntMotif: SHMEM atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_AtomicInc.h
      SubComponent 62: ShmemFAM_AtomicIncLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_AtomicIncLongMotif: SHMEM atomic inc long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_AtomicInc.h
      SubComponent 63: ShmemFAM_CswapIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_CswapIntMotif: SHMEM atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_Cswap.h
      SubComponent 64: ShmemFAM_CswapLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_CswapLongMotif: SHMEM atomic inc long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_Cswap.h
      SubComponent 65: ShmemFAM_GathervMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_GathervMotif: SHMEM FAM_Gatherv
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_Gatherv.h
      SubComponent 66: ShmemFAM_Get2Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_Get2Motif: SHMEM FAM_Get2
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_Get2.h
      SubComponent 67: ShmemFAM_PutMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_PutMotif: SHMEM FAM_Put
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_Put.h
      SubComponent 68: ShmemFAM_ScattervMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFAM_ScattervMotif: SHMEM FAM_Scatterv
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFAM_Scatterv.h
      SubComponent 69: ShmemFaddDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFaddDoubleMotif: SHMEM fadd double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFadd.h
      SubComponent 70: ShmemFaddFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFaddFloatMotif: SHMEM fadd float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFadd.h
      SubComponent 71: ShmemFaddIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFaddIntMotif: SHMEM fadd int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFadd.h
      SubComponent 72: ShmemFaddLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFaddLongMotif: SHMEM fadd long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFadd.h
      SubComponent 73: ShmemFcollect32Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFcollect32Motif: SHMEM fcollects32
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFcollect.h
      SubComponent 74: ShmemFcollect64Motif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemFcollect64Motif: SHMEM fcollects64
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemFcollect.h
      SubComponent 75: ShmemGetDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetDoubleMotif: SHMEM get double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGet.h
      SubComponent 76: ShmemGetFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetFloatMotif: SHMEM get float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGet.h
      SubComponent 77: ShmemGetIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetIntMotif: SHMEM get int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGet.h
      SubComponent 78: ShmemGetLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetLongMotif: SHMEM get long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGet.h
      SubComponent 79: ShmemGetNBIDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetNBIDoubleMotif: SHMEM get double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetNBI.h
      SubComponent 80: ShmemGetNBIFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetNBIFloatMotif: SHMEM get float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetNBI.h
      SubComponent 81: ShmemGetNBIIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetNBIIntMotif: SHMEM get int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetNBI.h
      SubComponent 82: ShmemGetNBILongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetNBILongMotif: SHMEM get long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetNBI.h
      SubComponent 83: ShmemGetvDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetvDoubleMotif: SHMEM getv double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetv.h
      SubComponent 84: ShmemGetvFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetvFloatMotif: SHMEM getv float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetv.h
      SubComponent 85: ShmemGetvIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetvIntMotif: SHMEM getv int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetv.h
      SubComponent 86: ShmemGetvLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemGetvLongMotif: SHMEM getv long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemGetv.h
      SubComponent 87: ShmemHotAtomicIncIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemHotAtomicIncIntMotif: SHMEM hot spot atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicInc.h
      SubComponent 88: ShmemHotAtomicIncLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemHotAtomicIncLongMotif: SHMEM hot spot atomic inc long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicInc.h
      SubComponent 89: ShmemHotAtomicIncV2IntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemHotAtomicIncV2IntMotif: SHMEM hot spot atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicIncV2.h
      SubComponent 90: ShmemHotAtomicIncV2LongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemHotAtomicIncV2LongMotif: SHMEM hot spot atomic inc long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicIncV2.h
      SubComponent 91: ShmemNSAtomicIncIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemNSAtomicIncIntMotif: SHMEM not same nmode atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicInc.h
      SubComponent 92: ShmemNSAtomicIncV2IntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemNSAtomicIncV2IntMotif: SHMEM not same nmode atomic inc int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemAtomicIncV2.h
      SubComponent 93: ShmemPutDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutDoubleMotif: SHMEM put double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPut.h
      SubComponent 94: ShmemPutFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutFloatMotif: SHMEM put float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPut.h
      SubComponent 95: ShmemPutIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutIntMotif: SHMEM put int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPut.h
      SubComponent 96: ShmemPutLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutLongMotif: SHMEM put long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPut.h
      SubComponent 97: ShmemPutvDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutvDoubleMotif: SHMEM putv double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPutv.h
      SubComponent 98: ShmemPutvFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutvFloatMotif: SHMEM putv float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPutv.h
      SubComponent 99: ShmemPutvIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutvIntMotif: SHMEM putv int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPutv.h
      SubComponent 100: ShmemPutvLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemPutvLongMotif: SHMEM putv long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemPutv.h
      SubComponent 101: ShmemReductionDoubleMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemReductionDoubleMotif: SHMEM reduction double
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemReduction.h
      SubComponent 102: ShmemReductionFloatMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemReductionFloatMotif: SHMEM reduction float
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemReduction.h
      SubComponent 103: ShmemReductionIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemReductionIntMotif: SHMEM reduction int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemReduction.h
      SubComponent 104: ShmemReductionLongLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemReductionLongLongMotif: SHMEM reduction long long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemReduction.h
      SubComponent 105: ShmemReductionLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemReductionLongMotif: SHMEM reduction long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemReduction.h
      SubComponent 106: ShmemRing2IntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemRing2IntMotif: SHMEM ring2 int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemRing2.h
      SubComponent 107: ShmemRingIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemRingIntMotif: SHMEM ring2 int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemRing.h
      SubComponent 108: ShmemSwapIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemSwapIntMotif: SHMEM swap int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemSwap.h
      SubComponent 109: ShmemSwapLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemSwapLongMotif: SHMEM swap long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemSwap.h
      SubComponent 110: ShmemTestMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemTestMotif: SHMEM test
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemTest.h
      SubComponent 111: ShmemWaitIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemWaitIntMotif: SHMEM wait int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemWait.h
      SubComponent 112: ShmemWaitLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemWaitLongMotif: SHMEM wait long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemWait.h
      SubComponent 113: ShmemWaitUntilIntMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemWaitUntilIntMotif: SHMEM wait_until int
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemWaitUntil.h
      SubComponent 114: ShmemWaitUntilLongMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ShmemWaitUntilLongMotif: SHMEM wait_until long
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: shmem/motifs/emberShmemWaitUntil.h
      SubComponent 115: StopMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = arg.iterations (Sets the number of barrier operations to perform) [1024]
            PARAMETER 1 = arg.compute (Sets the time spent computing) [1]
    StopMotif: NetworkSim: Performs a Barrier Motif and gives a fatal
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:14, using file: mpi/motifs/emberstop.h
      SubComponent 116: Sweep2DMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.nx (Sets the problem size in the X-dimension) [50]
            PARAMETER 2 = arg.ny (Sets the problem size in the Y-dimension) [50]
            PARAMETER 3 = arg.y_block (Sets the Y-blocking factor (must be Ny % y_block == 0, default is 1 (no blocking))) [1]
            PARAMETER 4 = arg.computetime (Sets the compute time per KBA-data block in nanoseconds) [1000]
    Sweep2DMotif: Performs a 2D sweep exchange Motif with multiple vertex communication ordering
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:02, using file: mpi/motifs/embersweep2d.h
      SubComponent 117: Sweep3DMotif
      Interface: SST::Ember::EmberSweep3DGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 12
            PARAMETER 0 = arg.iterations (Sets the number of ping pong operations to perform) [1]
            PARAMETER 1 = arg.pex (Sets the processor array size in X-dimension, 0 means auto-calculate) [0]
            PARAMETER 2 = arg.pey (Sets the processor array size in Y-dimension, 0 means auto-calculate) [0]
            PARAMETER 3 = arg.nx (Sets the problem size in the X-dimension) [50]
            PARAMETER 4 = arg.ny (Sets the problem size in the Y-dimension) [50]
            PARAMETER 5 = arg.nz (Sets the problem size in the Z-dimension) [50]
            PARAMETER 6 = arg.kba (Sets the KBA (Nz-K blocking factor, default is 1 (no blocking))) [1]
            PARAMETER 7 = arg.computetime (Sets the compute time per nx * ny block in picoseconds) [1000]
            PARAMETER 8 = arg.fields_per_cell (Sets the number of fields at each cell point) [8]
            PARAMETER 9 = arg.datatype_width (Sets the width of the datatype used at the cell) [8]
            PARAMETER 10 = arg.nodeflops (Sets the FLOP/s count for the MPI rank) [1000000000]
            PARAMETER 11 = arg.flops_per_cell (Sets the number of FLOPs per cell) [275]
    Sweep3DMotif: Performs a 3D sweep communication motif from all 8 vertices
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:41:01, using file: mpi/motifs/embersweep3d.h
      SubComponent 118: TestMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 22
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Test [Time spent in Test event] (ns) Enable level = 0
            STATISTIC 12 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 13 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 15 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 16 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 18 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 19 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 20 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 21 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    TestMotif: Performs a Test Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:37:17, using file: mpi/motifs/embertest.h
      SubComponent 119: TestanyMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 23
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Test [Time spent in Test event] (ns) Enable level = 0
            STATISTIC 12 = time-Testany [Time spent in Testany event] (ns) Enable level = 0
            STATISTIC 13 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 14 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 15 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 16 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 17 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 18 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 19 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 20 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 21 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 22 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    TestanyMotif: Performs a Testany Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:37:25, using file: mpi/motifs/embertestany.h
      SubComponent 120: TrafficGenMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = arg.messageSize (Sets the size of exchange) [1]
            PARAMETER 1 = arg.mean (Sets the mean time between exchange) [1]
            PARAMETER 2 = arg.stddev (Sets the stddev of time between exchange) [1]
            PARAMETER 3 = arg.startDelay (Sets the stddev of time between exchange) [1]
    TrafficGenMotif: Models network traffic
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:38:49, using file: mpi/motifs/emberTrafficGen.h
      SubComponent 121: UnstructuredMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = arg.iterations (Sets the number of unstructured motif operations to perform) [1]
            PARAMETER 1 = arg.computetime (Sets the number of nanoseconds to compute for) [0]
            PARAMETER 2 = arg.graphfile (Name of the file the includes the communication graph) [-1]
            PARAMETER 3 = arg.p_size (Sets the problem size) [10000]
            PARAMETER 4 = arg.fields_per_cell (Specify how many variables are being computed per cell (this is one of the dimensions in message size. Default is 1) [1]
            PARAMETER 5 = arg.datatype_width (Specify the size of a single variable, single grid point, typically 8 for double, 4 for float, default is 8 (double). This scales message size to ensure byte count is correct.) [8]
    UnstructuredMotif: NetworkSim: Performs an Unstructured Communication Motif based on an input graph
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:37, using file: mpi/motifs/emberunstructured.h
      SubComponent 122: WaitanyMotif
      Interface: SST::Ember::EmberGenerator
         NUM STATISTICS = 21
            STATISTIC 0 = time-Init [Time spent in Init event] (ns) Enable level = 0
            STATISTIC 1 = time-Finalize [Time spent in Finalize event] (ns) Enable level = 0
            STATISTIC 2 = time-Rank [Time spent in Rank event] (ns) Enable level = 0
            STATISTIC 3 = time-Size [Time spent in Size event] (ns) Enable level = 0
            STATISTIC 4 = time-Send [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 5 = time-Recv [Time spent in Recv event] (ns) Enable level = 0
            STATISTIC 6 = time-Irecv [Time spent in Irecv event] (ns) Enable level = 0
            STATISTIC 7 = time-Isend [Time spent in Isend event] (ns) Enable level = 0
            STATISTIC 8 = time-Wait [Time spent in Wait event] (ns) Enable level = 0
            STATISTIC 9 = time-Waitall [Time spent in Waitall event] (ns) Enable level = 0
            STATISTIC 10 = time-Waitany [Time spent in Waitany event] (ns) Enable level = 0
            STATISTIC 11 = time-Compute [Time spent in Compute event] (ns) Enable level = 0
            STATISTIC 12 = time-Barrier [Time spent in Barrier event] (ns) Enable level = 0
            STATISTIC 13 = time-Alltoallv [Time spent in Alltoallv event] (ns) Enable level = 0
            STATISTIC 14 = time-Alltoall [Time spent in Alltoall event] (ns) Enable level = 0
            STATISTIC 15 = time-Allreduce [Time spent in Allreduce event] (ns) Enable level = 0
            STATISTIC 16 = time-Reduce [Time spent in Reduce event] (ns) Enable level = 0
            STATISTIC 17 = time-Bcast [Time spent in Bcast event] (ns) Enable level = 0
            STATISTIC 18 = time-Gettime [Time spent in Gettime event] (ns) Enable level = 0
            STATISTIC 19 = time-Commsplit [Time spent in Commsplit event] (ns) Enable level = 0
            STATISTIC 20 = time-Commcreate [Time spent in Commcreate event] (ns) Enable level = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    WaitanyMotif: Performs a Waitany Motif
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:37:09, using file: mpi/motifs/emberwaitany.h
Num Modules = 7
      Module 0: ConstDistrib
         NUM PARAMETERS = 1
            PARAMETER 0 = constant (Sets the constant value to return in the distribution.) [1.0]
    ConstDistrib: Constant compute distribution model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:34:58, using file: emberconstdistrib.h
      Module 1: CustomMap
         NUM PARAMETERS = 2
            PARAMETER 0 = mapFile (Sets the name of the input file for custom map) [customMap.txt]
            PARAMETER 1 = _mapjobId (Sets the jobId for custom map) [-1]
    CustomMap: NetworkSim: Performs a custom mapping of MPI ranks based on an input file
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: embercustommap.h
      Module 2: GaussianDistrib
         NUM PARAMETERS = 2
            PARAMETER 0 = mean (Sets the mean value of the Gaussian distribution) [1.0]
            PARAMETER 1 = stddev (Sets the standard deviation of the Gaussian distribution) [0.25]
    GaussianDistrib: Gaussian distributed compute noise model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:36:11, using file: embergaussdistrib.h
      Module 3: LinearMap
         NUM PARAMETERS = 0
    LinearMap: Performs a linear mapping of MPI ranks
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: emberlinearmap.h
      Module 4: miscLib
         NUM PARAMETERS = 0
    miscLib: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: ./libs/misc.h
      Module 5: mpiLib
         NUM PARAMETERS = 0
    mpiLib: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:36:24, using file: ./libs/emberMpiLib.h
      Module 6: shmemLib
         NUM PARAMETERS = 0
    shmemLib: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:35:05, using file: ./libs/emberShmemLib.h
Num SSTPartitioners = 0
================================================================================
ELEMENT 10 = firefly ()
Num Components = 2
      Component 0: loopBack
      CATEGORY: SYSTEM COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = nic%(nicsPerNode)dcore%(num_vNics/nicsPerNode)d (Ports connected to the network driver)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = numCores (Sets the number cores to create links to) [1]
            PARAMETER 1 = nicsPerNode () [1]
    loopBack: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: loopBack.h
      Component 1: nic
      CATEGORY: SYSTEM COMPONENT
         NUM STATISTICS = 11
            STATISTIC 0 = sentByteCount [number of bytes sent on network] (bytes) Enable level = 1
            STATISTIC 1 = rcvdByteCount [number of bytes received from network] (bytes) Enable level = 1
            STATISTIC 2 = sentPkts [number of packets sent on network] (packets) Enable level = 1
            STATISTIC 3 = rcvdPkts [number of packets received from network] (packets) Enable level = 1
            STATISTIC 4 = networkStall [number of picoseconds the outbound network port was blocked] (latency) Enable level = 1
            STATISTIC 5 = hostStall [number of nanoseconds the host blocked inbound network packets] (latency) Enable level = 1
            STATISTIC 6 = recvStreamPending [number of pending receive stream memory operations] (depth) Enable level = 1
            STATISTIC 7 = sendStreamPending [number of pending send stream memory operations] (depth) Enable level = 1
            STATISTIC 8 = detailed_num_reads [total number of loads] (count) Enable level = 1
            STATISTIC 9 = detailed_num_writes [total number of stores] (count) Enable level = 1
            STATISTIC 10 = detailed_req_latency [Running total of all latency for all requests] (count) Enable level = 1
         NUM PORTS = 7
            PORT 0 = rtr (Port connected to the router)
            PORT 1 = read (Port connected to the detailed model)
            PORT 2 = write (Port connected to the detailed model)
            PORT 3 = core%(num_vNics)d (Ports connected to the network driver)
            PORT 4 = nicDetailedRead (Port connected to the detailed model)
            PORT 5 = nicDetailedWrite (Port connected to the detailed model)
            PORT 6 = detailed (Port connected to the detailed model)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 52
            PARAMETER 0 = nid (node id on network) [-1]
            PARAMETER 1 = verboseLevel (Sets the output verbosity of the component) [0]
            PARAMETER 2 = verboseMask (Sets the output mask of the component) [-1]
            PARAMETER 3 = nic2host_lat (Sets the latency over the Host to NIC bus) [150ns]
            PARAMETER 4 = rxMatchDelay_ns (Sets the delay for a receive match) [100]
            PARAMETER 5 = txDelay_ns (Sets the delay for a send) [100]
            PARAMETER 6 = hostReadDelay_ns (Sets the delay for a read from the host) [200]
            PARAMETER 7 = shmemRxDelay_ns (Sets the delay for a SHMEM receive operation) [0]
            PARAMETER 8 = num_vNics (Sets number of cores) [1]
            PARAMETER 9 = tracedPkt (packet to trace) [-1]
            PARAMETER 10 = tracedNode (node to trace) [-1]
            PARAMETER 11 = numShmemCmdSlots (Sets the size of the Host to NIC SHMEM command queue) [32]
            PARAMETER 12 = maxSendMachineQsize (Sets the number of pending memory operations) [1]
            PARAMETER 13 = maxRecvMachineQsize (Sets the number of pending memory operations) [1]
            PARAMETER 14 = shmemSendAlignment (Sets the send stream transfer alignment) [64]
            PARAMETER 15 = numSendMachines (Sets the number of send machines) [1]
            PARAMETER 16 = numRecvNicUnits (Sets the number of receive units) [1]
            PARAMETER 17 = packetOverhead (Sets the overhead of a network packet) [0]
            PARAMETER 18 = packetSize (Sets the size of the network packet in bytes) [64]
            PARAMETER 19 = input_buf_size (Sets the buffer size of the link connected to the router) [128]
            PARAMETER 20 = output_buf_size (Sets the buffer size of the link connected to the router) [128]
            PARAMETER 21 = link_bw (Sets the bandwidth of link connected to the router) [500Mhz]
            PARAMETER 22 = module (Sets the link control module) [merlin.linkcontrol]
            PARAMETER 23 = rtrPortName (Port connected to the router) [rtr]
            PARAMETER 24 = corePortName (Port connected to the core) [core]
            PARAMETER 25 = useSimpleMemoryModel (If set to 1 use the simple memory model) [0]
            PARAMETER 26 = dmaBW_GBs (set the one way DMA bandwidth) [100]
            PARAMETER 27 = dmaContentionMult (set the DMA contention mult) [100]
            PARAMETER 28 = simpleMemoryModel.verboseLevel (Sets the verbosity level of output) [0]
            PARAMETER 29 = simpleMemoryModel.verboseMask (Set the output mask) [-1]
            PARAMETER 30 = simpleMemoryModel.memReadLat_ns (Sets the latency for a memory read) [150]
            PARAMETER 31 = simpleMemoryModel.memWriteLat_ns (Sets the latency for a memory write) [150]
            PARAMETER 32 = simpleMemoryModel.memNumSlots (Sets the max number of outstanding memory operations) [10]
            PARAMETER 33 = simpleMemoryModel.nicNumLoadSlots (Sets the max number of outstanding loads for units on the NIC) [32]
            PARAMETER 34 = simpleMemoryModel.nicNumStoreSlots (Sets the max number of outstanding stores for the units on the NIC) [32]
            PARAMETER 35 = simpleMemoryModel.hostNumLoadSlots (Sets the max number of outstanding loads for the units on the Host) [32]
            PARAMETER 36 = simpleMemoryModel.hostNumStoreSlots (Sets the max number of outstanding stores for the units on the Host) [32]
            PARAMETER 37 = simpleMemoryModel.busBandwidth_Gbs (Sets the Host to NIC bus link bandwidth) [7.8]
            PARAMETER 38 = simpleMemoryModel.busNumLinks (Sets the number of Host to NIC bus links) [16]
            PARAMETER 39 = simpleMemoryModel.busLatency (Set the Host to NIC bus overhead) [0]
            PARAMETER 40 = simpleMemoryModel.DLL_bytes (Sets the number of bytes of overhead for a packet at the data link level) [16]
            PARAMETER 41 = simpleMemoryModel.TLP_overhead (Sets the number of bytes of overhead for a packet at the transaction level) [30]
            PARAMETER 42 = simpleMemoryModel.nicToHostMTU (Sets the size the MTU between the Host and NIC) [256]
            PARAMETER 43 = simpleMemoryModel.widgetSlots (Set the depth of queues between the Host to NIC bus and the cache) [64]
            PARAMETER 44 = simpleMemoryModel.hostCacheUnitSize (Sets the number of slots in the Host cache) [32]
            PARAMETER 45 = simpleMemoryModel.hostCacheNumMSHR (Sets the max number of outstanding request to memory) [10]
            PARAMETER 46 = simpleMemoryModel.hostCacheLineSize (Sets the cache line size) [64]
            PARAMETER 47 = simpleMemoryModel.tlbPageSize (Sets the TLB page size) [2097152]
            PARAMETER 48 = simpleMemoryModel.tlbSize (Sets the number of slots in the TLB) [0]
            PARAMETER 49 = simpleMemoryModel.tlbMissLat_ns (Sets the latency for a TLB miss) [0]
            PARAMETER 50 = simpleMemoryModel.numWalkers (Sets the number of outsanding TLB misses) [1]
            PARAMETER 51 = simpleMemoryModel.numTlbSlots (Sets the number of requests the TLB will queue) [1]
    nic: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: nic.h
Num SubComponents = 12
      SubComponent 0: CtrlMsgProto
      Interface: SST::Firefly::CtrlMsg::API
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    CtrlMsgProto: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: ctrlMsg.h
      SubComponent 1: SimpleMemory
      Interface: SST::Firefly::SimpleMemoryModel
         NUM STATISTICS = 21
            STATISTIC 0 = nic_thread_work_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 1 = host_thread_work_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 2 = nic_thread_load_latency [latency to complete] (nanoseconds) Enable level = 1
            STATISTIC 3 = nic_thread_load_pending_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 4 = nic_thread_store_pending_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 5 = host_thread_load_latency [latency to complete] (nanoseconds) Enable level = 1
            STATISTIC 6 = host_thread_load_pending_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 7 = host_thread_store_pending_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 8 = hostCache_mux_blocked_ns [latency blocked] (nanoseconds) Enable level = 1
            STATISTIC 9 = nic_mux_blocked_ns [latency blocked] (nanoseconds) Enable level = 1
            STATISTIC 10 = bus_blocked_ns [latency blocked] (nanoseconds) Enable level = 1
            STATISTIC 11 = bus_load_widget_pending_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 12 = bus_store_widget_pending_Q_depth [number of entries in queue] (entries) Enable level = 1
            STATISTIC 13 = nic_TLB_hits [number of TLB hits] (count) Enable level = 1
            STATISTIC 14 = nic_TLB_total [total number of TLB requests] (count) Enable level = 1
            STATISTIC 15 = host_cache_hits [number of TLB hits] (count) Enable level = 1
            STATISTIC 16 = host_cache_total [total number of TLB requests] (count) Enable level = 1
            STATISTIC 17 = mem_blocked_time [time memory requests were blocked] (nanseconds) Enable level = 1
            STATISTIC 18 = mem_num_loads [total number of loads] (count) Enable level = 1
            STATISTIC 19 = mem_num_stores [total number of stores] (count) Enable level = 1
            STATISTIC 20 = mem_addrs [addresses accesed] (value) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = id (ID of the router.) [<required>]
            PARAMETER 1 = numCores (number of memory operation units for the host.) [0]
            PARAMETER 2 = numNicUnits (number of memory operation units for the nic.) [0]
    SimpleMemory: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: memoryModel/simpleMemoryModel.h
      SubComponent 2: VirtNic
      Interface: SST::Firefly::VirtNic
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = nic (Connection to upper level nic)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = debugLevel (Sets the output verbosity of the component) [1]
            PARAMETER 1 = debug (Sets the messaging API of the end point) [0]
            PARAMETER 2 = portName (Sets the name of the port for the link) [nic]
    VirtNic: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: ./virtNic.h
      SubComponent 3: ctrlMsg
      Interface: SST::Firefly::CtrlMsg::ProcessQueuesState
         NUM STATISTICS = 2
            STATISTIC 0 = posted_receive_list [] (count) Enable level = 1
            STATISTIC 1 = received_msg_list [] (count) Enable level = 1
         NUM PORTS = 1
            PORT 0 = loop (loopback port)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 24
            PARAMETER 0 = shortMsgLength (Sets the short to long message transition point) [16000]
            PARAMETER 1 = verboseLevel (Set the verbose level) [1]
            PARAMETER 2 = debug (Set the debug level) [0]
            PARAMETER 3 = txMemcpyMod (Set the module used to calculate TX mempcy latency) []
            PARAMETER 4 = rxMemcpyMod (Set the module used to calculate RX mempcy latency) []
            PARAMETER 5 = matchDelay_ns (Sets the time to do a match) [100]
            PARAMETER 6 = txSetupMod (Set the module used to calculate TX setup latency) []
            PARAMETER 7 = rxSetupMod (Set the module used to calculate RX setup latency) []
            PARAMETER 8 = txFiniMod (Set the module used to calculate TX fini latency) []
            PARAMETER 9 = rxFiniMod (Set the module used to calculate RX fini latency) []
            PARAMETER 10 = rxPostMod (Set the module used to calculate RX post latency) []
            PARAMETER 11 = loopBackPortName (Sets port name to use when connecting to the loopBack component) [loop]
            PARAMETER 12 = rxNicDelay_ns () [0]
            PARAMETER 13 = txNicDelay_ns () [0]
            PARAMETER 14 = sendReqFiniDelay_ns () [0]
            PARAMETER 15 = recvReqFiniDelay_ns () [0]
            PARAMETER 16 = sendAckDelay_ns () [0]
            PARAMETER 17 = regRegionXoverLength (Sets the transition point page pinning) [4096]
            PARAMETER 18 = regRegionPerPageDelay_ns (Sets the time to pin pages) [0]
            PARAMETER 19 = regRegionBaseDelay_ns (Sets the base time to pin pages) [0]
            PARAMETER 20 = sendStateDelay_ps () [0]
            PARAMETER 21 = recvStateDelay_ps () [0]
            PARAMETER 22 = waitallStateDelay_ps () [0]
            PARAMETER 23 = waitanyStateDelay_ps () [0]
    ctrlMsg: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: ctrlMsgProcessQueuesState.h
      SubComponent 4: ctrlMsgMemory
      Interface: SST::Firefly::CtrlMsg::Memory
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    ctrlMsgMemory: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: ctrlMsgMemory.h
      SubComponent 5: detailedInterface
      Interface: SST::Firefly::DetailedInterface
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    detailedInterface: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: ./memoryModel/detailedInterface.h
      SubComponent 6: functionSM
      Interface: SST::Firefly::FunctionSM
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    functionSM: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:46, using file: functionSM.h
      SubComponent 7: hades
      Interface: SST::Hermes::OS
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 14
            PARAMETER 0 = mapType (Sets the type of data structure to use for mapping ranks to NICs) []
            PARAMETER 1 = netId (Sets the network id of the endpoint) []
            PARAMETER 2 = netMapId (Sets the network mapping id of the endpoint) []
            PARAMETER 3 = netMapSize (Sets the network map Size of the endpoint) []
            PARAMETER 4 = netMapName (Sets the network map Name of the endpoint) []
            PARAMETER 5 = nicModule (Sets the NIC module) [firefly.VirtNic]
            PARAMETER 6 = verboseLevel (Sets the output verbosity of the component) [1]
            PARAMETER 7 = verboseMask (Sets the output mask of the component) [1]
            PARAMETER 8 = debug (Sets the messaging API of the end point) [0]
            PARAMETER 9 = defaultVerbose (Sets the default function verbose level) [0]
            PARAMETER 10 = defaultDebug (Sets the default function debug level) [0]
            PARAMETER 11 = flops (Sets the FLOP rate of the endpoint ) [1]
            PARAMETER 12 = bandwidth (Sets the bandwidth of the endpoint ) [1]
            PARAMETER 13 = nodePerf (Sets the node performance module ) [1]
    hades: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./hades.h
      SubComponent 8: hadesMP
      Interface: SST::Hermes::MP::Interface
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = verboseLevel (Sets the output verbosity of the component) [1]
            PARAMETER 1 = verboseMask (Sets the output mask of the component) [1]
            PARAMETER 2 = defaultEnterLatency (Sets the default function enter latency) [30000]
            PARAMETER 3 = defaultReturnLatency (Sets the default function return latency) [30000]
            PARAMETER 4 = nodeId (internal) []
            PARAMETER 5 = enterLatency (internal) []
            PARAMETER 6 = returnLatency (internal) []
            PARAMETER 7 = defaultModule (Sets the default function module) [firefly]
    hadesMP: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:59, using file: hadesMP.h
      SubComponent 9: hadesMisc
      Interface: SST::Hermes::Interface
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    hadesMisc: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:49, using file: hadesMisc.h
      SubComponent 10: hadesSHMEM
      Interface: SST::Hermes::Interface
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = verboseLevel (Sets the level of debug verbosity) []
            PARAMETER 1 = verboseMask (Sets the debug mask) []
            PARAMETER 2 = enterLat_ns (Sets the latency of entering a SHMEM call) []
            PARAMETER 3 = returnLat_ns (Sets the latency of returning from a SHMEM call) []
            PARAMETER 4 = blockingReturnLat_ns (Sets the latency of returning from a SHMEM call that blocked on response) []
    hadesSHMEM: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:46:09, using file: hadesSHMEM.h
      SubComponent 11: msgTiming
      Interface: SST::Firefly::CtrlMsg::MsgTiming
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    msgTiming: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:42:55, using file: ctrlMsgTiming.h
Num Modules = 27
      Module 0: Allgather
         NUM PARAMETERS = 0
    Allgather: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:44:19, using file: ./funcSM/allgather.h
      Module 1: Allreduce
         NUM PARAMETERS = 0
    Allreduce: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/allreduce.h
      Module 2: Alltoallv
         NUM PARAMETERS = 0
    Alltoallv: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:55, using file: ./funcSM/alltoallv.h
      Module 3: Barrier
         NUM PARAMETERS = 0
    Barrier: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/barrier.h
      Module 4: Cancel
         NUM PARAMETERS = 0
    Cancel: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:44:49, using file: ./funcSM/cancel.h
      Module 5: CommCreate
         NUM PARAMETERS = 0
    CommCreate: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:40, using file: ./funcSM/commCreate.h
      Module 6: CommDestroy
         NUM PARAMETERS = 0
    CommDestroy: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/commDestroy.h
      Module 7: CommSplit
         NUM PARAMETERS = 0
    CommSplit: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:32, using file: ./funcSM/commSplit.h
      Module 8: Fini
         NUM PARAMETERS = 0
    Fini: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/fini.h
      Module 9: Gatherv
         NUM PARAMETERS = 0
    Gatherv: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:44:11, using file: ./funcSM/gatherv.h
      Module 10: Group_FamNodeMapper
         NUM PARAMETERS = 0
    Group_FamNodeMapper: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:46:09, using file: shmem/famNodeMapper.h
      Module 11: Init
         NUM PARAMETERS = 0
    Init: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/init.h
      Module 12: LatencyMod
         NUM PARAMETERS = 0
    LatencyMod: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./rangeLatMod.h
      Module 13: MakeProgress
         NUM PARAMETERS = 0
    MakeProgress: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/makeProgress.h
      Module 14: RR_FamAddrMapper
         NUM PARAMETERS = 0
    RR_FamAddrMapper: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:46:09, using file: shmem/famAddrMapper.h
      Module 15: Rank
         NUM PARAMETERS = 0
    Rank: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/rank.h
      Module 16: Recv
         NUM PARAMETERS = 0
    Recv: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:44:35, using file: ./funcSM/recv.h
      Module 17: ScaleLatMod
         NUM PARAMETERS = 0
    ScaleLatMod: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./scaleLatMod.h
      Module 18: Scatterv
         NUM PARAMETERS = 0
    Scatterv: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:44:02, using file: ./funcSM/scatterv.h
      Module 19: Send
         NUM PARAMETERS = 0
    Send: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:44:42, using file: ./funcSM/send.h
      Module 20: SimpleNodePerf
         NUM PARAMETERS = 0
    SimpleNodePerf: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./nodePerf.h
      Module 21: Size
         NUM PARAMETERS = 0
    Size: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:43:36, using file: ./funcSM/size.h
      Module 22: Test
         NUM PARAMETERS = 0
    Test: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:03, using file: ./funcSM/test.h
      Module 23: Testany
         NUM PARAMETERS = 0
    Testany: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:10, using file: ./funcSM/testany.h
      Module 24: Wait
         NUM PARAMETERS = 0
    Wait: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:44:56, using file: ./funcSM/wait.h
      Module 25: WaitAll
         NUM PARAMETERS = 0
    WaitAll: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:25, using file: ./funcSM/waitAll.h
      Module 26: WaitAny
         NUM PARAMETERS = 0
    WaitAny: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:45:18, using file: ./funcSM/waitAny.h
Num SSTPartitioners = 0
================================================================================
ELEMENT 11 = kingsley ()
Num Components = 1
      Component 0: noc_mesh
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 3
            STATISTIC 0 = send_bit_count [Count number of bits sent on link] (bits) Enable level = 1
            STATISTIC 1 = output_port_stalls [Time output port is stalled (in units of core timebase)] (time in stalls) Enable level = 1
            STATISTIC 2 = xbar_stalls [Count number of cycles the xbar is stalled] (cycles) Enable level = 1
         NUM PORTS = 5
            PORT 0 = north (North port)
            PORT 1 = south (South port)
            PORT 2 = east (East port)
            PORT 3 = west (West port)
            PORT 4 = local%(local_ports)d (Ports which connect to endpoints.)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = local_ports (Number of ports that are dedicated to endpoints.) [1]
            PARAMETER 1 = link_bw (Bandwidth of the links specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 2 = flit_size (Flit size specified in either b or B (can include SI prefix).) [<required>]
            PARAMETER 3 = input_buf_size (Size of input buffers in either b or B (can use SI prefix).  Default is 2*flit_size.) [<required>]
            PARAMETER 4 = port_priority_equal (Set to true to have all port have equal priority (usually endpoint ports have higher priority).) [false]
            PARAMETER 5 = route_y_first (Set to true to rout Y-dimension first.) [false]
            PARAMETER 6 = use_dense_map (Set to true to have a dense network id map instead of the sparse map normally used.) [false]
    noc_mesh: 2-D mesh NOC router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:31, using file: noc_mesh.h
Num SubComponents = 1
      SubComponent 0: linkcontrol
      Interface: SST::Interfaces::SimpleNetwork
         NUM STATISTICS = 1
            STATISTIC 0 = packet_latency [Histogram of latencies for received packets] (latency) Enable level = 1
         NUM PORTS = 1
            PORT 0 = rtr_port (Port that connects to router)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = port_name (Port name to connect to. Only used when loaded anonymously) []
            PARAMETER 1 = link_bw (Bandwidth of the links specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 2 = in_buf_sizeSize of input buffers specified in b or B (can include SI prefix). (1kB) [<required>]
            PARAMETER 3 = out_buf_sizeSize of output buffers specified in b or B (can include SI prefix). (1kB) [<required>]
    linkcontrol: Link Control module for building Kingsley-enabled NICs
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:39, using file: linkControl.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 12 = memHierarchy ()
Num Components = 14
      Component 0: BroadcastShim
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = cpu_alloc_link_%(port)d (Link to CPU's allocation port)
            PORT 1 = sieve_alloc_link_%(port)d (Link to sieve's allocation port)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    BroadcastShim: Used to connect a processor to multiple sieves (e.g., for private/semi-private last-level cache modeling)
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:59:58, using file: Sieve/broadcastShim.h
      Component 1: Bus
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = low_network_%(low_network_ports)d (Ports connected to lower level caches (closer to main memory))
            PORT 1 = high_network_%(high_network_ports)d (Ports connected to higher level caches (closer to CPU))
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 9
            PARAMETER 0 = bus_frequency ((string) Bus clock frequency) [<required>]
            PARAMETER 1 = broadcast ((bool) If set, messages are broadcast to all other ports) [0]
            PARAMETER 2 = fanout ((bool) If set, messages from the high network are replicated and sent to all low network ports) [0]
            PARAMETER 3 = bus_latency_cycles ((uint) Bus latency in cycles) [0]
            PARAMETER 4 = idle_max ((uint) Bus temporarily turns off clock after this number of idle cycles) [6]
            PARAMETER 5 = drain_bus ((bool) Drain bus on every cycle) [0]
            PARAMETER 6 = debug ((uint) Output location for debug statements. Requires core configuration flag '--enable-debug'. --0[None], 1[STDOUT], 2[STDERR], 3[FILE]--) [0]
            PARAMETER 7 = debug_level ((uint) Debugging level: 0 to 10) [0]
            PARAMETER 8 = debug_addr ((comma separated uints) Address(es) to be debugged. Leave empty for all, otherwise specify one or more comma separated values. Start and end string with brackets) []
    Bus: Bus model for memHierarchy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:13, using file: bus.h
      Component 2: Cache
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 41
            STATISTIC 0 = TotalEventsReceived [Total number of events received by this cache] (events) Enable level = 1
            STATISTIC 1 = TotalEventsReplayed [Total number of events that were initially blocked and then were replayed] (events) Enable level = 1
            STATISTIC 2 = MSHR_occupancy [Number of events in MSHR each cycle] (events) Enable level = 1
            STATISTIC 3 = Bank_conflicts [Total number of bank conflicts detected] (count) Enable level = 1
            STATISTIC 4 = Prefetch_requests [Number of prefetches received from prefetcher at this cache] (events) Enable level = 1
            STATISTIC 5 = Prefetch_drops [Number of prefetches that were cancelled. Reasons: too many prefetches outstanding, cache can't handle prefetch this cycle, currently handling another event for the address.] (events) Enable level = 1
            STATISTIC 6 = GetS_recv [Event received: GetS] (count) Enable level = 2
            STATISTIC 7 = GetX_recv [Event received: GetX] (count) Enable level = 2
            STATISTIC 8 = GetSX_recv [Event received: GetSX] (count) Enable level = 2
            STATISTIC 9 = GetSResp_recv [Event received: GetSResp] (count) Enable level = 2
            STATISTIC 10 = GetXResp_recv [Event received: GetXResp] (count) Enable level = 2
            STATISTIC 11 = PutM_recv [Event received: PutM] (count) Enable level = 2
            STATISTIC 12 = PutX_recv [Event received: PutX] (count) Enable level = 2
            STATISTIC 13 = PutS_recv [Event received: PutS] (count) Enable level = 2
            STATISTIC 14 = PutE_recv [Event received: PutE] (count) Enable level = 2
            STATISTIC 15 = FetchInv_recv [Event received: FetchInv] (count) Enable level = 2
            STATISTIC 16 = Fetch_recv [Event received: Fetch] (count) Enable level = 2
            STATISTIC 17 = FetchInvX_recv [Event received: FetchInvX] (count) Enable level = 2
            STATISTIC 18 = ForceInv_recv [Event received: ForceInv] (count) Enable level = 2
            STATISTIC 19 = Inv_recv [Event received: Inv] (count) Enable level = 2
            STATISTIC 20 = FetchResp_recv [Event received: FetchResp] (count) Enable level = 2
            STATISTIC 21 = FetchXResp_recv [Event received: FetchXResp] (count) Enable level = 2
            STATISTIC 22 = AckInv_recv [Event received: AckInv] (count) Enable level = 2
            STATISTIC 23 = AckPut_recv [Event received: AckPut] (count) Enable level = 2
            STATISTIC 24 = FlushLine_recv [Event received: FlushLine] (count) Enable level = 2
            STATISTIC 25 = FlushLineInv_recv [Event received: FlushLineInv] (count) Enable level = 2
            STATISTIC 26 = FlushLineResp_recv [Event received: FlushLineResp] (count) Enable level = 2
            STATISTIC 27 = NACK_recv [Event: NACK received] (count) Enable level = 2
            STATISTIC 28 = NULLCMD_recv [Event: NULLCMD received] (count) Enable level = 2
            STATISTIC 29 = Get_uncache_recv [Noncacheable Event: Get received] (count) Enable level = 6
            STATISTIC 30 = Put_uncache_recv [Noncacheable Event: Put received] (count) Enable level = 6
            STATISTIC 31 = AckMove_uncache_recv [Noncacheable Event: AckMove received] (count) Enable level = 6
            STATISTIC 32 = CustomReq_uncache_recv [Noncacheable Event: CustomReq received] (count) Enable level = 4
            STATISTIC 33 = CustomResp_uncache_recv [Noncacheable Event: CustomResp received] (count) Enable level = 4
            STATISTIC 34 = CustomAck_uncache_recv [Noncacheable Event: CustomAck received] (count) Enable level = 4
            STATISTIC 35 = GetS_uncache_recv [Noncacheable Event: GetS received] (count) Enable level = 4
            STATISTIC 36 = GetX_uncache_recv [Noncacheable Event: GetX received] (count) Enable level = 4
            STATISTIC 37 = GetSX_uncache_recv [Noncacheable Event: GetSX received] (count) Enable level = 4
            STATISTIC 38 = GetSResp_uncache_recv [Noncacheable Event: GetSResp received] (count) Enable level = 4
            STATISTIC 39 = GetXResp_uncache_recv [Noncacheable Event: GetXResp received] (count) Enable level = 4
            STATISTIC 40 = default_stat [Default statistic used for unexpected events/cases/etc. Should be 0, if not, check for missing statistic registrations.] (none) Enable level = 7
         NUM PORTS = 10
            PORT 0 = low_network_0 (Port connected to lower level caches (closer to main memory))
            PORT 1 = high_network_0 (Port connected to higher level caches (closer to CPU))
            PORT 2 = directory (Network link port to directory; doubles as request network port for split networks)
            PORT 3 = directory_ack (For split networks, response/ack network port to directory)
            PORT 4 = directory_fwd (For split networks, forward request network port to directory)
            PORT 5 = directory_data (For split networks, data network port to directory)
            PORT 6 = cache (Network link port to cache; doubles as request network port for split networks)
            PORT 7 = cache_ack (For split networks, response/ack network port to cache)
            PORT 8 = cache_fwd (For split networks, forward request network port to cache)
            PORT 9 = cache_data (For split networks, data network port to cache)
         NUM SUBCOMPONENT SLOTS = 7
            SUB COMPONENT SLOT 0 = cpulink (CPU-side link manager, for single-link caches, use this one only) [SST::MemHierarchy::MemLinkBase]
            SUB COMPONENT SLOT 1 = memlink (Memory-side link manager) [SST::MemHierarchy::MemLinkBase]
            SUB COMPONENT SLOT 2 = coherence (Coherence protocol) [SST::MemHierarchy::CoherenceController]
            SUB COMPONENT SLOT 3 = prefetcher (Prefetcher(s)) [SST::MemHierarchy::CacheListener]
            SUB COMPONENT SLOT 4 = listener (Cache listener(s) for statistics, tracing, etc. In contrast to prefetcher, cannot send events to cache) [SST::MemHierarchy::CacheListener]
            SUB COMPONENT SLOT 5 = replacement (Replacement policies, slot 0 is for cache, slot 1 is for directory (if it exists)) [SST::MemHierarchy::ReplacementPolicy]
            SUB COMPONENT SLOT 6 = hash (Hash function for mapping addresses to cache lines) [SST::MemHierarchy::HashFunction]
         NUM PARAMETERS = 41
            PARAMETER 0 = cache_frequency ((string) Clock frequency or period with units (Hz or s; SI units OK). For L1s, this is usually the same as the CPU's frequency.) [<required>]
            PARAMETER 1 = cache_size ((string) Cache size with units. Eg. 4KiB or 1MiB) [<required>]
            PARAMETER 2 = associativity ((int) Associativity of the cache. In set associative mode, this is the number of ways.) [<required>]
            PARAMETER 3 = access_latency_cycles ((int) Latency (in cycles) to access the cache data array. This latency is paid by cache hits and coherence requests that need to return data.) [<required>]
            PARAMETER 4 = L1 ((bool) Required for L1s, specifies whether cache is an L1. Options: 0[not L1], 1[L1]) [false]
            PARAMETER 5 = node ((uint) Node number in multinode evnironment) [<required>]
            PARAMETER 6 = cache_line_size ((uint) Size of a cache line (aka cache block) in bytes.) [64]
            PARAMETER 7 = coherence_protocol ((string) Coherence protocol. Options: MESI, MSI, NONE) [MESI]
            PARAMETER 8 = cache_type ((string) - Cache type. Options: inclusive cache ('inclusive', required for L1s), non-inclusive cache ('noninclusive') or non-inclusive cache with a directory ('noninclusive_with_directory', required for non-inclusive caches with multiple upper level caches directly above them),) [inclusive]
            PARAMETER 9 = max_requests_per_cycle ((int) Maximum number of requests to accept per cycle. 0 or negative is unlimited.) [-1]
            PARAMETER 10 = request_link_width ((string) Limits number of request bytes sent per cycle. Use 'B' units. '0B' is unlimited.) [0B]
            PARAMETER 11 = response_link_width ((string) Limits number of response bytes sent per cycle. Use 'B' units. '0B' is unlimited.) [0B]
            PARAMETER 12 = noninclusive_directory_entries ((uint) Number of entries in the directory. Must be at least 1 if the non-inclusive directory exists.) [0]
            PARAMETER 13 = noninclusive_directory_associativity ((uint) For a set-associative directory, number of ways.) [1]
            PARAMETER 14 = mshr_num_entries ((int) Number of MSHR entries. Not valid for L1s because L1 MSHRs assumed to be sized for the CPU's load/store queue. Setting this to -1 will create a very large MSHR.) [-1]
            PARAMETER 15 = tag_access_latency_cycles ((uint) Latency (in cycles) to access tag portion only of cache. Paid by misses and coherence requests that don't need data. If not specified, defaults to access_latency_cycles) [access_latency_cycles]
            PARAMETER 16 = mshr_latency_cycles ((uint) Latency (in cycles) to process responses in the cache and replay requests. Paid on the return/response path for misses instead of access_latency_cycles. If not specified, simple intrapolation is used based on the cache access latency) [1]
            PARAMETER 17 = prefetch_delay_cycles ((uint) Delay prefetches from prefetcher by this number of cycles.) [1]
            PARAMETER 18 = max_outstanding_prefetch ((uint) Maximum number of prefetch misses that can be outstanding, additional prefetches will be dropped/NACKed. Default is 1/2 of MSHR entries.) [0.5*mshr_num_entries]
            PARAMETER 19 = drop_prefetch_mshr_level ((uint) Drop/NACK prefetches if the number of in-use mshrs is greater than or equal to this number. Default is mshr_num_entries - 2.) [mshr_num_entries-2]
            PARAMETER 20 = num_cache_slices ((uint) For a distributed, shared cache, total number of cache slices) [1]
            PARAMETER 21 = slice_id ((uint) For distributed, shared caches, unique ID for this cache slice) [0]
            PARAMETER 22 = slice_allocation_policy ((string) Policy for allocating addresses among distributed shared cache. Options: rr[round-robin]) [rr]
            PARAMETER 23 = maxRequestDelay ((uint) Set an error timeout if memory requests take longer than this in ns (0: disable)) [0]
            PARAMETER 24 = snoop_l1_invalidations ((bool) Forward invalidations from L1s to processors. Options: 0[off], 1[on]) [false]
            PARAMETER 25 = debug ((uint) Where to send output. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 26 = debug_level ((uint) Debugging level: 0 to 10. Must configure sst-core with '--enable-debug'. 1=info, 2-10=debug output) [0]
            PARAMETER 27 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 28 = verbose ((uint) Output verbosity for warnings/errors. 0[fatal error only], 1[warnings], 2[full state dump on fatal error]) [1]
            PARAMETER 29 = cache_line_size ((uint) Size of a cache line [aka cache block] in bytes.) [64]
            PARAMETER 30 = force_noncacheable_reqs ((bool) Used for verification purposes. All requests are considered to be 'noncacheable'. Options: 0[off], 1[on]) [false]
            PARAMETER 31 = min_packet_size ((string) Number of bytes in a request/response not including payload (e.g., addr + cmd). Specify in B.) [8B]
            PARAMETER 32 = banks ((uint) Number of cache banks: One access per bank per cycle. Use '0' to simulate no bank limits (only limits on bandwidth then are max_requests_per_cycle and *_link_width) [0]
            PARAMETER 33 = network_address (DEPRECATED - Now auto-detected by link control.) [<required>]
            PARAMETER 34 = network_bw (MOVED - Now a member of the MemNIC subcomponent.) [80GiB/s]
            PARAMETER 35 = network_input_buffer_size (MOVED - Now a member of the MemNIC subcomponent.) [1KiB]
            PARAMETER 36 = network_output_buffer_size (MOVED - Now a member of the MemNIC subcomponent.) [1KiB]
            PARAMETER 37 = prefetcher (MOVED - Prefetcher subcomponent, instead specify by putting it in the 'prefetcher' subcomponent slot) []
            PARAMETER 38 = replacement_policy (MOVED - Cache replacement policy, now a subcomponent so specify by putting in the index 0 of the 'replacement' subcomponent slot in the input config) []
            PARAMETER 39 = noninclusive_directory_repl (MOVED - Replacement policy for noninclusive directory, now a subcomponent, specify by putting in the index 1 of the 'replacement' subcomponent slot in the input config) []
            PARAMETER 40 = hash_function (MOVED - Hash function for mapping addresses to cache lines, now a subcomponent, specify by filling the 'hash' slot (default/unfilled is none)) []
    Cache: Cache controller
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: cacheController.h
      Component 3: CoherentMemController
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 6
            PORT 0 = direct_link (Direct connection to a cache/directory controller)
            PORT 1 = network (Network connection to a cache/directory controller; also request network for split networks)
            PORT 2 = network_ack (For split networks, ack/response network connection to a cache/directory controller)
            PORT 3 = network_fwd (For split networks, forward request network connection to a cache/directory controller)
            PORT 4 = network_data (For split networks, data network connection to a cache/directory controller)
            PORT 5 = cube_link (DEPRECATED. Use named subcomponents and their links instead.)
         NUM SUBCOMPONENT SLOTS = 4
            SUB COMPONENT SLOT 0 = backend (Backend memory model to use for timing. Defaults to simpleMem) [SST::MemHierarchy::MemBackend]
            SUB COMPONENT SLOT 1 = customCmdHandler (Optional handler for custom command types) [SST::MemHierarchy::CustomCmdMemHandler]
            SUB COMPONENT SLOT 2 = listener (Optional listeners to gather statistics, create traces, etc. Multiple listeners supported.) [SST::MemHierarchy::CacheListener]
            SUB COMPONENT SLOT 3 = cpulink (CPU-side link manager (e.g., to caches/cpu). Defaults to MemLink.) [SST::MemHierarchy::MemLinkBase]
         NUM PARAMETERS = 20
            PARAMETER 0 = backend.mem_size ((string) Size of physical memory. NEW REQUIREMENT: must include units in 'B' (SI ok). Simple fix: add 'MiB' to old value.) [<required>]
            PARAMETER 1 = clock ((string) Clock frequency of controller) [<required>]
            PARAMETER 2 = backendConvertor ((string) Backend convertor to load) [memHierarchy.simpleMembackendConvertor]
            PARAMETER 3 = backend ((string) Backend memory model to use for timing.  Defaults to simpleMem) [memHierarchy.simpleMem]
            PARAMETER 4 = request_width ((uint) Max request width to the backend) [64]
            PARAMETER 5 = trace_file ((string) File name (optional) of a trace-file to generate.) []
            PARAMETER 6 = verbose ((uint) Output verbosity for warnings/errors. 0[fatal error only], 1[warnings], 2[full state dump on fatal error]) [1]
            PARAMETER 7 = debug_level ((uint) Debugging level: 0 to 10. Must configure sst-core with '--enable-debug'. 1=info, 2-10=debug output) [0]
            PARAMETER 8 = debug ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [0]
            PARAMETER 9 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 10 = listenercount ((uint) Counts the number of listeners attached to this controller, these are modules for tracing or components like prefetchers) [0]
            PARAMETER 11 = listener%(listenercount)d ((string) Loads a listener module into the controller) []
            PARAMETER 12 = backing ((string) Type of backing store to use. Options: 'none' - no backing store (only use if simulation does not require correct memory values), 'malloc', or 'mmap') [mmap]
            PARAMETER 13 = backing_size_unit ((string) For 'malloc' backing stores, malloc granularity) [1MiB]
            PARAMETER 14 = memory_file ((string) Optional backing-store file to pre-load memory, or store resulting state) [N/A]
            PARAMETER 15 = addr_range_start ((uint) Lowest address handled by this memory.) [0]
            PARAMETER 16 = addr_range_end ((uint) Highest address handled by this memory.) [uint64_t-1]
            PARAMETER 17 = interleave_size ((string) Size of interleaved chunks. E.g., to interleave 8B chunks among 3 memories, set size=8B, step=24B) [0B]
            PARAMETER 18 = interleave_step ((string) Distance between interleaved chunks. E.g., to interleave 8B chunks among 3 memories, set size=8B, step=24B) [0B]
            PARAMETER 19 = customCmdMemHandler ((string) Name of the custom command handler to load) []
    CoherentMemController: Coherent memory controller, supports cache shootdowns and interfaces to a main memory model for timing
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:49, using file: coherentMemoryController.h
      Component 4: DMAEngine
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = netLink (Network Link)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = debug (0 (default): No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [0]
            PARAMETER 1 = debug_level (Debugging level: 0 to 10) [0]
            PARAMETER 2 = clockRate (Clock Rate for processing DMAs.) [1GHz]
            PARAMETER 3 = netAddr (Network address of component.) [<required>]
            PARAMETER 4 = network_num_vc (DEPRECATED. Number of virtual channels (VCs) on the on-chip network. memHierarchy only uses one VC.) [1]
            PARAMETER 5 = printStats (0 (default): Don't print, 1: STDOUT, 2: STDERR, 3: FILE.) [0]
    DMAEngine: DMA Engine
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:59:09, using file: dmaEngine.h
      Component 5: DirectoryController
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 51
            STATISTIC 0 = replacement_request_latency [Total latency in ns of all replacement (put*) requests handled] (nanoseconds) Enable level = 1
            STATISTIC 1 = get_request_latency [Total latency in ns of all get* requests handled] (nanoseconds) Enable level = 1
            STATISTIC 2 = directory_cache_hits [Number of requests that hit in the directory cache] (requests) Enable level = 1
            STATISTIC 3 = mshr_hits [Number of requests that hit in the MSHRs] (requests) Enable level = 1
            STATISTIC 4 = GetS_recv [Event received: GetS (read-shared)] (count) Enable level = 1
            STATISTIC 5 = GetX_recv [Event received: GetX (write-exclusive)] (count) Enable level = 1
            STATISTIC 6 = GetSX_recv [Event received: GetSX (read-exclusive)] (count) Enable level = 1
            STATISTIC 7 = GetSResp_recv [Event received: GetSResp (shared data)] (count) Enable level = 1
            STATISTIC 8 = GetXResp_recv [Event received: GetXResp (exclusive data)] (count) Enable level = 1
            STATISTIC 9 = PutS_recv [Event received: PutS (shared replacement)] (count) Enable level = 2
            STATISTIC 10 = PutE_recv [Event received: PutE (clean exclusive replacement)] (count) Enable level = 2
            STATISTIC 11 = PutM_recv [Event received: PutM (dirty exclusive replacement)] (count) Enable level = 2
            STATISTIC 12 = PutX_recv [Event received: PutX (downgrade exclusive to shared)] (count) Enable level = 2
            STATISTIC 13 = ForceInv_recv [Event received: ForceInv (invalidate & drop data)] (count) Enable level = 2
            STATISTIC 14 = FetchInv_recv [Event received: FetchInv (invalidate & return data)] (count) Enable level = 2
            STATISTIC 15 = FetchResp_recv [Event received: FetchResp (response to FetchInv/Fetch)] (count) Enable level = 2
            STATISTIC 16 = FetchXResp_recv [Event received: FetchXResp (response to FetchInvX)] (count) Enable level = 2
            STATISTIC 17 = AckInv_recv [Event received: AckInv (response to Inv/FetchInv/ForceInv)] (count) Enable level = 2
            STATISTIC 18 = FlushLine_recv [Event received: FlushLine (flush, don't invalidate)] (count) Enable level = 2
            STATISTIC 19 = FlushLineInv_recv [Event received: FlushLineInv (flush and invalidate)] (count) Enable level = 2
            STATISTIC 20 = FlushLineResp_recv [Event received: FlushLineResp (response to FlushLine/Inv)] (count) Enable level = 2
            STATISTIC 21 = NACK_recv [Event received: NACK] (count) Enable level = 2
            STATISTIC 22 = GetS_uncache_recv [Noncacheable Event: GetS received] (count) Enable level = 4
            STATISTIC 23 = GetX_uncache_recv [Noncacheable Event: GetX received] (count) Enable level = 4
            STATISTIC 24 = GetSX_uncache_recv [Noncacheable Event: GetSX received] (count) Enable level = 4
            STATISTIC 25 = GetSResp_uncache_recv [Noncacheable Event: GetSResp received] (count) Enable level = 4
            STATISTIC 26 = GetXResp_uncache_recv [Noncacheable Event: GetXResp received] (count) Enable level = 4
            STATISTIC 27 = CustomReq_uncache_recv [Noncacheable Event: CustomReq received] (count) Enable level = 4
            STATISTIC 28 = CustomResp_uncache_recv [Noncacheable Event: CustomResp received] (count) Enable level = 4
            STATISTIC 29 = CustomAck_uncache_recv [Noncacheable Event: CustomAck received] (count) Enable level = 4
            STATISTIC 30 = eventSent_read_directory_entry [Event sent: Read (GetS) a directory entry from memory] (count) Enable level = 2
            STATISTIC 31 = eventSent_write_directory_entry [Event sent: Write (PutM) a directory entry to memory] (count) Enable level = 2
            STATISTIC 32 = eventSent_GetS [Event sent: GetS] (count) Enable level = 1
            STATISTIC 33 = eventSent_GetX [Event sent: GetX] (count) Enable level = 1
            STATISTIC 34 = eventSent_GetSX [Event sent: GetX] (count) Enable level = 1
            STATISTIC 35 = eventSent_PutM [Event sent: PutM] (count) Enable level = 1
            STATISTIC 36 = eventSent_Inv [Event sent: Inv] (count) Enable level = 2
            STATISTIC 37 = eventSent_FetchInv [Event sent: FetchInv] (count) Enable level = 2
            STATISTIC 38 = eventSent_FetchInvX [Event sent: FetchInvX] (count) Enable level = 2
            STATISTIC 39 = eventSent_ForceInv [Event sent: ForceInv] (count) Enable level = 2
            STATISTIC 40 = eventSent_NACK [Event sent: NACK] (count) Enable level = 2
            STATISTIC 41 = eventSent_GetSResp [Event sent: GetSResp (shared data response)] (count) Enable level = 1
            STATISTIC 42 = eventSent_GetXResp [Event sent: GetXResp (exclusive data response)] (count) Enable level = 1
            STATISTIC 43 = eventSent_FetchResp [Event sent: FetchResp] (count) Enable level = 2
            STATISTIC 44 = eventSent_AckInv [Event sent: AckInv] (count) Enable level = 2
            STATISTIC 45 = eventSent_AckPut [Event sent: AckPut] (count) Enable level = 2
            STATISTIC 46 = eventSent_FlushLine [Event sent: FlushLine] (count) Enable level = 2
            STATISTIC 47 = eventSent_FlushLineInv [Event sent: FlushLineInv] (count) Enable level = 2
            STATISTIC 48 = eventSent_FlushLineResp [Event sent: FlushLineResp] (count) Enable level = 2
            STATISTIC 49 = MSHR_occupancy [Number of events in MSHR each cycle] (events) Enable level = 1
            STATISTIC 50 = default_stat [Default statistic. If not 0 then a statistic is missing] () Enable level = 1
         NUM PORTS = 5
            PORT 0 = memory (Link to memory controller)
            PORT 1 = network (Link to network; doubles as request network for split networks)
            PORT 2 = network_ack (For split networks, link to response/ack network)
            PORT 3 = network_fwd (For split networks, link to forward request network)
            PORT 4 = network_data (For split networks, link to data network)
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = cpulink (CPU-side link manager, for single-link directories, use this one only) [SST::MemHierarchy::MemLinkBase]
            SUB COMPONENT SLOT 1 = memlink (Memory-side link manager) [SST::MemHierarchy::MemLinkBase]
         NUM PARAMETERS = 24
            PARAMETER 0 = clock (Clock rate of controller.) [1GHz]
            PARAMETER 1 = entry_cache_size (Size (in # of entries) the controller will cache.) [0]
            PARAMETER 2 = debug (Where to send debug output. 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [0]
            PARAMETER 3 = debug_level (Debugging level: 0 to 10. Must configure sst-core with '--enable-debug'. 1=info, 2-10=debug output) [0]
            PARAMETER 4 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 5 = verbose (Output verbosity for warnings/errors. 0[fatal error only], 1[warnings], 2[full state dump on fatal error]) [1]
            PARAMETER 6 = cache_line_size (Size of a cache line [aka cache block] in bytes.) [64]
            PARAMETER 7 = coherence_protocol (Coherence protocol.  Supported --MESI, MSI--) [MESI]
            PARAMETER 8 = mshr_num_entries (Number of MSHRs. Set to -1 for almost unlimited number.) [-1]
            PARAMETER 9 = net_memory_name (For directories connected to a memory over the network: name of the memory this directory owns) []
            PARAMETER 10 = access_latency_cycles (Latency of directory access in cycles) [0]
            PARAMETER 11 = mshr_latency_cycles (Latency of mshr access in cycles) [0]
            PARAMETER 12 = max_requests_per_cycle (Maximum number of requests to process per cycle (0 or negative is unlimited)) [0]
            PARAMETER 13 = mem_addr_start (Starting memory address for the chunk of memory that this directory controller addresses.) [0]
            PARAMETER 14 = addr_range_start (Lowest address handled by this directory.) [0]
            PARAMETER 15 = addr_range_end (Highest address handled by this directory.) [uint64_t-1]
            PARAMETER 16 = interleave_size (Size of interleaved chunks. E.g., to interleave 8B chunks among 3 directories, set size=8B, step=24B) [0B]
            PARAMETER 17 = interleave_step (Distance between interleaved chunks. E.g., to interleave 8B chunks among 3 directories, set size=8B, step=24B) [0B]
            PARAMETER 18 = node (Node number in multinode environment) [<required>]
            PARAMETER 19 = network_num_vc (DEPRECATED. Number of virtual channels (VCs) on the on-chip network. memHierarchy only uses one VC.) [1]
            PARAMETER 20 = network_address (DEPRECATD - Now auto-detected by link control) []
            PARAMETER 21 = network_bw (MOVED. Now a member of the MemNIC/MemLink subcomponent.) [80GiB/s]
            PARAMETER 22 = network_input_buffer_size (MOVED. Now a member of the MemNIC/MemLink subcomponent.) [1KiB]
            PARAMETER 23 = network_output_buffer_size (MOVED. Now a member of the MemNIC/MemLink subcomponent.) [1KiB]
    DirectoryController: Coherence directory, MSI or MESI
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:56:02, using file: directoryController.h
      Component 6: MemCacheController
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 4
            STATISTIC 0 = CacheHits_Read [Number of read hits] (count) Enable level = 1
            STATISTIC 1 = CacheHits_Write [Number of write hits] (count) Enable level = 1
            STATISTIC 2 = CacheMisses_Read [Number of read misses] (count) Enable level = 1
            STATISTIC 3 = CacheMisses_Write [Number of write misses] (count) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 4
            SUB COMPONENT SLOT 0 = backend (Memory controller and/or memory timing model.) [SST::MemHierarchy::MemBackend]
            SUB COMPONENT SLOT 1 = backendConvertor (Convertor to translate incoming memory events for the backend. Loaded automatically based on backend type.) [SST::MemHierarchy::MemBackendConvertor]
            SUB COMPONENT SLOT 2 = listener (Optional listeners to gather statistics, create traces, etc. Multiple listeners supported.) [SST::MemHierarchy::CacheListener]
            SUB COMPONENT SLOT 3 = cpulink (CPU-side link manager (e.g., to caches/cpu)) [SST::MemHierarchy::MemLinkBase]
         NUM PARAMETERS = 11
            PARAMETER 0 = clock ((string) Clock frequency of controller, with units (e.g., 1GHz)) [<required>]
            PARAMETER 1 = num_caches ((uint) Total number of memory caches) [1]
            PARAMETER 2 = cache_num ((uint) Index of this cache between 0 and num_caches-1) [0]
            PARAMETER 3 = cache_line_size ((uint) Cache line size in bytes) [64]
            PARAMETER 4 = backing ((string) Type of backing store to use. Options: 'none' - no backing store (only use if simulation does not require correct memory values), 'malloc', or 'mmap') [mmap]
            PARAMETER 5 = backing_size_unit ((string) For 'malloc' backing stores, malloc granularity) [1MiB]
            PARAMETER 6 = memory_file ((string) Optional backing-store file to pre-load memory, or store resulting state) [N/A]
            PARAMETER 7 = verbose ((uint) Output verbosity for warnings/errors. 0[fatal error only], 1[warnings], 2[full state dump on fatal error]) [1]
            PARAMETER 8 = debug ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [0]
            PARAMETER 9 = debug_level ((uint) Debugging level: 0 to 10. Must configure sst-core with '--enable-debug'. 1=info, 2-10=debug output) [0]
            PARAMETER 10 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
    MemCacheController: Memory controller, interfaces to a main memory model for timing
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:35, using file: memoryCacheController.h
      Component 7: MemController
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 6
            PORT 0 = direct_link (Direct connection to a cache/directory controller)
            PORT 1 = network (Network connection to a cache/directory controller; also request network for split networks)
            PORT 2 = network_ack (For split networks, ack/response network connection to a cache/directory controller)
            PORT 3 = network_fwd (For split networks, forward request network connection to a cache/directory controller)
            PORT 4 = network_data (For split networks, data network connection to a cache/directory controller)
            PORT 5 = cube_link (DEPRECATED. Use named subcomponents and their links instead.)
         NUM SUBCOMPONENT SLOTS = 4
            SUB COMPONENT SLOT 0 = backend (Backend memory model to use for timing. Defaults to simpleMem) [SST::MemHierarchy::MemBackend]
            SUB COMPONENT SLOT 1 = customCmdHandler (Optional handler for custom command types) [SST::MemHierarchy::CustomCmdMemHandler]
            SUB COMPONENT SLOT 2 = listener (Optional listeners to gather statistics, create traces, etc. Multiple listeners supported.) [SST::MemHierarchy::CacheListener]
            SUB COMPONENT SLOT 3 = cpulink (CPU-side link manager (e.g., to caches/cpu). Defaults to MemLink.) [SST::MemHierarchy::MemLinkBase]
         NUM PARAMETERS = 20
            PARAMETER 0 = backend.mem_size ((string) Size of physical memory. NEW REQUIREMENT: must include units in 'B' (SI ok). Simple fix: add 'MiB' to old value.) [<required>]
            PARAMETER 1 = clock ((string) Clock frequency of controller) [<required>]
            PARAMETER 2 = backendConvertor ((string) Backend convertor to load) [memHierarchy.simpleMembackendConvertor]
            PARAMETER 3 = backend ((string) Backend memory model to use for timing.  Defaults to simpleMem) [memHierarchy.simpleMem]
            PARAMETER 4 = request_width ((uint) Max request width to the backend) [64]
            PARAMETER 5 = trace_file ((string) File name (optional) of a trace-file to generate.) []
            PARAMETER 6 = verbose ((uint) Output verbosity for warnings/errors. 0[fatal error only], 1[warnings], 2[full state dump on fatal error]) [1]
            PARAMETER 7 = debug_level ((uint) Debugging level: 0 to 10. Must configure sst-core with '--enable-debug'. 1=info, 2-10=debug output) [0]
            PARAMETER 8 = debug ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [0]
            PARAMETER 9 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 10 = listenercount ((uint) Counts the number of listeners attached to this controller, these are modules for tracing or components like prefetchers) [0]
            PARAMETER 11 = listener%(listenercount)d ((string) Loads a listener module into the controller) []
            PARAMETER 12 = backing ((string) Type of backing store to use. Options: 'none' - no backing store (only use if simulation does not require correct memory values), 'malloc', or 'mmap') [mmap]
            PARAMETER 13 = backing_size_unit ((string) For 'malloc' backing stores, malloc granularity) [1MiB]
            PARAMETER 14 = memory_file ((string) Optional backing-store file to pre-load memory, or store resulting state) [N/A]
            PARAMETER 15 = addr_range_start ((uint) Lowest address handled by this memory.) [0]
            PARAMETER 16 = addr_range_end ((uint) Highest address handled by this memory.) [uint64_t-1]
            PARAMETER 17 = interleave_size ((string) Size of interleaved chunks. E.g., to interleave 8B chunks among 3 memories, set size=8B, step=24B) [0B]
            PARAMETER 18 = interleave_step ((string) Distance between interleaved chunks. E.g., to interleave 8B chunks among 3 memories, set size=8B, step=24B) [0B]
            PARAMETER 19 = customCmdMemHandler ((string) Name of the custom command handler to load) []
    MemController: Memory controller, interfaces to a main memory model for timing
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:20, using file: memoryController.h
      Component 8: ScratchCPU
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = mem_link (Connection to cache)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = memory (Interface to memory (e.g., caches)) [SST::Interfaces::SimpleMem]
         NUM PARAMETERS = 9
            PARAMETER 0 = scratchSize ((uint) Size of the scratchpad in bytes) [<required>]
            PARAMETER 1 = maxAddr ((uint) Maximum address to generate (i.e., scratchSize + size of memory)) [<required>]
            PARAMETER 2 = rngseed ((int) Set a seed for the random generator used to create requests) [7]
            PARAMETER 3 = scratchLineSize ((uint) Line size for scratch, max request size for scratch) [64]
            PARAMETER 4 = memLineSize ((uint) Line size for memory, max request size for memory) [64]
            PARAMETER 5 = clock ((string) Clock frequency in Hz or period in s) [1GHz]
            PARAMETER 6 = maxOutstandingRequests ((uint) Maximum number of requests outstanding at a time) [8]
            PARAMETER 7 = maxRequestsPerCycle ((uint) Maximum number of requests to issue per cycle) [2]
            PARAMETER 8 = reqsToIssue ((uint) Number of requests to issue before ending simulation) [1000]
    ScratchCPU: Simple test CPU for scratchpad interface
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:59:00, using file: ./testcpu/scratchCPU.h
      Component 9: Scratchpad
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 8
            STATISTIC 0 = request_received_scratch_read [Number of scratchpad reads received from CPU] (count) Enable level = 1
            STATISTIC 1 = request_received_scratch_write [Number of scratchpad writes received from CPU] (count) Enable level = 1
            STATISTIC 2 = request_received_remote_read [Number of remote memory reads received from CPU] (count) Enable level = 1
            STATISTIC 3 = request_received_remote_write [Number of remote memory writes received from CPU] (count) Enable level = 1
            STATISTIC 4 = request_received_scratch_get [Number of scratchpad Gets received from CPU (copy from memory to scratch)] (count) Enable level = 1
            STATISTIC 5 = request_received_scratch_put [Number of scratchpad Puts received from CPU (copy from scratch to memory)] (count) Enable level = 1
            STATISTIC 6 = request_issued_scratch_read [Number of scratchpad reads issued to scratchpad] (count) Enable level = 1
            STATISTIC 7 = request_issued_scratch_write [Number of scratchpad writes issued to scratchpad] (count) Enable level = 1
         NUM PORTS = 3
            PORT 0 = cpu (Link to cpu/cache on the cpu side)
            PORT 1 = memory (Direct link to a memory or bus)
            PORT 2 = network (Network link to memory)
         NUM SUBCOMPONENT SLOTS = 3
            SUB COMPONENT SLOT 0 = backendConvertor (Convertor to interface to memory timing model (backend)) [SST::MemHierarchy::ScratchBackendConvertor]
            SUB COMPONENT SLOT 1 = cpulink (CPU-side link manager) [SST::MemHierarchy::MemLinkBase]
            SUB COMPONENT SLOT 2 = memlink (Memory-side link manager) [SST::MemHierarchy::MemLinkBase]
         NUM PARAMETERS = 11
            PARAMETER 0 = clock ((string) Clock frequency or period with units (Hz or s; SI units OK).) [<required>]
            PARAMETER 1 = size ((string) Size of the scratchpad in bytes (B), SI units ok) [<required>]
            PARAMETER 2 = scratch_line_size ((string) Number of bytes in a scratch line with units. 'size' must be divisible by this number.) [64B]
            PARAMETER 3 = memory_line_size ((string) Number of bytes in a remote memory line with units. Used to set base addresses for routing.) [64B]
            PARAMETER 4 = backing ((string) Type of backing store to use. Options: 'none' - no backing store (only use if simulation does not require correct memory values), 'malloc', or 'mmap') [malloc]
            PARAMETER 5 = backing_size_unit ((string) For 'malloc' backing stores, malloc granularity) [1MiB]
            PARAMETER 6 = memory_addr_offset ((uint) Amount to offset remote addresses by. Default is 'size' so that remote memory addresses start at 0) [size]
            PARAMETER 7 = response_per_cycle ((uint) Maximum number of responses to return to processor each cycle. 0 is unlimited) [0]
            PARAMETER 8 = backendConvertor ((string) Backend convertor to use for the scratchpad) [memHierarchy.scratchpadBackendConvertor]
            PARAMETER 9 = debug ((uint) Where to print debug output. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 10 = debug_level ((uint) Debug verbosity level. Between 0 and 10) [0]
    Scratchpad: Scratchpad memory
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:54:59, using file: ../../../../src/sst/elements/memHierarchy/scratchpad.h
      Component 10: Sieve
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 6
            STATISTIC 0 = ReadHits [Number of read requests that hit in the sieve] (count) Enable level = 1
            STATISTIC 1 = ReadMisses [Number of read requests that missed in the sieve] (count) Enable level = 1
            STATISTIC 2 = WriteHits [Number of write requests that hit in the sieve] (count) Enable level = 1
            STATISTIC 3 = WriteMisses [Number of write requests that missed in the sieve] (count) Enable level = 1
            STATISTIC 4 = UnassociatedReadMisses [Number of read misses that did not match a malloc] (count) Enable level = 1
            STATISTIC 5 = UnassociatedWriteMisses [Number of write misses that did not match a malloc] (count) Enable level = 1
         NUM PORTS = 2
            PORT 0 = cpu_link_%(port)d (Ports connected to the CPUs)
            PORT 1 = alloc_link_%(port)d (Ports connected to the CPUs' allocation/free notification ports)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = profiler ((string) Name of profiling subcomponent. Currently only configured to work with cassini.AddrHistogrammer.) [SST::MemHierarchy::CacheListener]
         NUM PARAMETERS = 8
            PARAMETER 0 = cache_size ((string) Cache size with units. Eg. 4KiB or 1MiB) [<required>]
            PARAMETER 1 = associativity ((uint) Associativity of the cache. In set associative mode, this is the number of ways.) [<required>]
            PARAMETER 2 = cache_line_size ((uint) Size of a cache line (aka cache block) in bytes.) [64]
            PARAMETER 3 = profiler ((string) Name of profiling subcomponent. Currently only configured to work with cassini.AddrHistogrammer. Add params using 'profiler.paramName') []
            PARAMETER 4 = debug ((uint) Print debug information. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 5 = debug_level ((uint) Debugging/verbosity level. Between 0 and 10) [0]
            PARAMETER 6 = output_file ((string) Name of file to output malloc information to. Will have sequence number (and optional marker number) and .txt appended to it. E.g. sieveMallocRank-3.txt) [sieveMallocRank]
            PARAMETER 7 = reset_stats_at_buoy ((bool) Whether to reset allocation hit/miss stats when a buoy is found (i.e., when a new output file is dumped). Any value other than 0 is true.0) [<required>]
    Sieve: Simple cache filtering component to model last-level caches
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:59:29, using file: Sieve/sieveController.h
      Component 11: multithreadL1
      CATEGORY: MEMORY COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = cache (Link to L1 cache)
            PORT 1 = thread%(port)d (Links to threads/cores)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = clock ((string) Clock frequency or period with units (Hz or s; SI units OK).) [<required>]
            PARAMETER 1 = requests_per_cycle ((uint) Number of requests to forward to L1 each cycle (for all threads combined). 0 indicates unlimited) [0]
            PARAMETER 2 = responses_per_cycle ((uint) Number of responses to forward to threads each cycle (for all threads combined). 0 indicates unlimited) [0]
            PARAMETER 3 = debug ((uint) Where to print debug output. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 4 = debug_level ((uint) Debug verbosity level. Between 0 and 10) [0]
            PARAMETER 5 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
    multithreadL1: Layer to connect multiple CPUs to a single L1 as if multiple hardware threads
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:58:24, using file: multithreadL1Shim.h
      Component 12: streamCPU
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = mem_link (Connection to cache)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 14
            PARAMETER 0 = commFreq ((int) How often to do a memory operation.) [<required>]
            PARAMETER 1 = memSize ((uint) Size of physical memory.) [<required>]
            PARAMETER 2 = verbose ((uint) Determine how verbose the output from the CPU is) [0]
            PARAMETER 3 = clock ((string) Clock frequency) [1GHz]
            PARAMETER 4 = rngseed ((int) Set a seed for the random generation of addresses) [7]
            PARAMETER 5 = lineSize ((uint) Size of a cache line - used for flushes) [64]
            PARAMETER 6 = maxOutstanding ((uint) Maximum Number of Outstanding memory requests.) [10]
            PARAMETER 7 = num_loadstore ((int) Stop after this many reads and writes.) [-1]
            PARAMETER 8 = reqsPerIssue ((uint) Maximum number of requests to issue at a time) [1]
            PARAMETER 9 = do_write ((bool) Enable writes to memory (versus just reads).) [1]
            PARAMETER 10 = do_flush ((bool) Enable flushes) [0]
            PARAMETER 11 = noncacheableRangeStart ((uint) Beginning of range of addresses that are noncacheable.) [0x0]
            PARAMETER 12 = noncacheableRangeEnd ((uint) End of range of addresses that are noncacheable.) [0x0]
            PARAMETER 13 = addressoffset ((uint) Apply an offset to a calculated address to check for non-alignment issues) [0]
    streamCPU: Simple demo streaming CPU for testing
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:58:51, using file: ./testcpu/streamCPU.h
      Component 13: trivialCPU
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 1
            STATISTIC 0 = pendCycle [Number of pending requests per cycle] (count) Enable level = 1
         NUM PORTS = 1
            PORT 0 = mem_link (Connection to cache)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = memory (Interface to memory hierarchy) [SST::Interfaces::SimpleMem]
         NUM PARAMETERS = 14
            PARAMETER 0 = commFreq ((int) How often to do a memory operation.) [<required>]
            PARAMETER 1 = memSize ((uint) Size of physical memory.) [<required>]
            PARAMETER 2 = verbose ((uint) Determine how verbose the output from the CPU is) [1]
            PARAMETER 3 = clock ((string) Clock frequency) [1GHz]
            PARAMETER 4 = rngseed ((int) Set a seed for the random generation of addresses) [7]
            PARAMETER 5 = lineSize ((uint) Size of a cache line - used for flushes) [64]
            PARAMETER 6 = maxOutstanding ((uint) Maximum Number of Outstanding memory requests.) [10]
            PARAMETER 7 = num_loadstore ((int) Stop after this many reads and writes.) [-1]
            PARAMETER 8 = reqsPerIssue ((uint) Maximum number of requests to issue at a time) [1]
            PARAMETER 9 = do_write ((bool) Enable writes to memory (versus just reads).) [1]
            PARAMETER 10 = do_flush ((bool) Enable flushes) [0]
            PARAMETER 11 = noncacheableRangeStart ((uint) Beginning of range of addresses that are noncacheable.) [0x0]
            PARAMETER 12 = noncacheableRangeEnd ((uint) End of range of addresses that are noncacheable.) [0x0]
            PARAMETER 13 = addressoffset ((uint) Apply an offset to a calculated address to check for non-alignment issues) [0]
    trivialCPU: Simple demo CPU for testing
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:58:41, using file: ./testcpu/trivialCPU.h
Num SubComponents = 44
      SubComponent 0: DelayBuffer
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = backend (Backend memory model) [SST::MemHierarchy::SimpleMemBackend]
         NUM PARAMETERS = 9
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = verbose (Sets the verbosity of the backend output) [0]
            PARAMETER 7 = backend (Backend memory system) [memHierarchy.simpleMem]
            PARAMETER 8 = request_delay (Constant delay to be added to requests with units (e.g., 1us)) [0ns]
    DelayBuffer: Delays requests by a specified time
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:54, using file: ./membackend/delayBuffer.h
      SubComponent 1: MemLink
      Interface: SST::MemHierarchy::MemLinkBase
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = port (Port to another memory component)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = debug ((int) Where to print debug output. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 1 = debug_level ((int) Debug verbosity level. Between 0 and 10) [0]
            PARAMETER 2 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 3 = accept_region ((bool) Set by parent component but user should unset if region (addr_range_start/end, interleave_size/step) params are provided to memory. Provides backward compatibility for address translation between memory controller and directory.) [false]
            PARAMETER 4 = latency ((string) Link latency. Prefix 'cpulink' for up-link towards CPU or 'memlink' for down-link towards memory) [50ps]
            PARAMETER 5 = port ((string) Set by parent component. Name of port this memLink sits on.) [port]
    MemLink: Memory-oriented link interface
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:20, using file: memLink.h
      SubComponent 2: MemNIC
      Interface: SST::MemHierarchy::MemLinkBase
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = port (Link to network)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = linkcontrol (Network interface) [<none>]
         NUM PARAMETERS = 13
            PARAMETER 0 = debug ((int) Where to print debug output. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 1 = debug_level ((int) Debug verbosity level. Between 0 and 10) [0]
            PARAMETER 2 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 3 = accept_region ((bool) Set by parent component but user should unset if region (addr_range_start/end, interleave_size/step) params are provided to memory. Provides backward compatibility for address translation between memory controller and directory.) [false]
            PARAMETER 4 = group ((int) Group ID. See params 'sources' and 'destinations'. If not specified, the parent component will guess.) [1]
            PARAMETER 5 = sources ((comma-separated list of ints) List of group IDs that serve as sources for this component. If not specified, defaults to 'group - 1'.) [group-1]
            PARAMETER 6 = destinations ((comma-separated list of ints) List of group IDs that serve as destinations for this component. If not specified, defaults to 'group + 1'.) [group+1]
            PARAMETER 7 = min_packet_size ((string) Size of a packet without a payload (e.g., control message size)) [8B]
            PARAMETER 8 = network_bw ((string) Network bandwidth. Not used if linkcontrol subcomponent slot is filled.) [80GiB/s]
            PARAMETER 9 = network_input_buffer_size ((string) Size of input buffer. Not used if linkcontrol subcomponent slot is filled) [1KiB]
            PARAMETER 10 = network_output_buffer_size ((string) Size of output buffer. Not used if linkcontrol subcomponent slot is filled.) [1KiB]
            PARAMETER 11 = port (Deprecated. Used by parent component if the NIC is not loaded as a named subcomponent.) []
            PARAMETER 12 = network_link_control (Deprecated. Specify link control type by using named subcomponents) [merlin.linkcontrol]
    MemNIC: Memory-oriented network interface
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:20, using file: memNIC.h
      SubComponent 3: MemNICFour
      Interface: SST::MemHierarchy::MemLinkBase
         NUM STATISTICS = 11
            STATISTIC 0 = data_events [Number of events received on data network] (count) Enable level = 1
            STATISTIC 1 = req_events [Number of events received on request network] (count) Enable level = 1
            STATISTIC 2 = ack_events [Number of events received on acknowledgement network] (count) Enable level = 1
            STATISTIC 3 = fwd_events [Number of events received on forward request network] (count) Enable level = 1
            STATISTIC 4 = outoforder_data_events [Number of out of order events on data network] (count) Enable level = 1
            STATISTIC 5 = outoforder_req_events [Number of out of order events on request network] (count) Enable level = 1
            STATISTIC 6 = outoforder_ack_events [Number of out of order events on acknowledgement network] (count) Enable level = 1
            STATISTIC 7 = outoforder_fwd_events [Number of out of order events on forward request network] (count) Enable level = 1
            STATISTIC 8 = outoforder_depth_at_event_receive [Depth of re-order buffer at an event receive] (count) Enable level = 1
            STATISTIC 9 = outoforder_depth_at_event_receive_src [Depth of re-order buffer for the sender of an event at event receive] (count) Enable level = 1
            STATISTIC 10 = ordering_latency [For events that arrived out of order, cycles spent in buffer. Cycles in units determined by 'clock' parameter (default 1GHz)] (cycles) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 4
            SUB COMPONENT SLOT 0 = data (Link control subcomponent to data network) [SST::Interfaces::SimpleNetwork]
            SUB COMPONENT SLOT 1 = req (Link control subcomponent to request network) [SST::Interfaces::SimpleNetwork]
            SUB COMPONENT SLOT 2 = ack (Link control subcomponent to acknowledgement network) [SST::Interfaces::SimpleNetwork]
            SUB COMPONENT SLOT 3 = fwd (Link control subcomponent to forwarded request network) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 28
            PARAMETER 0 = debug ((int) Where to print debug output. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 1 = debug_level ((int) Debug verbosity level. Between 0 and 10) [0]
            PARAMETER 2 = debug_addr ((comma separated uint) Address(es) to be debugged. Leave empty for all, otherwise specify one or more, comma-separated values. Start and end string with brackets) []
            PARAMETER 3 = accept_region ((bool) Set by parent component but user should unset if region (addr_range_start/end, interleave_size/step) params are provided to memory. Provides backward compatibility for address translation between memory controller and directory.) [false]
            PARAMETER 4 = group ((int) Group ID. See params 'sources' and 'destinations'. If not specified, the parent component will guess.) [1]
            PARAMETER 5 = sources ((comma-separated list of ints) List of group IDs that serve as sources for this component. If not specified, defaults to 'group - 1'.) [group-1]
            PARAMETER 6 = destinations ((comma-separated list of ints) List of group IDs that serve as destinations for this component. If not specified, defaults to 'group + 1'.) [group+1]
            PARAMETER 7 = data.network_bw ((string) Data network. Network bandwidth) [80GiB/s]
            PARAMETER 8 = data.network_input_buffer_size ((string) Data network. Size of input buffer) [1KiB]
            PARAMETER 9 = data.network_output_buffer_size ((string) data network. Size of output buffer) [1KiB]
            PARAMETER 10 = data.min_packet_size ((string) Data network. Size of a packet without a payload (e.g., control message size)) [8B]
            PARAMETER 11 = data.port ((string) Data network. Set by parent component. Name of port this NIC sits on.) []
            PARAMETER 12 = req.network_bw ((string) Req network. Network bandwidth) [80GiB/s]
            PARAMETER 13 = req.network_input_buffer_size ((string) Req network. Size of input buffer) [1KiB]
            PARAMETER 14 = req.network_output_buffer_size ((string) Req network. Size of output buffer) [1KiB]
            PARAMETER 15 = req.min_packet_size ((string) Req network. Size of a packet without a payload (e.g., control message size)) [8B]
            PARAMETER 16 = req.port ((string) Req network. Set by parent component. Name of port this NIC sits on.) []
            PARAMETER 17 = ack.network_bw ((string) Ack network. Network bandwidth) [80GiB/s]
            PARAMETER 18 = ack.network_input_buffer_size ((string) Ack network. Size of input buffer) [1KiB]
            PARAMETER 19 = ack.network_output_buffer_size ((string) Ack network. Size of output buffer) [1KiB]
            PARAMETER 20 = ack.min_packet_size ((string) Ack network. Size of a packet without a payload (e.g., control message size)) [8B]
            PARAMETER 21 = ack.port ((string) Ack network. Set by parent component. Name of port this NIC sits on.) []
            PARAMETER 22 = fwd.network_bw ((string) Fwd network. Network bandwidth) [80GiB/s]
            PARAMETER 23 = fwd.network_input_buffer_size ((string) Fwd network. Size of input buffer) [1KiB]
            PARAMETER 24 = fwd.network_output_buffer_size ((string) Fwd network. Size of output buffer) [1KiB]
            PARAMETER 25 = fwd.min_packet_size ((string) Fwd network. Size of a packet without a payload (e.g., control message size)) [8B]
            PARAMETER 26 = fwd.port ((string) Fwd network. Set by parent component. Name of port this NIC sits on.) []
            PARAMETER 27 = clock ((string) Units for latency statistics) [1GHz]
    MemNICFour: Memory-oriented network interface for split networks
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:55:42, using file: ../../../../src/sst/elements/memHierarchy/memNICFour.h
      SubComponent 4: MemNetBridge
      Interface: SST::Merlin::Bridge::Translator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = debug ((int) Print debug information. Options: 0[no output], 1[stdout], 2[stderr], 3[file]) [0]
            PARAMETER 1 = debug_level ((int) Debugging level. Between 0 and 10) [0]
    MemNetBridge: Merlin::Bridge::Translator for memory network bridging
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:13, using file: memNetBridge.h
      SubComponent 5: MemoryManagerSieve
      Interface: SST::ArielComponent::ArielMemoryManager
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = alloc_link_%(corecound)d (Each core's link memSieve)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = memmgr (Which memory manager to use for translation) [SST::Ariel::ArielMemoryManager]
         NUM PARAMETERS = 0
    MemoryManagerSieve: Memory manager for interfacing to MemSieve
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:05, using file: Sieve/memmgr_sieve.h
      SubComponent 6: Messier
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = nvm_link (Link to Messier)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = verbose (Sets the verbosity of the backend output) [0]
            PARAMETER 7 = access_time (Link latency for the link to the Messier memory model. With units (SI ok).) [1ns]
    Messier: Messier memory timings
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:54:49, using file: ./membackend/MessierBackend.h
      SubComponent 7: amoCustomCmdHandler
      Interface: SST::MemHierarchy::CustomCmdMemHandler
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    amoCustomCmdHandler: Custom command handler for atomics (AMO)
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:55:54, using file: ./customcmd/amoCustomCmdHandler.h
      SubComponent 8: coherence.incoherent
      Interface: SST::MemHierarchy::CoherenceController
         NUM STATISTICS = 91
            STATISTIC 0 = GetSHit_Arrival [GetS was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 1 = GetXHit_Arrival [GetX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 2 = GetSXHit_Arrival [GetSX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 3 = GetSMiss_Arrival [GetS was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 4 = GetXMiss_Arrival [GetX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 5 = GetSXMiss_Arrival [GetSX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 6 = GetSHit_Blocked [GetS was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 7 = GetXHit_Blocked [GetX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 8 = GetSXHit_Blocked [GetSX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 9 = GetSMiss_Blocked [GetS was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 10 = GetXMiss_Blocked [GetX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 11 = GetSXMiss_Blocked [GetSX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 12 = eventSent_GetS [Number of GetS requests sent] (events) Enable level = 2
            STATISTIC 13 = eventSent_GetX [Number of GetX requests sent] (events) Enable level = 2
            STATISTIC 14 = eventSent_GetSX [Number of GetSX requests sent] (events) Enable level = 2
            STATISTIC 15 = eventSent_GetSResp [Number of GetSResp responses sent] (events) Enable level = 2
            STATISTIC 16 = eventSent_GetXResp [Number of GetXResp responses sent] (events) Enable level = 2
            STATISTIC 17 = eventSent_PutE [Number of PutE requests sent] (events) Enable level = 2
            STATISTIC 18 = eventSent_PutM [Number of PutM requests sent] (events) Enable level = 2
            STATISTIC 19 = eventSent_NACK [Number of NACKs sent] (events) Enable level = 2
            STATISTIC 20 = eventSent_FlushLine [Number of FlushLine requests sent] (events) Enable level = 2
            STATISTIC 21 = eventSent_FlushLineInv [Number of FlushLineInv requests sent] (events) Enable level = 2
            STATISTIC 22 = eventSent_FlushLineResp [Number of FlushLineResp responses sent] (events) Enable level = 2
            STATISTIC 23 = eventSent_Put [Number of Put requests sent] (events) Enable level = 6
            STATISTIC 24 = eventSent_Get [Number of Get requests sent] (events) Enable level = 6
            STATISTIC 25 = eventSent_AckMove [Number of AckMove responses sent] (events) Enable level = 6
            STATISTIC 26 = eventSent_CustomReq [Number of CustomReq requests sent] (events) Enable level = 4
            STATISTIC 27 = eventSent_CustomResp [Number of CustomResp responses sent] (events) Enable level = 4
            STATISTIC 28 = eventSent_CustomAck [Number of CustomAck responses sent] (events) Enable level = 4
            STATISTIC 29 = stateEvent_GetS_I [Event/State: Number of times a GetS was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 30 = stateEvent_GetS_E [Event/State: Number of times a GetS was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 31 = stateEvent_GetS_M [Event/State: Number of times a GetS was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 32 = stateEvent_GetX_I [Event/State: Number of times a GetX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 33 = stateEvent_GetX_E [Event/State: Number of times a GetX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 34 = stateEvent_GetX_M [Event/State: Number of times a GetX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 35 = stateEvent_GetSX_I [Event/State: Number of times a GetSX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 36 = stateEvent_GetSX_E [Event/State: Number of times a GetSX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 37 = stateEvent_GetSX_M [Event/State: Number of times a GetSX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 38 = stateEvent_GetSResp_IS [Event/State: Number of times a GetSResp was seen in state IS] (count) Enable level = 3
            STATISTIC 39 = stateEvent_GetXResp_IS [Event/State: Number of times a GetXResp was seen in state IS] (count) Enable level = 3
            STATISTIC 40 = stateEvent_GetXResp_IM [Event/State: Number of times a GetXResp was seen in state IM] (count) Enable level = 3
            STATISTIC 41 = stateEvent_PutE_I [Event/State: Number of times a PutE was seen in state I] (count) Enable level = 3
            STATISTIC 42 = stateEvent_PutE_E [Event/State: Number of times a PutE was seen in state E] (count) Enable level = 3
            STATISTIC 43 = stateEvent_PutE_M [Event/State: Number of times a PutE was seen in state M] (count) Enable level = 3
            STATISTIC 44 = stateEvent_PutE_IM [Event/State: Number of times a PutE was seen in state IM] (count) Enable level = 3
            STATISTIC 45 = stateEvent_PutE_IS [Event/State: Number of times a PutE was seen in state IS] (count) Enable level = 3
            STATISTIC 46 = stateEvent_PutE_IB [Event/State: Number of times a PutE was seen in state I_B] (count) Enable level = 3
            STATISTIC 47 = stateEvent_PutE_SB [Event/State: Number of times a PutE was seen in state S_B] (count) Enable level = 3
            STATISTIC 48 = stateEvent_PutM_I [Event/State: Number of times a PutM was seen in state I] (count) Enable level = 3
            STATISTIC 49 = stateEvent_PutM_E [Event/State: Number of times a PutM was seen in state E] (count) Enable level = 3
            STATISTIC 50 = stateEvent_PutM_M [Event/State: Number of times a PutM was seen in state M] (count) Enable level = 3
            STATISTIC 51 = stateEvent_PutM_IS [Event/State: Number of times a PutM was seen in state IS] (count) Enable level = 3
            STATISTIC 52 = stateEvent_PutM_IM [Event/State: Number of times a PutM was seen in state IM] (count) Enable level = 3
            STATISTIC 53 = stateEvent_PutM_IB [Event/State: Number of times a PutM was seen in state I_B] (count) Enable level = 3
            STATISTIC 54 = stateEvent_PutM_SB [Event/State: Number of times a PutM was seen in state S_B] (count) Enable level = 3
            STATISTIC 55 = stateEvent_FlushLine_I [Event/State: Number of times a FlushLine was seen in state I] (count) Enable level = 3
            STATISTIC 56 = stateEvent_FlushLine_E [Event/State: Number of times a FlushLine was seen in state E] (count) Enable level = 3
            STATISTIC 57 = stateEvent_FlushLine_M [Event/State: Number of times a FlushLine was seen in state M] (count) Enable level = 3
            STATISTIC 58 = stateEvent_FlushLine_IS [Event/State: Number of times a FlushLine was seen in state IS] (count) Enable level = 3
            STATISTIC 59 = stateEvent_FlushLine_IM [Event/State: Number of times a FlushLine was seen in state IM] (count) Enable level = 3
            STATISTIC 60 = stateEvent_FlushLine_IB [Event/State: Number of times a FlushLine was seen in state I_B] (count) Enable level = 3
            STATISTIC 61 = stateEvent_FlushLine_SB [Event/State: Number of times a FlushLine was seen in state S_B] (count) Enable level = 3
            STATISTIC 62 = stateEvent_FlushLineInv_I [Event/State: Number of times a FlushLineInv was seen in state I] (count) Enable level = 3
            STATISTIC 63 = stateEvent_FlushLineInv_E [Event/State: Number of times a FlushLineInv was seen in state E] (count) Enable level = 3
            STATISTIC 64 = stateEvent_FlushLineInv_M [Event/State: Number of times a FlushLineInv was seen in state M] (count) Enable level = 3
            STATISTIC 65 = stateEvent_FlushLineInv_IS [Event/State: Number of times a FlushLineInv was seen in state IS] (count) Enable level = 3
            STATISTIC 66 = stateEvent_FlushLineInv_IM [Event/State: Number of times a FlushLineInv was seen in state IM] (count) Enable level = 3
            STATISTIC 67 = stateEvent_FlushLineInv_IB [Event/State: Number of times a FlushLineInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 68 = stateEvent_FlushLineInv_SB [Event/State: Number of times a FlushLineInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 69 = stateEvent_FlushLineResp_I [Event/State: Number of times a FlushLineResp was seen in state I] (count) Enable level = 3
            STATISTIC 70 = stateEvent_FlushLineResp_IB [Event/State: Number of times a FlushLineResp was seen in state I_B] (count) Enable level = 3
            STATISTIC 71 = stateEvent_FlushLineResp_SB [Event/State: Number of times a FlushLineResp was seen in state S_B] (count) Enable level = 3
            STATISTIC 72 = evict_I [Eviction: Attempted to evict a block in state I] (count) Enable level = 3
            STATISTIC 73 = evict_E [Eviction: Attempted to evict a block in state E] (count) Enable level = 3
            STATISTIC 74 = evict_M [Eviction: Attempted to evict a block in state M] (count) Enable level = 3
            STATISTIC 75 = evict_IS [Eviction: Attempted to evict a block in state IS] (count) Enable level = 3
            STATISTIC 76 = evict_IM [Eviction: Attempted to evict a block in state IM] (count) Enable level = 3
            STATISTIC 77 = evict_IB [Eviction: Attempted to evict a block in state S_B] (count) Enable level = 3
            STATISTIC 78 = evict_SB [Eviction: Attempted to evict a block in state I_B] (count) Enable level = 3
            STATISTIC 79 = latency_GetS_miss [Latency for read misses] (cycles) Enable level = 1
            STATISTIC 80 = latency_GetS_hit [Latency for read hits] (cycles) Enable level = 1
            STATISTIC 81 = latency_GetX_miss [Latency for write misses] (cycles) Enable level = 1
            STATISTIC 82 = latency_GetX_hit [Latency for write hits] (cycles) Enable level = 1
            STATISTIC 83 = latency_GetSX_miss [Latency for read-exclusive misses] (cycles) Enable level = 1
            STATISTIC 84 = latency_GetSX_hit [Latency for read-exclusive hits] (cycles) Enable level = 1
            STATISTIC 85 = latency_FlushLine [Latency for Flush requests] (cycles) Enable level = 1
            STATISTIC 86 = latency_FlushLineInv [Latency for Flush and Invalidate requests] (cycles) Enable level = 1
            STATISTIC 87 = prefetch_useful [Prefetched block had a subsequent hit (useful prefetch)] (count) Enable level = 2
            STATISTIC 88 = prefetch_evict [Prefetched block was evicted/flushed before being accessed] (count) Enable level = 2
            STATISTIC 89 = prefetch_redundant [Prefetch issued for a block that was already in cache] (count) Enable level = 2
            STATISTIC 90 = default_stat [Default statistic used for unexpected events/states/etc. Should be 0, if not, check for missing statistic registerations.] (none) Enable level = 7
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = replacement (Replacement policies, slot 0 is for cache, slot 1 is for directory (if it exists)) [SST::MemHierarchy::ReplacementPolicy]
            SUB COMPONENT SLOT 1 = hash (Hash function for mapping addresses to cache lines) [SST::MemHierarchy::HashFunction]
         NUM PARAMETERS = 0
    coherence.incoherent: Implements an second level or greater cache without coherence
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:58:08, using file: ./coherencemgr/Incoherent.h
      SubComponent 9: coherence.incoherent_l1
      Interface: SST::MemHierarchy::CoherenceController
         NUM STATISTICS = 78
            STATISTIC 0 = GetSHit_Arrival [GetS was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 1 = GetXHit_Arrival [GetX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 2 = GetSXHit_Arrival [GetSX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 3 = GetSMiss_Arrival [GetS was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 4 = GetXMiss_Arrival [GetX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 5 = GetSXMiss_Arrival [GetSX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 6 = GetSHit_Blocked [GetS was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 7 = GetXHit_Blocked [GetX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 8 = GetSXHit_Blocked [GetSX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 9 = GetSMiss_Blocked [GetS was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 10 = GetXMiss_Blocked [GetX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 11 = GetSXMiss_Blocked [GetSX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 12 = eventSent_GetS [Number of GetS requests sent] (events) Enable level = 2
            STATISTIC 13 = eventSent_GetX [Number of GetX requests sent] (events) Enable level = 2
            STATISTIC 14 = eventSent_GetSX [Number of GetSX requests sent] (events) Enable level = 2
            STATISTIC 15 = eventSent_GetSResp [Number of GetSResp responses sent] (events) Enable level = 2
            STATISTIC 16 = eventSent_GetXResp [Number of GetXResp responses sent] (events) Enable level = 2
            STATISTIC 17 = eventSent_PutE [Number of PutE requests sent] (events) Enable level = 2
            STATISTIC 18 = eventSent_PutM [Number of PutM requests sent] (events) Enable level = 2
            STATISTIC 19 = eventSent_FlushLine [Number of FlushLine requests sent] (events) Enable level = 2
            STATISTIC 20 = eventSent_FlushLineInv [Number of FlushLineInv requests sent] (events) Enable level = 2
            STATISTIC 21 = eventSent_FlushLineResp [Number of FlushLineResp responses sent] (events) Enable level = 2
            STATISTIC 22 = eventSent_NACK [Number of NACKs sent] (events) Enable level = 2
            STATISTIC 23 = eventSent_Put [Number of Put requests sent] (events) Enable level = 6
            STATISTIC 24 = eventSent_Get [Number of Get requests sent] (events) Enable level = 6
            STATISTIC 25 = eventSent_AckMove [Number of AckMove responses sent] (events) Enable level = 6
            STATISTIC 26 = eventSent_CustomReq [Number of CustomReq requests sent] (events) Enable level = 4
            STATISTIC 27 = eventSent_CustomResp [Number of CustomResp responses sent] (events) Enable level = 4
            STATISTIC 28 = eventSent_CustomAck [Number of CustomAck responses sent] (events) Enable level = 4
            STATISTIC 29 = stateEvent_GetS_I [Event/State: Number of times a GetS was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 30 = stateEvent_GetS_E [Event/State: Number of times a GetS was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 31 = stateEvent_GetS_M [Event/State: Number of times a GetS was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 32 = stateEvent_GetX_I [Event/State: Number of times a GetX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 33 = stateEvent_GetX_E [Event/State: Number of times a GetX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 34 = stateEvent_GetX_M [Event/State: Number of times a GetX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 35 = stateEvent_GetSX_I [Event/State: Number of times a GetSX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 36 = stateEvent_GetSX_E [Event/State: Number of times a GetSX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 37 = stateEvent_GetSX_M [Event/State: Number of times a GetSX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 38 = stateEvent_GetSResp_IS [Event/State: Number of times a GetSResp was seen in state IS] (count) Enable level = 3
            STATISTIC 39 = stateEvent_GetXResp_IM [Event/State: Number of times a GetXResp was seen in state IM] (count) Enable level = 3
            STATISTIC 40 = stateEvent_FlushLine_I [Event/State: Number of times a FlushLine was seen in state I] (count) Enable level = 3
            STATISTIC 41 = stateEvent_FlushLine_E [Event/State: Number of times a FlushLine was seen in state E] (count) Enable level = 3
            STATISTIC 42 = stateEvent_FlushLine_M [Event/State: Number of times a FlushLine was seen in state M] (count) Enable level = 3
            STATISTIC 43 = stateEvent_FlushLine_IS [Event/State: Number of times a FlushLine was seen in state IS] (count) Enable level = 3
            STATISTIC 44 = stateEvent_FlushLine_IM [Event/State: Number of times a FlushLine was seen in state IM] (count) Enable level = 3
            STATISTIC 45 = stateEvent_FlushLine_IB [Event/State: Number of times a FlushLine was seen in state I_B] (count) Enable level = 3
            STATISTIC 46 = stateEvent_FlushLine_SB [Event/State: Number of times a FlushLine was seen in state S_B] (count) Enable level = 3
            STATISTIC 47 = stateEvent_FlushLineInv_I [Event/State: Number of times a FlushLineInv was seen in state I] (count) Enable level = 3
            STATISTIC 48 = stateEvent_FlushLineInv_E [Event/State: Number of times a FlushLineInv was seen in state E] (count) Enable level = 3
            STATISTIC 49 = stateEvent_FlushLineInv_M [Event/State: Number of times a FlushLineInv was seen in state M] (count) Enable level = 3
            STATISTIC 50 = stateEvent_FlushLineInv_IS [Event/State: Number of times a FlushLineInv was seen in state IS] (count) Enable level = 3
            STATISTIC 51 = stateEvent_FlushLineInv_IM [Event/State: Number of times a FlushLineInv was seen in state IM] (count) Enable level = 3
            STATISTIC 52 = stateEvent_FlushLineInv_IB [Event/State: Number of times a FlushLineInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 53 = stateEvent_FlushLineInv_SB [Event/State: Number of times a FlushLineInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 54 = stateEvent_FlushLineResp_I [Event/State: Number of times a FlushLineResp was seen in state I] (count) Enable level = 3
            STATISTIC 55 = stateEvent_FlushLineResp_IB [Event/State: Number of times a FlushLineResp was seen in state I_B] (count) Enable level = 3
            STATISTIC 56 = stateEvent_FlushLineResp_SB [Event/State: Number of times a FlushLineResp was seen in state S_B] (count) Enable level = 3
            STATISTIC 57 = evict_I [Eviction: Attempted to evict a block in state I] (count) Enable level = 3
            STATISTIC 58 = evict_E [Eviction: Attempted to evict a block in state E] (count) Enable level = 3
            STATISTIC 59 = evict_M [Eviction: Attempted to evict a block in state M] (count) Enable level = 3
            STATISTIC 60 = evict_IS [Eviction: Attempted to evict a block in state IS] (count) Enable level = 3
            STATISTIC 61 = evict_IM [Eviction: Attempted to evict a block in state IM] (count) Enable level = 3
            STATISTIC 62 = evict_IB [Eviction: Attempted to evict a block in state S_B] (count) Enable level = 3
            STATISTIC 63 = evict_SB [Eviction: Attempted to evict a block in state I_B] (count) Enable level = 3
            STATISTIC 64 = latency_GetS_miss [Latency for read misses] (cycles) Enable level = 1
            STATISTIC 65 = latency_GetS_hit [Latency for read hits] (cycles) Enable level = 1
            STATISTIC 66 = latency_GetX_miss [Latency for write misses] (cycles) Enable level = 1
            STATISTIC 67 = latency_GetX_hit [Latency for write hits] (cycles) Enable level = 1
            STATISTIC 68 = latency_GetSX_miss [Latency for read-exclusive misses] (cycles) Enable level = 1
            STATISTIC 69 = latency_GetSX_hit [Latency for read-exclusive hits] (cycles) Enable level = 1
            STATISTIC 70 = latency_FlushLine [Latency for Flush requests] (cycles) Enable level = 1
            STATISTIC 71 = latency_FlushLine_fail [Latency for Flush requests that failed] (cycles) Enable level = 1
            STATISTIC 72 = latency_FlushLineInv [Latency for Flush and Invalidate requests] (cycles) Enable level = 1
            STATISTIC 73 = latency_FlushLineInv_fail [Latency for Flush and Invalidate requests that failed] (cycles) Enable level = 1
            STATISTIC 74 = prefetch_useful [Prefetched block had a subsequent hit (useful prefetch)] (count) Enable level = 2
            STATISTIC 75 = prefetch_evict [Prefetched block was evicted/flushed before being accessed] (count) Enable level = 2
            STATISTIC 76 = prefetch_redundant [Prefetch issued for a block that was already in cache] (count) Enable level = 2
            STATISTIC 77 = default_stat [Default statistic used for unexpected events/states/etc. Should be 0, if not, check for missing statistic registerations.] (none) Enable level = 7
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = replacement (Replacement policies, slot 0 is for cache, slot 1 is for directory (if it exists)) [SST::MemHierarchy::ReplacementPolicy]
            SUB COMPONENT SLOT 1 = hash (Hash function for mapping addresses to cache lines) [SST::MemHierarchy::HashFunction]
         NUM PARAMETERS = 0
    coherence.incoherent_l1: Implements an L1 cache without coherence
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:57:52, using file: ./coherencemgr/Incoherent_L1.h
      SubComponent 10: coherence.mesi_inclusive
      Interface: SST::MemHierarchy::CoherenceController
         NUM STATISTICS = 195
            STATISTIC 0 = GetSHit_Arrival [GetS was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 1 = GetXHit_Arrival [GetX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 2 = GetSXHit_Arrival [GetSX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 3 = GetSMiss_Arrival [GetS was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 4 = GetXMiss_Arrival [GetX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 5 = GetSXMiss_Arrival [GetSX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 6 = GetSHit_Blocked [GetS was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 7 = GetXHit_Blocked [GetX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 8 = GetSXHit_Blocked [GetSX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 9 = GetSMiss_Blocked [GetS was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 10 = GetXMiss_Blocked [GetX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 11 = GetSXMiss_Blocked [GetSX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 12 = eventSent_GetS [Number of GetS requests sent] (events) Enable level = 2
            STATISTIC 13 = eventSent_GetX [Number of GetX requests sent] (events) Enable level = 2
            STATISTIC 14 = eventSent_GetSX [Number of GetSX requests sent] (events) Enable level = 2
            STATISTIC 15 = eventSent_GetSResp [Number of GetSResp responses sent] (events) Enable level = 2
            STATISTIC 16 = eventSent_GetXResp [Number of GetXResp responses sent] (events) Enable level = 2
            STATISTIC 17 = eventSent_PutS [Number of PutS requests sent] (events) Enable level = 2
            STATISTIC 18 = eventSent_PutE [Number of PutE requests sent] (events) Enable level = 2
            STATISTIC 19 = eventSent_PutM [Number of PutM requests sent] (events) Enable level = 2
            STATISTIC 20 = eventSent_Inv [Number of Inv requests sent] (events) Enable level = 2
            STATISTIC 21 = eventSent_Fetch [Number of Fetch requests sent] (events) Enable level = 2
            STATISTIC 22 = eventSent_FetchInv [Number of FetchInv requests sent] (events) Enable level = 2
            STATISTIC 23 = eventSent_FetchInvX [Number of FetchInvX requests sent] (events) Enable level = 2
            STATISTIC 24 = eventSent_ForceInv [Number of ForceInv requests sent] (events) Enable level = 2
            STATISTIC 25 = eventSent_FetchResp [Number of FetchResp requests sent] (events) Enable level = 2
            STATISTIC 26 = eventSent_FetchXResp [Number of FetchXResp requests sent] (events) Enable level = 2
            STATISTIC 27 = eventSent_AckInv [Number of AckInvs sent] (events) Enable level = 2
            STATISTIC 28 = eventSent_AckPut [Number of AckPuts sent] (events) Enable level = 2
            STATISTIC 29 = eventSent_NACK [Number of NACKs sent] (events) Enable level = 2
            STATISTIC 30 = eventSent_FlushLine [Number of FlushLine requests sent] (events) Enable level = 2
            STATISTIC 31 = eventSent_FlushLineInv [Number of FlushLineInv requests sent] (events) Enable level = 2
            STATISTIC 32 = eventSent_FlushLineResp [Number of FlushLineResp responses sent] (events) Enable level = 2
            STATISTIC 33 = eventSent_Put [Number of Put requests sent] (events) Enable level = 6
            STATISTIC 34 = eventSent_Get [Number of Get requests sent] (events) Enable level = 6
            STATISTIC 35 = eventSent_AckMove [Number of AckMove responses sent] (events) Enable level = 6
            STATISTIC 36 = eventSent_CustomReq [Number of CustomReq requests sent] (events) Enable level = 4
            STATISTIC 37 = eventSent_CustomResp [Number of CustomResp responses sent] (events) Enable level = 4
            STATISTIC 38 = eventSent_CustomAck [Number of CustomAck responses sent] (events) Enable level = 4
            STATISTIC 39 = stateEvent_GetS_I [Event/State: Number of times a GetS was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 40 = stateEvent_GetS_S [Event/State: Number of times a GetS was seen in state S (Hit)] (count) Enable level = 3
            STATISTIC 41 = stateEvent_GetS_E [Event/State: Number of times a GetS was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 42 = stateEvent_GetS_M [Event/State: Number of times a GetS was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 43 = stateEvent_GetX_I [Event/State: Number of times a GetX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 44 = stateEvent_GetX_S [Event/State: Number of times a GetX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 45 = stateEvent_GetX_E [Event/State: Number of times a GetX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 46 = stateEvent_GetX_M [Event/State: Number of times a GetX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 47 = stateEvent_GetSX_I [Event/State: Number of times a GetSX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 48 = stateEvent_GetSX_S [Event/State: Number of times a GetSX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 49 = stateEvent_GetSX_E [Event/State: Number of times a GetSX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 50 = stateEvent_GetSX_M [Event/State: Number of times a GetSX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 51 = stateEvent_GetSResp_IS [Event/State: Number of times a GetSResp was seen in state IS] (count) Enable level = 3
            STATISTIC 52 = stateEvent_GetXResp_IS [Event/State: Number of times a GetXResp was seen in state IS] (count) Enable level = 3
            STATISTIC 53 = stateEvent_GetXResp_IM [Event/State: Number of times a GetXResp was seen in state IM] (count) Enable level = 3
            STATISTIC 54 = stateEvent_GetXResp_SM [Event/State: Number of times a GetXResp was seen in state SM] (count) Enable level = 3
            STATISTIC 55 = stateEvent_GetXResp_SMInv [Event/State: Number of times a GetXResp was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 56 = stateEvent_PutS_S [Event/State: Number of times a PutS was seen in state S] (count) Enable level = 3
            STATISTIC 57 = stateEvent_PutS_E [Event/State: Number of times a PutS was seen in state E] (count) Enable level = 3
            STATISTIC 58 = stateEvent_PutS_M [Event/State: Number of times a PutS was seen in state M] (count) Enable level = 3
            STATISTIC 59 = stateEvent_PutS_SInv [Event/State: Number of times a PutS was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 60 = stateEvent_PutS_EInv [Event/State: Number of times a PutS was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 61 = stateEvent_PutS_MInv [Event/State: Number of times a PutS was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 62 = stateEvent_PutS_SMInv [Event/State: Number of times a PutS was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 63 = stateEvent_PutS_SB [Event/State: Number of times a PutS was seen in state S_B] (count) Enable level = 3
            STATISTIC 64 = stateEvent_PutS_SBInv [Event/State: Number of times a PutS was seen in state SB_Inv] (count) Enable level = 3
            STATISTIC 65 = stateEvent_PutE_E [Event/State: Number of times a PutE was seen in state E] (count) Enable level = 3
            STATISTIC 66 = stateEvent_PutE_M [Event/State: Number of times a PutE was seen in state M] (count) Enable level = 3
            STATISTIC 67 = stateEvent_PutE_EInv [Event/State: Number of times a PutE was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 68 = stateEvent_PutE_MInv [Event/State: Number of times a PutE was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 69 = stateEvent_PutE_EInvX [Event/State: Number of times a PutE was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 70 = stateEvent_PutE_MInvX [Event/State: Number of times a PutE was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 71 = stateEvent_PutM_E [Event/State: Number of times a PutM was seen in state E] (count) Enable level = 3
            STATISTIC 72 = stateEvent_PutM_M [Event/State: Number of times a PutM was seen in state M] (count) Enable level = 3
            STATISTIC 73 = stateEvent_PutM_EInv [Event/State: Number of times a PutM was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 74 = stateEvent_PutM_MInv [Event/State: Number of times a PutM was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 75 = stateEvent_PutM_EInvX [Event/State: Number of times a PutM was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 76 = stateEvent_PutM_MInvX [Event/State: Number of times a PutM was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 77 = stateEvent_PutX_E [Event/State: Number of times a PutX was seen in state E] (count) Enable level = 3
            STATISTIC 78 = stateEvent_PutX_M [Event/State: Number of times a PutX was seen in state M] (count) Enable level = 3
            STATISTIC 79 = stateEvent_PutX_EInv [Event/State: Number of times a PutX was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 80 = stateEvent_PutX_MInv [Event/State: Number of times a PutX was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 81 = stateEvent_PutX_EInvX [Event/State: Number of times a PutX was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 82 = stateEvent_PutX_MInvX [Event/State: Number of times a PutX was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 83 = stateEvent_Inv_I [Event/State: Number of times an Inv was seen in state I] (count) Enable level = 3
            STATISTIC 84 = stateEvent_Inv_IS [Event/State: Number of times an Inv was seen in state IS] (count) Enable level = 3
            STATISTIC 85 = stateEvent_Inv_IM [Event/State: Number of times an Inv was seen in state IM] (count) Enable level = 3
            STATISTIC 86 = stateEvent_Inv_IB [Event/State: Number of times an Inv was seen in state I_B] (count) Enable level = 3
            STATISTIC 87 = stateEvent_Inv_S [Event/State: Number of times an Inv was seen in state S] (count) Enable level = 3
            STATISTIC 88 = stateEvent_Inv_SM [Event/State: Number of times an Inv was seen in state SM] (count) Enable level = 3
            STATISTIC 89 = stateEvent_Inv_SB [Event/State: Number of times an Inv was seen in state S_B] (count) Enable level = 3
            STATISTIC 90 = stateEvent_FetchInv_I [Event/State: Number of times a FetchInv was seen in state I] (count) Enable level = 3
            STATISTIC 91 = stateEvent_FetchInv_IS [Event/State: Number of times a FetchInv was seen in state IS] (count) Enable level = 3
            STATISTIC 92 = stateEvent_FetchInv_IM [Event/State: Number of times a FetchInv was seen in state IM] (count) Enable level = 3
            STATISTIC 93 = stateEvent_FetchInv_SM [Event/State: Number of times a FetchInv was seen in state SM] (count) Enable level = 3
            STATISTIC 94 = stateEvent_FetchInv_S [Event/State: Number of times a FetchInv was seen in state S] (count) Enable level = 3
            STATISTIC 95 = stateEvent_FetchInv_E [Event/State: Number of times a FetchInv was seen in state E] (count) Enable level = 3
            STATISTIC 96 = stateEvent_FetchInv_M [Event/State: Number of times a FetchInv was seen in state M] (count) Enable level = 3
            STATISTIC 97 = stateEvent_FetchInv_SMInv [Event/State: Number of times a FetchInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 98 = stateEvent_FetchInv_EInv [Event/State: Number of times a FetchInv was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 99 = stateEvent_FetchInv_EInvX [Event/State: Number of times a FetchInv was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 100 = stateEvent_FetchInv_MInv [Event/State: Number of times a FetchInv was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 101 = stateEvent_FetchInv_MInvX [Event/State: Number of times a FetchInv was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 102 = stateEvent_FetchInv_IB [Event/State: Number of times a FetchInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 103 = stateEvent_FetchInv_SB [Event/State: Number of times a FetchInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 104 = stateEvent_FetchInvX_I [Event/State: Number of times a FetchInvX was seen in state I] (count) Enable level = 3
            STATISTIC 105 = stateEvent_FetchInvX_IS [Event/State: Number of times a FetchInvX was seen in state IS] (count) Enable level = 3
            STATISTIC 106 = stateEvent_FetchInvX_IM [Event/State: Number of times a FetchInvX was seen in state IM] (count) Enable level = 3
            STATISTIC 107 = stateEvent_FetchInvX_E [Event/State: Number of times a FetchInvX was seen in state E] (count) Enable level = 3
            STATISTIC 108 = stateEvent_FetchInvX_M [Event/State: Number of times a FetchInvX was seen in state M] (count) Enable level = 3
            STATISTIC 109 = stateEvent_FetchInvX_EInv [Event/State: Number of times a FetchInvX was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 110 = stateEvent_FetchInvX_EInvX [Event/State: Number of times a FetchInvX was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 111 = stateEvent_FetchInvX_MInv [Event/State: Number of times a FetchInvX was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 112 = stateEvent_FetchInvX_MInvX [Event/State: Number of times a FetchInvX was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 113 = stateEvent_FetchInvX_IB [Event/State: Number of times a FetchInvX was seen in state I_B] (count) Enable level = 3
            STATISTIC 114 = stateEvent_FetchInvX_SB [Event/State: Number of times a FetchInvX was seen in state S_B] (count) Enable level = 3
            STATISTIC 115 = stateEvent_Fetch_I [Event/State: Number of times a Fetch was seen in state I] (count) Enable level = 3
            STATISTIC 116 = stateEvent_Fetch_IS [Event/State: Number of times a Fetch was seen in state IS] (count) Enable level = 3
            STATISTIC 117 = stateEvent_Fetch_IM [Event/State: Number of times a Fetch was seen in state IM] (count) Enable level = 3
            STATISTIC 118 = stateEvent_Fetch_S [Event/State: Number of times a Fetch was seen in state S] (count) Enable level = 3
            STATISTIC 119 = stateEvent_Fetch_SM [Event/State: Number of times a Fetch was seen in state SM] (count) Enable level = 3
            STATISTIC 120 = stateEvent_Fetch_SMInv [Event/State: Number of times a Fetch was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 121 = stateEvent_Fetch_SInv [Event/State: Number of times a Fetch was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 122 = stateEvent_Fetch_IB [Event/State: Number of times a Fetch was seen in state I_B] (count) Enable level = 3
            STATISTIC 123 = stateEvent_Fetch_SB [Event/State: Number of times a Fetch was seen in state S_B] (count) Enable level = 3
            STATISTIC 124 = stateEvent_ForceInv_I [Event/State: Number of times a ForceInv was seen in state I] (count) Enable level = 3
            STATISTIC 125 = stateEvent_ForceInv_IS [Event/State: Number of times a ForceInv was seen in state IS] (count) Enable level = 3
            STATISTIC 126 = stateEvent_ForceInv_IM [Event/State: Number of times a ForceInv was seen in state IM] (count) Enable level = 3
            STATISTIC 127 = stateEvent_ForceInv_SM [Event/State: Number of times a ForceInv was seen in state SM] (count) Enable level = 3
            STATISTIC 128 = stateEvent_ForceInv_S [Event/State: Number of times a ForceInv was seen in state S] (count) Enable level = 3
            STATISTIC 129 = stateEvent_ForceInv_E [Event/State: Number of times a ForceInv was seen in state E] (count) Enable level = 3
            STATISTIC 130 = stateEvent_ForceInv_M [Event/State: Number of times a ForceInv was seen in state M] (count) Enable level = 3
            STATISTIC 131 = stateEvent_ForceInv_SMInv [Event/State: Number of times a ForceInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 132 = stateEvent_ForceInv_SInv [Event/State: Number of times a ForceInv was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 133 = stateEvent_ForceInv_EInv [Event/State: Number of times a ForceInv was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 134 = stateEvent_ForceInv_EInvX [Event/State: Number of times a ForceInv was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 135 = stateEvent_ForceInv_MInv [Event/State: Number of times a ForceInv was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 136 = stateEvent_ForceInv_MInvX [Event/State: Number of times a ForceInv was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 137 = stateEvent_ForceInv_IB [Event/State: Number of times a ForceInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 138 = stateEvent_ForceInv_SB [Event/State: Number of times a ForceInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 139 = stateEvent_FetchResp_EInv [Event/State: Number of times a FetchResp was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 140 = stateEvent_FetchResp_MInv [Event/State: Number of times a FetchResp was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 141 = stateEvent_FetchXResp_EInvX [Event/State: Number of times a FetchXResp was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 142 = stateEvent_FetchXResp_MInvX [Event/State: Number of times a FetchXResp was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 143 = stateEvent_AckInv_SInv [Event/State: Number of times an AckInv was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 144 = stateEvent_AckInv_SMInv [Event/State: Number of times an AckInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 145 = stateEvent_AckInv_EInv [Event/State: Number of times an AckInv was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 146 = stateEvent_AckInv_MInv [Event/State: Number of times an AckInv was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 147 = stateEvent_AckInv_SBInv [Event/State: Number of times an AckInv was seen in state SB_Inv] (count) Enable level = 3
            STATISTIC 148 = stateEvent_AckPut_I [Event/State: Number of times an AckPut was seen in state I] (count) Enable level = 3
            STATISTIC 149 = stateEvent_FlushLine_I [Event/State: Number of times a FlushLine was seen in state I] (count) Enable level = 3
            STATISTIC 150 = stateEvent_FlushLine_S [Event/State: Number of times a FlushLine was seen in state S] (count) Enable level = 3
            STATISTIC 151 = stateEvent_FlushLine_E [Event/State: Number of times a FlushLine was seen in state E] (count) Enable level = 3
            STATISTIC 152 = stateEvent_FlushLine_M [Event/State: Number of times a FlushLine was seen in state M] (count) Enable level = 3
            STATISTIC 153 = stateEvent_FlushLineInv_I [Event/State: Number of times a FlushLineInv was seen in state I] (count) Enable level = 3
            STATISTIC 154 = stateEvent_FlushLineInv_S [Event/State: Number of times a FlushLineInv was seen in state S] (count) Enable level = 3
            STATISTIC 155 = stateEvent_FlushLineInv_E [Event/State: Number of times a FlushLineInv was seen in state E] (count) Enable level = 3
            STATISTIC 156 = stateEvent_FlushLineInv_M [Event/State: Number of times a FlushLineInv was seen in state M] (count) Enable level = 3
            STATISTIC 157 = stateEvent_FlushLineResp_I [Event/State: Number of times a FlushLineResp was seen in state I] (count) Enable level = 3
            STATISTIC 158 = stateEvent_FlushLineResp_IB [Event/State: Number of times a FlushLineResp was seen in state I_B] (count) Enable level = 3
            STATISTIC 159 = stateEvent_FlushLineResp_SB [Event/State: Number of times a FlushLineResp was seen in state S_B] (count) Enable level = 3
            STATISTIC 160 = evict_I [Eviction: Attempted to evict a block in state I] (count) Enable level = 3
            STATISTIC 161 = evict_S [Eviction: Attempted to evict a block in state S] (count) Enable level = 3
            STATISTIC 162 = evict_E [Eviction: Attempted to evict a block in state E] (count) Enable level = 3
            STATISTIC 163 = evict_M [Eviction: Attempted to evict a block in state M] (count) Enable level = 3
            STATISTIC 164 = evict_IS [Eviction: Attempted to evict a block in state IS] (count) Enable level = 3
            STATISTIC 165 = evict_IM [Eviction: Attempted to evict a block in state IM] (count) Enable level = 3
            STATISTIC 166 = evict_SM [Eviction: Attempted to evict a block in state SM] (count) Enable level = 3
            STATISTIC 167 = evict_SInv [Eviction: Attempted to evict a block in state S_Inv] (count) Enable level = 3
            STATISTIC 168 = evict_EInv [Eviction: Attempted to evict a block in state E_Inv] (count) Enable level = 3
            STATISTIC 169 = evict_MInv [Eviction: Attempted to evict a block in state M_Inv] (count) Enable level = 3
            STATISTIC 170 = evict_SMInv [Eviction: Attempted to evict a block in state SM_Inv] (count) Enable level = 3
            STATISTIC 171 = evict_EInvX [Eviction: Attempted to evict a block in state E_InvX] (count) Enable level = 3
            STATISTIC 172 = evict_MInvX [Eviction: Attempted to evict a block in state M_InvX] (count) Enable level = 3
            STATISTIC 173 = evict_IB [Eviction: Attempted to evict a block in state S_B] (count) Enable level = 3
            STATISTIC 174 = evict_SB [Eviction: Attempted to evict a block in state I_B] (count) Enable level = 3
            STATISTIC 175 = evict_SBInv [Eviction: Attempted to evict a block in state SB_Inv] (count) Enable level = 3
            STATISTIC 176 = latency_GetS_hit [Latency for read hits] (cycles) Enable level = 1
            STATISTIC 177 = latency_GetS_miss [Latency for read misses, block not present] (cycles) Enable level = 1
            STATISTIC 178 = latency_GetS_inv [Latency for read misses, required fetch/inv from owner] (cycles) Enable level = 1
            STATISTIC 179 = latency_GetX_hit [Latency for write hits] (cycles) Enable level = 1
            STATISTIC 180 = latency_GetX_miss [Latency for write misses, block not present] (cycles) Enable level = 1
            STATISTIC 181 = latency_GetX_inv [Latency for write misses, block present but required invalidation/fetch] (cycles) Enable level = 1
            STATISTIC 182 = latency_GetX_upgrade [Latency for write misses, block present but in Shared state (includes invs in S)] (cycles) Enable level = 1
            STATISTIC 183 = latency_GetSX_hit [Latency for read-exclusive hits] (cycles) Enable level = 1
            STATISTIC 184 = latency_GetSX_miss [Latency for read-exclusive misses, block not present] (cycles) Enable level = 1
            STATISTIC 185 = latency_GetSX_inv [Latency for read-exclusive misses, block present but required invalidation/fetch] (cycles) Enable level = 1
            STATISTIC 186 = latency_GetSX_upgrade [Latency for read-exclusive misses, block present but in Shared state (includes invs in S)] (cycles) Enable level = 1
            STATISTIC 187 = latency_FlushLine [Latency for flush requests] (cycles) Enable level = 1
            STATISTIC 188 = latency_FlushLineInv [Latency for flush+invalidate requests] (cycles) Enable level = 1
            STATISTIC 189 = prefetch_useful [Prefetched block had a subsequent hit (useful prefetch)] (count) Enable level = 2
            STATISTIC 190 = prefetch_evict [Prefetched block was evicted/flushed before being accessed] (count) Enable level = 2
            STATISTIC 191 = prefetch_inv [Prefetched block was invalidated before being accessed] (count) Enable level = 2
            STATISTIC 192 = prefetch_coherence_miss [Prefetched block incurred a coherence miss (upgrade) on its first access] (count) Enable level = 2
            STATISTIC 193 = prefetch_redundant [Prefetch issued for a block that was already in cache] (count) Enable level = 2
            STATISTIC 194 = default_stat [Default statistic used for unexpected events/states/etc. Should be 0, if not, check for missing statistic registerations.] (none) Enable level = 7
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = replacement (Replacement policies, slot 0 is for cache, slot 1 is for directory (if it exists)) [SST::MemHierarchy::ReplacementPolicy]
            SUB COMPONENT SLOT 1 = hash (Hash function for mapping addresses to cache lines) [SST::MemHierarchy::HashFunction]
         NUM PARAMETERS = 0
    coherence.mesi_inclusive: Implements MESI or MSI coherence for a second level or greater cache
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:57:06, using file: ./coherencemgr/MESI_Inclusive.h
      SubComponent 11: coherence.mesi_l1
      Interface: SST::MemHierarchy::CoherenceController
         NUM STATISTICS = 128
            STATISTIC 0 = GetSHit_Arrival [GetS was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 1 = GetXHit_Arrival [GetX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 2 = GetSXHit_Arrival [GetSX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 3 = GetSMiss_Arrival [GetS was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 4 = GetXMiss_Arrival [GetX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 5 = GetSXMiss_Arrival [GetSX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 6 = GetSHit_Blocked [GetS was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 7 = GetXHit_Blocked [GetX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 8 = GetSXHit_Blocked [GetSX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 9 = GetSMiss_Blocked [GetS was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 10 = GetXMiss_Blocked [GetX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 11 = GetSXMiss_Blocked [GetSX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 12 = eventSent_GetS [Number of GetS requests sent] (events) Enable level = 2
            STATISTIC 13 = eventSent_GetX [Number of GetX requests sent] (events) Enable level = 2
            STATISTIC 14 = eventSent_GetSX [Number of GetSX requests sent] (events) Enable level = 2
            STATISTIC 15 = eventSent_GetSResp [Number of GetSResp responses sent] (events) Enable level = 2
            STATISTIC 16 = eventSent_GetXResp [Number of GetXResp responses sent] (events) Enable level = 2
            STATISTIC 17 = eventSent_PutS [Number of PutS requests sent] (events) Enable level = 2
            STATISTIC 18 = eventSent_PutE [Number of PutE requests sent] (events) Enable level = 2
            STATISTIC 19 = eventSent_PutM [Number of PutM requests sent] (events) Enable level = 2
            STATISTIC 20 = eventSent_FetchResp [Number of FetchResp requests sent] (events) Enable level = 2
            STATISTIC 21 = eventSent_FetchXResp [Number of FetchXResp requests sent] (events) Enable level = 2
            STATISTIC 22 = eventSent_AckInv [Number of AckInvs sent] (events) Enable level = 2
            STATISTIC 23 = eventSent_NACK [Number of NACKs sent ] (events) Enable level = 2
            STATISTIC 24 = eventSent_FlushLine [Number of FlushLine requests sent] (events) Enable level = 2
            STATISTIC 25 = eventSent_FlushLineInv [Number of FlushLineInv requests sent] (events) Enable level = 2
            STATISTIC 26 = eventSent_FlushLineResp [Number of FlushLineResp responses sent] (events) Enable level = 2
            STATISTIC 27 = eventSent_Put [Number of Put requests sent] (events) Enable level = 6
            STATISTIC 28 = eventSent_Get [Number of Get requests sent] (events) Enable level = 6
            STATISTIC 29 = eventSent_AckMove [Number of AckMove responses sent] (events) Enable level = 6
            STATISTIC 30 = eventSent_CustomReq [Number of CustomReq requests sent] (events) Enable level = 4
            STATISTIC 31 = eventSent_CustomResp [Number of CustomResp responses sent] (events) Enable level = 4
            STATISTIC 32 = eventSent_CustomAck [Number of CustomAck responses sent] (events) Enable level = 4
            STATISTIC 33 = stateEvent_GetS_I [Event/State: Number of times a GetS was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 34 = stateEvent_GetS_S [Event/State: Number of times a GetS was seen in state S (Hit)] (count) Enable level = 3
            STATISTIC 35 = stateEvent_GetS_E [Event/State: Number of times a GetS was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 36 = stateEvent_GetS_M [Event/State: Number of times a GetS was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 37 = stateEvent_GetX_I [Event/State: Number of times a GetX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 38 = stateEvent_GetX_S [Event/State: Number of times a GetX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 39 = stateEvent_GetX_E [Event/State: Number of times a GetX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 40 = stateEvent_GetX_M [Event/State: Number of times a GetX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 41 = stateEvent_GetSX_I [Event/State: Number of times a GetSX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 42 = stateEvent_GetSX_S [Event/State: Number of times a GetSX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 43 = stateEvent_GetSX_E [Event/State: Number of times a GetSX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 44 = stateEvent_GetSX_M [Event/State: Number of times a GetSX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 45 = stateEvent_GetSResp_IS [Event/State: Number of times a GetSResp was seen in state IS] (count) Enable level = 3
            STATISTIC 46 = stateEvent_GetXResp_IS [Event/State: Number of times a GetXResp was seen in state IS] (count) Enable level = 3
            STATISTIC 47 = stateEvent_GetXResp_IM [Event/State: Number of times a GetXResp was seen in state IM] (count) Enable level = 3
            STATISTIC 48 = stateEvent_GetXResp_SM [Event/State: Number of times a GetXResp was seen in state SM] (count) Enable level = 3
            STATISTIC 49 = stateEvent_Inv_I [Event/State: Number of times an Inv was seen in state I] (count) Enable level = 3
            STATISTIC 50 = stateEvent_Inv_IS [Event/State: Number of times an Inv was seen in state IS] (count) Enable level = 3
            STATISTIC 51 = stateEvent_Inv_IM [Event/State: Number of times an Inv was seen in state IM] (count) Enable level = 3
            STATISTIC 52 = stateEvent_Inv_IB [Event/State: Number of times an Inv was seen in state I_B] (count) Enable level = 3
            STATISTIC 53 = stateEvent_Inv_S [Event/State: Number of times an Inv was seen in state S] (count) Enable level = 3
            STATISTIC 54 = stateEvent_Inv_SM [Event/State: Number of times an Inv was seen in state SM] (count) Enable level = 3
            STATISTIC 55 = stateEvent_Inv_SB [Event/State: Number of times an Inv was seen in state S_B] (count) Enable level = 3
            STATISTIC 56 = stateEvent_FetchInv_I [Event/State: Number of times a FetchInv was seen in state I] (count) Enable level = 3
            STATISTIC 57 = stateEvent_FetchInv_IS [Event/State: Number of times a FetchInv was seen in state IS] (count) Enable level = 3
            STATISTIC 58 = stateEvent_FetchInv_IM [Event/State: Number of times a FetchInv was seen in state IM] (count) Enable level = 3
            STATISTIC 59 = stateEvent_FetchInv_SM [Event/State: Number of times a FetchInv was seen in state SM] (count) Enable level = 3
            STATISTIC 60 = stateEvent_FetchInv_S [Event/State: Number of times a FetchInv was seen in state S] (count) Enable level = 3
            STATISTIC 61 = stateEvent_FetchInv_E [Event/State: Number of times a FetchInv was seen in state E] (count) Enable level = 3
            STATISTIC 62 = stateEvent_FetchInv_M [Event/State: Number of times a FetchInv was seen in state M] (count) Enable level = 3
            STATISTIC 63 = stateEvent_FetchInv_IB [Event/State: Number of times a FetchInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 64 = stateEvent_FetchInv_SB [Event/State: Number of times a FetchInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 65 = stateEvent_FetchInvX_I [Event/State: Number of times a FetchInvX was seen in state I] (count) Enable level = 3
            STATISTIC 66 = stateEvent_FetchInvX_IS [Event/State: Number of times a FetchInvX was seen in state IS] (count) Enable level = 3
            STATISTIC 67 = stateEvent_FetchInvX_IM [Event/State: Number of times a FetchInvX was seen in state IM] (count) Enable level = 3
            STATISTIC 68 = stateEvent_FetchInvX_E [Event/State: Number of times a FetchInvX was seen in state E] (count) Enable level = 3
            STATISTIC 69 = stateEvent_FetchInvX_M [Event/State: Number of times a FetchInvX was seen in state M] (count) Enable level = 3
            STATISTIC 70 = stateEvent_FetchInvX_IB [Event/State: Number of times a FetchInvX was seen in state I_B] (count) Enable level = 3
            STATISTIC 71 = stateEvent_FetchInvX_SB [Event/State: Number of times a FetchInvX was seen in state S_B] (count) Enable level = 3
            STATISTIC 72 = stateEvent_ForceInv_I [Event/State: Number of times a ForceInv was seen in state I] (count) Enable level = 3
            STATISTIC 73 = stateEvent_ForceInv_IS [Event/State: Number of times a ForceInv was seen in state IS] (count) Enable level = 3
            STATISTIC 74 = stateEvent_ForceInv_IM [Event/State: Number of times a ForceInv was seen in state IM] (count) Enable level = 3
            STATISTIC 75 = stateEvent_ForceInv_SM [Event/State: Number of times a ForceInv was seen in state SM] (count) Enable level = 3
            STATISTIC 76 = stateEvent_ForceInv_S [Event/State: Number of times a ForceInv was seen in state S] (count) Enable level = 3
            STATISTIC 77 = stateEvent_ForceInv_E [Event/State: Number of times a ForceInv was seen in state E] (count) Enable level = 3
            STATISTIC 78 = stateEvent_ForceInv_M [Event/State: Number of times a ForceInv was seen in state M] (count) Enable level = 3
            STATISTIC 79 = stateEvent_ForceInv_IB [Event/State: Number of times a ForceInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 80 = stateEvent_ForceInv_SB [Event/State: Number of times a ForceInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 81 = stateEvent_Fetch_I [Event/State: Number of times a Fetch was seen in state I] (count) Enable level = 3
            STATISTIC 82 = stateEvent_Fetch_IS [Event/State: Number of times a Fetch was seen in state IS] (count) Enable level = 3
            STATISTIC 83 = stateEvent_Fetch_IM [Event/State: Number of times a Fetch was seen in state IM] (count) Enable level = 3
            STATISTIC 84 = stateEvent_Fetch_S [Event/State: Number of times a Fetch was seen in state S] (count) Enable level = 3
            STATISTIC 85 = stateEvent_Fetch_SM [Event/State: Number of times a Fetch was seen in state SM] (count) Enable level = 3
            STATISTIC 86 = stateEvent_Fetch_IB [Event/State: Number of times a Fetch was seen in state I_B] (count) Enable level = 3
            STATISTIC 87 = stateEvent_Fetch_SB [Event/State: Number of times a Fetch was seen in state S_B] (count) Enable level = 3
            STATISTIC 88 = stateEvent_AckPut_I [Event/State: Number of times an AckPut was seen in state I] (count) Enable level = 3
            STATISTIC 89 = stateEvent_FlushLine_I [Event/State: Number of times a FlushLine was seen in state I] (count) Enable level = 3
            STATISTIC 90 = stateEvent_FlushLine_S [Event/State: Number of times a FlushLine was seen in state S] (count) Enable level = 3
            STATISTIC 91 = stateEvent_FlushLine_E [Event/State: Number of times a FlushLine was seen in state E] (count) Enable level = 3
            STATISTIC 92 = stateEvent_FlushLine_M [Event/State: Number of times a FlushLine was seen in state M] (count) Enable level = 3
            STATISTIC 93 = stateEvent_FlushLineInv_I [Event/State: Number of times a FlushLineInv was seen in state I] (count) Enable level = 3
            STATISTIC 94 = stateEvent_FlushLineInv_S [Event/State: Number of times a FlushLineInv was seen in state S] (count) Enable level = 3
            STATISTIC 95 = stateEvent_FlushLineInv_E [Event/State: Number of times a FlushLineInv was seen in state E] (count) Enable level = 3
            STATISTIC 96 = stateEvent_FlushLineInv_M [Event/State: Number of times a FlushLineInv was seen in state M] (count) Enable level = 3
            STATISTIC 97 = stateEvent_FlushLineResp_I [Event/State: Number of times a FlushLineResp was seen in state I] (count) Enable level = 3
            STATISTIC 98 = stateEvent_FlushLineResp_IB [Event/State: Number of times a FlushLineResp was seen in state I_B] (count) Enable level = 3
            STATISTIC 99 = stateEvent_FlushLineResp_SB [Event/State: Number of times a FlushLineResp was seen in state S_B] (count) Enable level = 3
            STATISTIC 100 = evict_I [Eviction: Attempted to evict a block in state I] (count) Enable level = 3
            STATISTIC 101 = evict_S [Eviction: Attempted to evict a block in state S] (count) Enable level = 3
            STATISTIC 102 = evict_E [Eviction: Attempted to evict a block in state E] (count) Enable level = 3
            STATISTIC 103 = evict_M [Eviction: Attempted to evict a block in state M] (count) Enable level = 3
            STATISTIC 104 = evict_IS [Eviction: Attempted to evict a block in state IS] (count) Enable level = 3
            STATISTIC 105 = evict_IM [Eviction: Attempted to evict a block in state IM] (count) Enable level = 3
            STATISTIC 106 = evict_SM [Eviction: Attempted to evict a block in state SM] (count) Enable level = 3
            STATISTIC 107 = evict_IB [Eviction: Attempted to evict a block in state S_B] (count) Enable level = 3
            STATISTIC 108 = evict_SB [Eviction: Attempted to evict a block in state I_B] (count) Enable level = 3
            STATISTIC 109 = latency_GetS_miss [Latency for read misses] (cycles) Enable level = 1
            STATISTIC 110 = latency_GetS_hit [Latency for read hits] (cycles) Enable level = 1
            STATISTIC 111 = latency_GetX_miss [Latency for write misses (block not present)] (cycles) Enable level = 1
            STATISTIC 112 = latency_GetX_upgrade [Latency for write misses, block present but in Shared state] (cycles) Enable level = 1
            STATISTIC 113 = latency_GetX_hit [Latency for write hits] (cycles) Enable level = 1
            STATISTIC 114 = latency_GetSX_miss [Latency for read-exclusive misses (block not present)] (cycles) Enable level = 2
            STATISTIC 115 = latency_GetSX_upgrade [Latency for read-exclusive misses, block present but in Shared state] (cycles) Enable level = 2
            STATISTIC 116 = latency_GetSX_hit [Latency for read-exclusive hits] (cycles) Enable level = 2
            STATISTIC 117 = latency_FlushLine [Latency for Flush requests] (cycles) Enable level = 2
            STATISTIC 118 = latency_FlushLine_fail [Latency for Flush requests that failed (e.g., line was locked)] (cycles) Enable level = 2
            STATISTIC 119 = latency_FlushLineInv [Latency for Flush and Invalidate requests] (cycles) Enable level = 2
            STATISTIC 120 = latency_FlushLineInv_fail [Latency for Flush and Invalidate requests that failed (e.g., line was locked)] (cycles) Enable level = 2
            STATISTIC 121 = prefetch_useful [Prefetched block had a subsequent hit (useful prefetch)] (count) Enable level = 2
            STATISTIC 122 = prefetch_evict [Prefetched block was evicted/flushed before being accessed] (count) Enable level = 2
            STATISTIC 123 = prefetch_inv [Prefetched block was invalidated before being accessed] (count) Enable level = 2
            STATISTIC 124 = prefetch_coherence_miss [Prefetched block incurred a coherence miss (upgrade) on its first access] (count) Enable level = 2
            STATISTIC 125 = prefetch_redundant [Prefetch issued for a block that was already in cache] (count) Enable level = 2
            STATISTIC 126 = EventStalledForLockedCacheline [Number of times an event (FetchInv, FetchInvX, eviction, Fetch, etc.) was stalled because a cache line was locked] (instances) Enable level = 1
            STATISTIC 127 = default_stat [Default statistic used for unexpected events/states/etc. Should be 0, if not, check for missing statistic registrations.] (none) Enable level = 7
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = replacement (Replacement policies, slot 0 is for cache, slot 1 is for directory (if it exists)) [SST::MemHierarchy::ReplacementPolicy]
            SUB COMPONENT SLOT 1 = hash (Hash function for mapping addresses to cache lines) [SST::MemHierarchy::HashFunction]
         NUM PARAMETERS = 0
    coherence.mesi_l1: Implements MESI or MSI coherence for an L1 cache
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:56:54, using file: ./coherencemgr/MESI_L1.h
      SubComponent 12: coherence.mesi_private_noninclusive
      Interface: SST::MemHierarchy::CoherenceController
         NUM STATISTICS = 165
            STATISTIC 0 = GetSHit_Arrival [GetS was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 1 = GetXHit_Arrival [GetX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 2 = GetSXHit_Arrival [GetSX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 3 = GetSMiss_Arrival [GetS was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 4 = GetXMiss_Arrival [GetX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 5 = GetSXMiss_Arrival [GetSX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 6 = GetSHit_Blocked [GetS was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 7 = GetXHit_Blocked [GetX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 8 = GetSXHit_Blocked [GetSX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 9 = GetSMiss_Blocked [GetS was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 10 = GetXMiss_Blocked [GetX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 11 = GetSXMiss_Blocked [GetSX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 12 = eventSent_GetS [Number of GetS requests sent] (events) Enable level = 2
            STATISTIC 13 = eventSent_GetX [Number of GetX requests sent] (events) Enable level = 2
            STATISTIC 14 = eventSent_GetSX [Number of GetSX requests sent] (events) Enable level = 2
            STATISTIC 15 = eventSent_GetSResp [Number of GetSResp responses sent] (events) Enable level = 2
            STATISTIC 16 = eventSent_GetXResp [Number of GetXResp responses sent] (events) Enable level = 2
            STATISTIC 17 = eventSent_PutS [Number of PutS requests sent] (events) Enable level = 2
            STATISTIC 18 = eventSent_PutE [Number of PutE requests sent] (events) Enable level = 2
            STATISTIC 19 = eventSent_PutM [Number of PutM requests sent] (events) Enable level = 2
            STATISTIC 20 = eventSent_PutX [Number of PutX requests sent] (events) Enable level = 2
            STATISTIC 21 = eventSent_Inv [Number of Inv requests sent] (events) Enable level = 2
            STATISTIC 22 = eventSent_Fetch [Number of Fetch requests sent] (events) Enable level = 2
            STATISTIC 23 = eventSent_FetchInv [Number of FetchInv requests sent] (events) Enable level = 2
            STATISTIC 24 = eventSent_FetchInvX [Number of FetchInvX requests sent] (events) Enable level = 2
            STATISTIC 25 = eventSent_ForceInv [Number of ForceInv requests sent] (events) Enable level = 2
            STATISTIC 26 = eventSent_FetchResp [Number of FetchResp requests sent] (events) Enable level = 2
            STATISTIC 27 = eventSent_FetchXResp [Number of FetchXResp requests sent] (events) Enable level = 2
            STATISTIC 28 = eventSent_AckInv [Number of AckInvs sent] (events) Enable level = 2
            STATISTIC 29 = eventSent_AckPut [Number of AckPuts sent] (events) Enable level = 2
            STATISTIC 30 = eventSent_NACK [Number of NACKs sent] (events) Enable level = 2
            STATISTIC 31 = eventSent_FlushLine [Number of FlushLine requests sent] (events) Enable level = 2
            STATISTIC 32 = eventSent_FlushLineInv [Number of FlushLineInv requests sent] (events) Enable level = 2
            STATISTIC 33 = eventSent_FlushLineResp [Number of FlushLineResp responses sent] (events) Enable level = 2
            STATISTIC 34 = eventSent_Put [Number of Put requests sent] (events) Enable level = 6
            STATISTIC 35 = eventSent_Get [Number of Get requests sent] (events) Enable level = 6
            STATISTIC 36 = eventSent_AckMove [Number of AckMove responses sent] (events) Enable level = 6
            STATISTIC 37 = eventSent_CustomReq [Number of CustomReq requests sent] (events) Enable level = 4
            STATISTIC 38 = eventSent_CustomResp [Number of CustomResp responses sent] (events) Enable level = 4
            STATISTIC 39 = eventSent_CustomAck [Number of CustomAck responses sent] (events) Enable level = 4
            STATISTIC 40 = stateEvent_GetS_I [Event/State: Number of times a GetS was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 41 = stateEvent_GetS_S [Event/State: Number of times a GetS was seen in state S (Hit)] (count) Enable level = 3
            STATISTIC 42 = stateEvent_GetS_E [Event/State: Number of times a GetS was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 43 = stateEvent_GetS_M [Event/State: Number of times a GetS was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 44 = stateEvent_GetX_I [Event/State: Number of times a GetX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 45 = stateEvent_GetX_S [Event/State: Number of times a GetX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 46 = stateEvent_GetX_E [Event/State: Number of times a GetX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 47 = stateEvent_GetX_M [Event/State: Number of times a GetX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 48 = stateEvent_GetSX_I [Event/State: Number of times a GetSX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 49 = stateEvent_GetSX_S [Event/State: Number of times a GetSX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 50 = stateEvent_GetSX_E [Event/State: Number of times a GetSX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 51 = stateEvent_GetSX_M [Event/State: Number of times a GetSX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 52 = stateEvent_GetSResp_I [Event/State: Number of times a GetSResp was seen in state I] (count) Enable level = 3
            STATISTIC 53 = stateEvent_GetXResp_I [Event/State: Number of times a GetXResp was seen in state I] (count) Enable level = 3
            STATISTIC 54 = stateEvent_GetXResp_SM [Event/State: Number of times a GetXResp was seen in state SM] (count) Enable level = 3
            STATISTIC 55 = stateEvent_PutS_I [Event/State: Number of times a PutS was seen in state I] (count) Enable level = 3
            STATISTIC 56 = stateEvent_PutS_S [Event/State: Number of times a PutS was seen in state S] (count) Enable level = 3
            STATISTIC 57 = stateEvent_PutS_E [Event/State: Number of times a PutS was seen in state E] (count) Enable level = 3
            STATISTIC 58 = stateEvent_PutS_M [Event/State: Number of times a PutS was seen in state M] (count) Enable level = 3
            STATISTIC 59 = stateEvent_PutS_SInv [Event/State: Number of times a PutS was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 60 = stateEvent_PutS_EInv [Event/State: Number of times a PutS was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 61 = stateEvent_PutS_MInv [Event/State: Number of times a PutS was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 62 = stateEvent_PutE_I [Event/State: Number of times a PutE was seen in state I] (count) Enable level = 3
            STATISTIC 63 = stateEvent_PutE_E [Event/State: Number of times a PutE was seen in state E] (count) Enable level = 3
            STATISTIC 64 = stateEvent_PutE_M [Event/State: Number of times a PutE was seen in state M] (count) Enable level = 3
            STATISTIC 65 = stateEvent_PutE_EInv [Event/State: Number of times a PutE was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 66 = stateEvent_PutE_MInv [Event/State: Number of times a PutE was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 67 = stateEvent_PutE_EInvX [Event/State: Number of times a PutE was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 68 = stateEvent_PutE_MInvX [Event/State: Number of times a PutE was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 69 = stateEvent_PutM_I [Event/State: Number of times a PutM was seen in state I] (count) Enable level = 3
            STATISTIC 70 = stateEvent_PutM_E [Event/State: Number of times a PutM was seen in state E] (count) Enable level = 3
            STATISTIC 71 = stateEvent_PutM_M [Event/State: Number of times a PutM was seen in state M] (count) Enable level = 3
            STATISTIC 72 = stateEvent_PutM_EInv [Event/State: Number of times a PutM was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 73 = stateEvent_PutM_MInv [Event/State: Number of times a PutM was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 74 = stateEvent_PutM_EInvX [Event/State: Number of times a PutM was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 75 = stateEvent_PutM_MInvX [Event/State: Number of times a PutM was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 76 = stateEvent_PutX_I [Event/State: Number of times a PutX was seen in state I] (count) Enable level = 3
            STATISTIC 77 = stateEvent_PutX_E [Event/State: Number of times a PutX was seen in state E] (count) Enable level = 3
            STATISTIC 78 = stateEvent_PutX_M [Event/State: Number of times a PutX was seen in state M] (count) Enable level = 3
            STATISTIC 79 = stateEvent_PutX_EInv [Event/State: Number of times a PutX was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 80 = stateEvent_PutX_MInv [Event/State: Number of times a PutX was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 81 = stateEvent_PutX_EInvX [Event/State: Number of times a PutX was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 82 = stateEvent_PutX_MInvX [Event/State: Number of times a PutX was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 83 = stateEvent_Inv_I [Event/State: Number of times an Inv was seen in state I] (count) Enable level = 3
            STATISTIC 84 = stateEvent_Inv_IB [Event/State: Number of times an Inv was seen in state I_B] (count) Enable level = 3
            STATISTIC 85 = stateEvent_Inv_S [Event/State: Number of times an Inv was seen in state S] (count) Enable level = 3
            STATISTIC 86 = stateEvent_Inv_SM [Event/State: Number of times an Inv was seen in state SM] (count) Enable level = 3
            STATISTIC 87 = stateEvent_Inv_SB [Event/State: Number of times an Inv was seen in state S_B] (count) Enable level = 3
            STATISTIC 88 = stateEvent_FetchInv_I [Event/State: Number of times a FetchInv was seen in state I] (count) Enable level = 3
            STATISTIC 89 = stateEvent_FetchInv_SM [Event/State: Number of times a FetchInv was seen in state SM] (count) Enable level = 3
            STATISTIC 90 = stateEvent_FetchInv_S [Event/State: Number of times a FetchInv was seen in state S] (count) Enable level = 3
            STATISTIC 91 = stateEvent_FetchInv_E [Event/State: Number of times a FetchInv was seen in state E] (count) Enable level = 3
            STATISTIC 92 = stateEvent_FetchInv_M [Event/State: Number of times a FetchInv was seen in state M] (count) Enable level = 3
            STATISTIC 93 = stateEvent_FetchInv_IB [Event/State: Number of times a FetchInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 94 = stateEvent_FetchInv_SB [Event/State: Number of times a FetchInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 95 = stateEvent_FetchInvX_I [Event/State: Number of times a FetchInvX was seen in state I] (count) Enable level = 3
            STATISTIC 96 = stateEvent_FetchInvX_E [Event/State: Number of times a FetchInvX was seen in state E] (count) Enable level = 3
            STATISTIC 97 = stateEvent_FetchInvX_M [Event/State: Number of times a FetchInvX was seen in state M] (count) Enable level = 3
            STATISTIC 98 = stateEvent_FetchInvX_IB [Event/State: Number of times a FetchInvX was seen in state I_B] (count) Enable level = 3
            STATISTIC 99 = stateEvent_FetchInvX_SB [Event/State: Number of times a FetchInvX was seen in state S_B] (count) Enable level = 3
            STATISTIC 100 = stateEvent_Fetch_I [Event/State: Number of times a Fetch was seen in state I] (count) Enable level = 3
            STATISTIC 101 = stateEvent_Fetch_S [Event/State: Number of times a Fetch was seen in state S] (count) Enable level = 3
            STATISTIC 102 = stateEvent_Fetch_SM [Event/State: Number of times a Fetch was seen in state SM] (count) Enable level = 3
            STATISTIC 103 = stateEvent_Fetch_SInv [Event/State: Number of times a Fetch was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 104 = stateEvent_Fetch_IB [Event/State: Number of times a Fetch was seen in state I_B] (count) Enable level = 3
            STATISTIC 105 = stateEvent_Fetch_SB [Event/State: Number of times a Fetch was seen in state S_B] (count) Enable level = 3
            STATISTIC 106 = stateEvent_ForceInv_I [Event/State: Number of times a ForceInv was seen in state I] (count) Enable level = 3
            STATISTIC 107 = stateEvent_ForceInv_SM [Event/State: Number of times a ForceInv was seen in state SM] (count) Enable level = 3
            STATISTIC 108 = stateEvent_ForceInv_S [Event/State: Number of times a ForceInv was seen in state S] (count) Enable level = 3
            STATISTIC 109 = stateEvent_ForceInv_E [Event/State: Number of times a ForceInv was seen in state E] (count) Enable level = 3
            STATISTIC 110 = stateEvent_ForceInv_M [Event/State: Number of times a ForceInv was seen in state M] (count) Enable level = 3
            STATISTIC 111 = stateEvent_ForceInv_IB [Event/State: Number of times a ForceInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 112 = stateEvent_ForceInv_SB [Event/State: Number of times a ForceInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 113 = stateEvent_ForceInv_SMInv [Event/State: Number of times a ForceInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 114 = stateEvent_FetchResp_I [Event/State: Number of times a FetchResp was seen in state I] (count) Enable level = 3
            STATISTIC 115 = stateEvent_FetchResp_EInv [Event/State: Number of times a FetchResp was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 116 = stateEvent_FetchResp_MInv [Event/State: Number of times a FetchResp was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 117 = stateEvent_FetchXResp_I [Event/State: Number of times a FetchXResp was seen in state I] (count) Enable level = 3
            STATISTIC 118 = stateEvent_FetchXResp_EInvX [Event/State: Number of times a FetchXResp was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 119 = stateEvent_FetchXResp_MInvX [Event/State: Number of times a FetchXResp was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 120 = stateEvent_AckInv_I [Event/State: Number of times an AckInv was seen in state I] (count) Enable level = 3
            STATISTIC 121 = stateEvent_AckInv_SInv [Event/State: Number of times an AckInv was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 122 = stateEvent_AckInv_SMInv [Event/State: Number of times an AckInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 123 = stateEvent_AckInv_EInv [Event/State: Number of times an AckInv was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 124 = stateEvent_AckInv_MInv [Event/State: Number of times an AckInv was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 125 = stateEvent_AckInv_SBInv [Event/State: Number of times an AckInv was seen in state SB_Inv] (count) Enable level = 3
            STATISTIC 126 = stateEvent_AckPut_I [Event/State: Number of times an AckPut was seen in state I] (count) Enable level = 3
            STATISTIC 127 = stateEvent_FlushLine_I [Event/State: Number of times a FlushLine was seen in state I] (count) Enable level = 3
            STATISTIC 128 = stateEvent_FlushLine_S [Event/State: Number of times a FlushLine was seen in state S] (count) Enable level = 3
            STATISTIC 129 = stateEvent_FlushLine_E [Event/State: Number of times a FlushLine was seen in state E] (count) Enable level = 3
            STATISTIC 130 = stateEvent_FlushLine_M [Event/State: Number of times a FlushLine was seen in state M] (count) Enable level = 3
            STATISTIC 131 = stateEvent_FlushLineInv_I [Event/State: Number of times a FlushLineInv was seen in state I] (count) Enable level = 3
            STATISTIC 132 = stateEvent_FlushLineInv_S [Event/State: Number of times a FlushLineInv was seen in state S] (count) Enable level = 3
            STATISTIC 133 = stateEvent_FlushLineInv_E [Event/State: Number of times a FlushLineInv was seen in state E] (count) Enable level = 3
            STATISTIC 134 = stateEvent_FlushLineInv_M [Event/State: Number of times a FlushLineInv was seen in state M] (count) Enable level = 3
            STATISTIC 135 = stateEvent_FlushLineResp_I [Event/State: Number of times a FlushLineResp was seen in state I] (count) Enable level = 3
            STATISTIC 136 = stateEvent_FlushLineResp_IB [Event/State: Number of times a FlushLineResp was seen in state I_B] (count) Enable level = 3
            STATISTIC 137 = stateEvent_FlushLineResp_SB [Event/State: Number of times a FlushLineResp was seen in state S_B] (count) Enable level = 3
            STATISTIC 138 = evict_I [Eviction: Attempted to evict a block in state I] (count) Enable level = 3
            STATISTIC 139 = evict_S [Eviction: Attempted to evict a block in state S] (count) Enable level = 3
            STATISTIC 140 = evict_E [Eviction: Attempted to evict a block in state E] (count) Enable level = 3
            STATISTIC 141 = evict_M [Eviction: Attempted to evict a block in state M] (count) Enable level = 3
            STATISTIC 142 = evict_SM [Eviction: Attempted to evict a block in state SM] (count) Enable level = 3
            STATISTIC 143 = evict_SInv [Eviction: Attempted to evict a block in state S_Inv] (count) Enable level = 3
            STATISTIC 144 = evict_EInv [Eviction: Attempted to evict a block in state E_Inv] (count) Enable level = 3
            STATISTIC 145 = evict_MInv [Eviction: Attempted to evict a block in state M_Inv] (count) Enable level = 3
            STATISTIC 146 = evict_SMInv [Eviction: Attempted to evict a block in state SM_Inv] (count) Enable level = 3
            STATISTIC 147 = evict_EInvX [Eviction: Attempted to evict a block in state E_InvX] (count) Enable level = 3
            STATISTIC 148 = evict_MInvX [Eviction: Attempted to evict a block in state M_InvX] (count) Enable level = 3
            STATISTIC 149 = evict_IB [Eviction: Attempted to evict a block in state S_B] (count) Enable level = 3
            STATISTIC 150 = evict_SB [Eviction: Attempted to evict a block in state I_B] (count) Enable level = 3
            STATISTIC 151 = latency_GetS_hit [Latency for read hits] (cycles) Enable level = 1
            STATISTIC 152 = latency_GetS_miss [Latency for read misses, block not present] (cycles) Enable level = 1
            STATISTIC 153 = latency_GetS_inv [Latency for read misses, required fetch/inv from owner] (cycles) Enable level = 1
            STATISTIC 154 = latency_GetX_hit [Latency for write hits] (cycles) Enable level = 1
            STATISTIC 155 = latency_GetX_miss [Latency for write misses, block not present] (cycles) Enable level = 1
            STATISTIC 156 = latency_GetX_inv [Latency for write misses, block present but required invalidation/fetch] (cycles) Enable level = 1
            STATISTIC 157 = latency_GetX_upgrade [Latency for write misses, block present but in Shared state (includes invs in S)] (cycles) Enable level = 1
            STATISTIC 158 = latency_GetSX_hit [Latency for read-exclusive hits] (cycles) Enable level = 1
            STATISTIC 159 = latency_GetSX_miss [Latency for read-exclusive misses, block not present] (cycles) Enable level = 1
            STATISTIC 160 = latency_GetSX_inv [Latency for read-exclusive misses, block present but required invalidation/fetch] (cycles) Enable level = 1
            STATISTIC 161 = latency_GetSX_upgrade [Latency for read-exclusive misses, block present but in Shared state (includes invs in S)] (cycles) Enable level = 1
            STATISTIC 162 = latency_FlushLine [Latency for flush requests] (cycles) Enable level = 1
            STATISTIC 163 = latency_FlushLineInv [Latency for flush+invalidate requests] (cycles) Enable level = 1
            STATISTIC 164 = default_stat [Default statistic used for unexpected events/states/etc. Should be 0, if not, check for missing statistic registerations.] (none) Enable level = 7
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = replacement (Replacement policies, slot 0 is for cache, slot 1 is for directory (if it exists)) [SST::MemHierarchy::ReplacementPolicy]
            SUB COMPONENT SLOT 1 = hash (Hash function for mapping addresses to cache lines) [SST::MemHierarchy::HashFunction]
         NUM PARAMETERS = 0
    coherence.mesi_private_noninclusive: Implements MESI or MSI coherence for a non-inclusive, non-L1 private cache
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:57:19, using file: ./coherencemgr/MESI_Private_Noninclusive.h
      SubComponent 13: coherence.mesi_shared_noninclusive
      Interface: SST::MemHierarchy::CoherenceController
         NUM STATISTICS = 211
            STATISTIC 0 = GetSHit_Arrival [GetS was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 1 = GetXHit_Arrival [GetX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 2 = GetSXHit_Arrival [GetSX was handled at arrival and was a cache hit] (count) Enable level = 1
            STATISTIC 3 = GetSMiss_Arrival [GetS was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 4 = GetXMiss_Arrival [GetX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 5 = GetSXMiss_Arrival [GetSX was handled at arrival and was a cache miss] (count) Enable level = 1
            STATISTIC 6 = GetSHit_Blocked [GetS was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 7 = GetXHit_Blocked [GetX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 8 = GetSXHit_Blocked [GetSX was blocked in MSHR at arrival and later was a cache hit] (count) Enable level = 1
            STATISTIC 9 = GetSMiss_Blocked [GetS was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 10 = GetXMiss_Blocked [GetX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 11 = GetSXMiss_Blocked [GetSX was blocked in MSHR at arrival and later was a cache miss] (count) Enable level = 1
            STATISTIC 12 = eventSent_GetS [Number of GetS requests sent] (events) Enable level = 2
            STATISTIC 13 = eventSent_GetX [Number of GetX requests sent] (events) Enable level = 2
            STATISTIC 14 = eventSent_GetSX [Number of GetSX requests sent] (events) Enable level = 2
            STATISTIC 15 = eventSent_GetSResp [Number of GetSResp responses sent] (events) Enable level = 2
            STATISTIC 16 = eventSent_GetXResp [Number of GetXResp responses sent] (events) Enable level = 2
            STATISTIC 17 = eventSent_PutS [Number of PutS requests sent] (events) Enable level = 2
            STATISTIC 18 = eventSent_PutE [Number of PutE requests sent] (events) Enable level = 2
            STATISTIC 19 = eventSent_PutM [Number of PutM requests sent] (events) Enable level = 2
            STATISTIC 20 = eventSent_PutX [Number of PutX requests sent] (events) Enable level = 2
            STATISTIC 21 = eventSent_Inv [Number of Inv requests sent] (events) Enable level = 2
            STATISTIC 22 = eventSent_Fetch [Number of Fetch requests sent] (events) Enable level = 2
            STATISTIC 23 = eventSent_FetchInv [Number of FetchInv requests sent] (events) Enable level = 2
            STATISTIC 24 = eventSent_FetchInvX [Number of FetchInvX requests sent] (events) Enable level = 2
            STATISTIC 25 = eventSent_ForceInv [Number of ForceInv requests sent] (events) Enable level = 2
            STATISTIC 26 = eventSent_FetchResp [Number of FetchResp requests sent] (events) Enable level = 2
            STATISTIC 27 = eventSent_FetchXResp [Number of FetchXResp requests sent] (events) Enable level = 2
            STATISTIC 28 = eventSent_AckInv [Number of AckInvs sent] (events) Enable level = 2
            STATISTIC 29 = eventSent_AckPut [Number of AckPuts sent] (events) Enable level = 2
            STATISTIC 30 = eventSent_NACK [Number of NACKs sent] (events) Enable level = 2
            STATISTIC 31 = eventSent_FlushLine [Number of FlushLine requests sent] (events) Enable level = 2
            STATISTIC 32 = eventSent_FlushLineInv [Number of FlushLineInv requests sent] (events) Enable level = 2
            STATISTIC 33 = eventSent_FlushLineResp [Number of FlushLineResp responses sent] (events) Enable level = 2
            STATISTIC 34 = eventSent_Put [Number of Put requests sent] (events) Enable level = 6
            STATISTIC 35 = eventSent_Get [Number of Get requests sent] (events) Enable level = 6
            STATISTIC 36 = eventSent_AckMove [Number of AckMove responses sent] (events) Enable level = 6
            STATISTIC 37 = eventSent_CustomReq [Number of CustomReq requests sent] (events) Enable level = 4
            STATISTIC 38 = eventSent_CustomResp [Number of CustomResp responses sent] (events) Enable level = 4
            STATISTIC 39 = eventSent_CustomAck [Number of CustomAck responses sent] (events) Enable level = 4
            STATISTIC 40 = stateEvent_GetS_I [Event/State: Number of times a GetS was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 41 = stateEvent_GetS_IA [Event/State: Number of times a GetS was seen in state IA (Miss)] (count) Enable level = 3
            STATISTIC 42 = stateEvent_GetS_S [Event/State: Number of times a GetS was seen in state S (Hit)] (count) Enable level = 3
            STATISTIC 43 = stateEvent_GetS_E [Event/State: Number of times a GetS was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 44 = stateEvent_GetS_M [Event/State: Number of times a GetS was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 45 = stateEvent_GetX_I [Event/State: Number of times a GetX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 46 = stateEvent_GetX_S [Event/State: Number of times a GetX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 47 = stateEvent_GetX_E [Event/State: Number of times a GetX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 48 = stateEvent_GetX_M [Event/State: Number of times a GetX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 49 = stateEvent_GetSX_I [Event/State: Number of times a GetSX was seen in state I (Miss)] (count) Enable level = 3
            STATISTIC 50 = stateEvent_GetSX_S [Event/State: Number of times a GetSX was seen in state S (Miss)] (count) Enable level = 3
            STATISTIC 51 = stateEvent_GetSX_E [Event/State: Number of times a GetSX was seen in state E (Hit)] (count) Enable level = 3
            STATISTIC 52 = stateEvent_GetSX_M [Event/State: Number of times a GetSX was seen in state M (Hit)] (count) Enable level = 3
            STATISTIC 53 = stateEvent_GetSResp_IS [Event/State: Number of times a GetSResp was seen in state IS] (count) Enable level = 3
            STATISTIC 54 = stateEvent_GetXResp_IS [Event/State: Number of times a GetXResp was seen in state IS] (count) Enable level = 3
            STATISTIC 55 = stateEvent_GetXResp_IM [Event/State: Number of times a GetXResp was seen in state IM] (count) Enable level = 3
            STATISTIC 56 = stateEvent_GetXResp_SM [Event/State: Number of times a GetXResp was seen in state SM] (count) Enable level = 3
            STATISTIC 57 = stateEvent_GetXResp_SMInv [Event/State: Number of times a GetXResp was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 58 = stateEvent_PutS_S [Event/State: Number of times a PutS was seen in state S] (count) Enable level = 3
            STATISTIC 59 = stateEvent_PutS_E [Event/State: Number of times a PutS was seen in state E] (count) Enable level = 3
            STATISTIC 60 = stateEvent_PutS_M [Event/State: Number of times a PutS was seen in state M] (count) Enable level = 3
            STATISTIC 61 = stateEvent_PutS_SD [Event/State: Number of times a PutS was seen in state S_D] (count) Enable level = 3
            STATISTIC 62 = stateEvent_PutS_ED [Event/State: Number of times a PutS was seen in state E_D] (count) Enable level = 3
            STATISTIC 63 = stateEvent_PutS_MD [Event/State: Number of times a PutS was seen in state M_D] (count) Enable level = 3
            STATISTIC 64 = stateEvent_PutS_EB [Event/State: Number of times a PutS was seen in state E_B] (count) Enable level = 3
            STATISTIC 65 = stateEvent_PutS_MB [Event/State: Number of times a PutS was seen in state M_B] (count) Enable level = 3
            STATISTIC 66 = stateEvent_PutS_SBD [Event/State: Number of times a PutS was seen in state SB_D] (count) Enable level = 3
            STATISTIC 67 = stateEvent_PutS_SInv [Event/State: Number of times a PutS was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 68 = stateEvent_PutS_EInv [Event/State: Number of times a PutS was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 69 = stateEvent_PutS_MInv [Event/State: Number of times a PutS was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 70 = stateEvent_PutS_SMInv [Event/State: Number of times a PutS was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 71 = stateEvent_PutS_SB [Event/State: Number of times a PutS was seen in state S_B] (count) Enable level = 3
            STATISTIC 72 = stateEvent_PutE_E [Event/State: Number of times a PutE was seen in state E] (count) Enable level = 3
            STATISTIC 73 = stateEvent_PutE_M [Event/State: Number of times a PutE was seen in state M] (count) Enable level = 3
            STATISTIC 74 = stateEvent_PutE_EInv [Event/State: Number of times a PutE was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 75 = stateEvent_PutE_MInv [Event/State: Number of times a PutE was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 76 = stateEvent_PutE_EInvX [Event/State: Number of times a PutE was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 77 = stateEvent_PutE_MInvX [Event/State: Number of times a PutE was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 78 = stateEvent_PutX_E [Event/State: Number of times a PutX was seen in state E] (count) Enable level = 3
            STATISTIC 79 = stateEvent_PutX_M [Event/State: Number of times a PutX was seen in state M] (count) Enable level = 3
            STATISTIC 80 = stateEvent_PutX_EInv [Event/State: Number of times a PutX was seen in state EInv] (count) Enable level = 3
            STATISTIC 81 = stateEvent_PutX_MInv [Event/State: Number of times a PutX was seen in state MInv] (count) Enable level = 3
            STATISTIC 82 = stateEvent_PutM_E [Event/State: Number of times a PutM was seen in state E] (count) Enable level = 3
            STATISTIC 83 = stateEvent_PutM_M [Event/State: Number of times a PutM was seen in state M] (count) Enable level = 3
            STATISTIC 84 = stateEvent_PutM_EInv [Event/State: Number of times a PutM was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 85 = stateEvent_PutM_MInv [Event/State: Number of times a PutM was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 86 = stateEvent_PutM_EInvX [Event/State: Number of times a PutM was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 87 = stateEvent_PutM_MInvX [Event/State: Number of times a PutM was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 88 = stateEvent_Inv_I [Event/State: Number of times an Inv was seen in state I] (count) Enable level = 3
            STATISTIC 89 = stateEvent_Inv_IB [Event/State: Number of times an Inv was seen in state I_B] (count) Enable level = 3
            STATISTIC 90 = stateEvent_Inv_S [Event/State: Number of times an Inv was seen in state S] (count) Enable level = 3
            STATISTIC 91 = stateEvent_Inv_SM [Event/State: Number of times an Inv was seen in state SM] (count) Enable level = 3
            STATISTIC 92 = stateEvent_Inv_SInv [Event/State: Number of times an Inv was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 93 = stateEvent_Inv_SMInv [Event/State: Number of times an Inv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 94 = stateEvent_Inv_SB [Event/State: Number of times an Inv was seen in state S_B] (count) Enable level = 3
            STATISTIC 95 = stateEvent_FetchInv_I [Event/State: Number of times a FetchInv was seen in state I] (count) Enable level = 3
            STATISTIC 96 = stateEvent_FetchInv_S [Event/State: Number of times a FetchInv was seen in state S] (count) Enable level = 3
            STATISTIC 97 = stateEvent_FetchInv_E [Event/State: Number of times a FetchInv was seen in state E] (count) Enable level = 3
            STATISTIC 98 = stateEvent_FetchInv_M [Event/State: Number of times a FetchInv was seen in state M] (count) Enable level = 3
            STATISTIC 99 = stateEvent_FetchInv_SInv [Event/State: Number of times a FetchInv was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 100 = stateEvent_FetchInv_EInv [Event/State: Number of times a FetchInv was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 101 = stateEvent_FetchInv_MInv [Event/State: Number of times a FetchInv was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 102 = stateEvent_FetchInv_SM [Event/State: Number of times a FetchInv was seen in state SM] (count) Enable level = 3
            STATISTIC 103 = stateEvent_FetchInv_SMInv [Event/State: Number of times a FetchInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 104 = stateEvent_FetchInv_SB [Event/State: Number of times a FetchInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 105 = stateEvent_FetchInv_EB [Event/State: Number of times a FetchInv was seen in state E_B] (count) Enable level = 3
            STATISTIC 106 = stateEvent_FetchInv_MB [Event/State: Number of times a FetchInv was seen in state M_B] (count) Enable level = 3
            STATISTIC 107 = stateEvent_FetchInv_SA [Event/State: Number of times a FetchInv was seen in state S_A] (count) Enable level = 3
            STATISTIC 108 = stateEvent_FetchInv_EA [Event/State: Number of times a FetchInv was seen in state E_A] (count) Enable level = 3
            STATISTIC 109 = stateEvent_FetchInv_MA [Event/State: Number of times a FetchInv was seen in state M_A] (count) Enable level = 3
            STATISTIC 110 = stateEvent_FetchInvX_I [Event/State: Number of times a FetchInvX was seen in state I] (count) Enable level = 3
            STATISTIC 111 = stateEvent_FetchInvX_E [Event/State: Number of times a FetchInvX was seen in state E] (count) Enable level = 3
            STATISTIC 112 = stateEvent_FetchInvX_M [Event/State: Number of times a FetchInvX was seen in state M] (count) Enable level = 3
            STATISTIC 113 = stateEvent_FetchInvX_IB [Event/State: Number of times a FetchInvX was seen in state I_B] (count) Enable level = 3
            STATISTIC 114 = stateEvent_FetchInvX_EB [Event/State: Number of times a FetchInvX was seen in state E_B] (count) Enable level = 3
            STATISTIC 115 = stateEvent_FetchInvX_MB [Event/State: Number of times a FetchInvX was seen in state M_B] (count) Enable level = 3
            STATISTIC 116 = stateEvent_FetchInvX_EA [Event/State: Number of times a FetchInvX was seen in state E_A] (count) Enable level = 3
            STATISTIC 117 = stateEvent_FetchInvX_MA [Event/State: Number of times a FetchInvX was seen in state M_A] (count) Enable level = 3
            STATISTIC 118 = stateEvent_ForceInv_I [Event/State: Number of times a ForceInv was seen in state I] (count) Enable level = 3
            STATISTIC 119 = stateEvent_ForceInv_IB [Event/State: Number of times a ForceInv was seen in state I_B] (count) Enable level = 3
            STATISTIC 120 = stateEvent_ForceInv_S [Event/State: Number of times a ForceInv was seen in state S] (count) Enable level = 3
            STATISTIC 121 = stateEvent_ForceInv_E [Event/State: Number of times a ForceInv was seen in state E] (count) Enable level = 3
            STATISTIC 122 = stateEvent_ForceInv_M [Event/State: Number of times a ForceInv was seen in state M] (count) Enable level = 3
            STATISTIC 123 = stateEvent_ForceInv_SB [Event/State: Number of times a ForceInv was seen in state S_B] (count) Enable level = 3
            STATISTIC 124 = stateEvent_ForceInv_EB [Event/State: Number of times a ForceInv was seen in state E_B] (count) Enable level = 3
            STATISTIC 125 = stateEvent_ForceInv_MB [Event/State: Number of times a ForceInv was seen in state M_B] (count) Enable level = 3
            STATISTIC 126 = stateEvent_ForceInv_SInv [Event/State: Number of times a ForceInv was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 127 = stateEvent_ForceInv_EInv [Event/State: Number of times a ForceInv was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 128 = stateEvent_ForceInv_MInv [Event/State: Number of times a ForceInv was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 129 = stateEvent_ForceInv_SM [Event/State: Number of times a ForceInv was seen in state SM] (count) Enable level = 3
            STATISTIC 130 = stateEvent_ForceInv_SMInv [Event/State: Number of times a ForceInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 131 = stateEvent_ForceInv_SA [Event/State: Number of times a ForceInv was seen in state S_A] (count) Enable level = 3
            STATISTIC 132 = stateEvent_ForceInv_EA [Event/State: Number of times a ForceInv was seen in state E_A] (count) Enable level = 3
            STATISTIC 133 = stateEvent_ForceInv_MA [Event/State: Number of times a ForceInv was seen in state M_A] (count) Enable level = 3
            STATISTIC 134 = stateEvent_Fetch_I [Event/State: Number of times a Fetch was seen in state I] (count) Enable level = 3
            STATISTIC 135 = stateEvent_Fetch_S [Event/State: Number of times a Fetch was seen in state S] (count) Enable level = 3
            STATISTIC 136 = stateEvent_Fetch_SM [Event/State: Number of times a Fetch was seen in state SM] (count) Enable level = 3
            STATISTIC 137 = stateEvent_Fetch_IB [Event/State: Number of times a Fetch was seen in state I_B] (count) Enable level = 3
            STATISTIC 138 = stateEvent_Fetch_SB [Event/State: Number of times a Fetch was seen in state S_B] (count) Enable level = 3
            STATISTIC 139 = stateEvent_Fetch_EB [Event/State: Number of times a Fetch was seen in state E_B] (count) Enable level = 3
            STATISTIC 140 = stateEvent_Fetch_MB [Event/State: Number of times a Fetch was seen in state M_B] (count) Enable level = 3
            STATISTIC 141 = stateEvent_Fetch_SA [Event/State: Number of times a Fetch was seen in state S_A] (count) Enable level = 3
            STATISTIC 142 = stateEvent_FetchResp_SInv [Event/State: Number of times a FetchResp was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 143 = stateEvent_FetchResp_SMInv [Event/State: Number of times a FetchResp was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 144 = stateEvent_FetchResp_EInv [Event/State: Number of times a FetchResp was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 145 = stateEvent_FetchResp_EInvX [Event/State: Number of times a FetchResp was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 146 = stateEvent_FetchResp_MInv [Event/State: Number of times a FetchResp was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 147 = stateEvent_FetchResp_MInvX [Event/State: Number of times a FetchResp was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 148 = stateEvent_FetchResp_SD [Event/State: Number of times a FetchResp was seen in state S_D] (count) Enable level = 3
            STATISTIC 149 = stateEvent_FetchResp_SMD [Event/State: Number of times a FetchResp was seen in state SM_D] (count) Enable level = 3
            STATISTIC 150 = stateEvent_FetchResp_ED [Event/State: Number of times a FetchResp was seen in state E_D] (count) Enable level = 3
            STATISTIC 151 = stateEvent_FetchResp_MD [Event/State: Number of times a FetchResp was seen in state M_D] (count) Enable level = 3
            STATISTIC 152 = stateEvent_FetchResp_SBD [Event/State: Number of times a FetchResp was seen in state SB_D] (count) Enable level = 3
            STATISTIC 153 = stateEvent_FetchResp_SBInv [Event/State: Number of times a FetchResp was seen in state SB_Inv] (count) Enable level = 3
            STATISTIC 154 = stateEvent_FetchXResp_EInvX [Event/State: Number of times a FetchXResp was seen in state E_InvX] (count) Enable level = 3
            STATISTIC 155 = stateEvent_FetchXResp_MInvX [Event/State: Number of times a FetchXResp was seen in state M_InvX] (count) Enable level = 3
            STATISTIC 156 = stateEvent_AckInv_I [Event/State: Number of times an AckInv was seen in state I] (count) Enable level = 3
            STATISTIC 157 = stateEvent_AckInv_SInv [Event/State: Number of times an AckInv was seen in state S_Inv] (count) Enable level = 3
            STATISTIC 158 = stateEvent_AckInv_SMInv [Event/State: Number of times an AckInv was seen in state SM_Inv] (count) Enable level = 3
            STATISTIC 159 = stateEvent_AckInv_EInv [Event/State: Number of times an AckInv was seen in state E_Inv] (count) Enable level = 3
            STATISTIC 160 = stateEvent_AckInv_MInv [Event/State: Number of times an AckInv was seen in state M_Inv] (count) Enable level = 3
            STATISTIC 161 = stateEvent_AckInv_SBInv [Event/State: Number of times an AckInv was seen in state SB_Inv] (count) Enable level = 3
            STATISTIC 162 = stateEvent_AckPut_I [Event/State: Number of times an AckPut was seen in state I] (count) Enable level = 3
            STATISTIC 163 = stateEvent_FlushLine_I [Event/State: Number of times a FlushLine was seen in state I] (count) Enable level = 3
            STATISTIC 164 = stateEvent_FlushLine_S [Event/State: Number of times a FlushLine was seen in state S] (count) Enable level = 3
            STATISTIC 165 = stateEvent_FlushLine_E [Event/State: Number of times a FlushLine was seen in state E] (count) Enable level = 3
            STATISTIC 166 = stateEvent_FlushLine_M [Event/State: Number of times a FlushLine was seen in state M] (count) Enable level = 3
            STATISTIC 167 = stateEvent_FlushLine_SMD [Event/State: Number of times a FlushLine was seen in state SM_D] (count) Enable level = 3
            STATISTIC 168 = stateEvent_FlushLineInv_I [Event/State: Number of times a FlushLineInv was seen in state I] (count) Enable level = 3
            STATISTIC 169 = stateEvent_FlushLineInv_S [Event/State: Number of times a FlushLineInv was seen in state S] (count) Enable level = 3
            STATISTIC 170 = stateEvent_FlushLineInv_E [Event/State: Number of times a FlushLineInv was seen in state E] (count) Enable level = 3
            STATISTIC 171 = stateEvent_FlushLineInv_M [Event/State: Number of times a FlushLineInv was seen in state M] (count) Enable level = 3
            STATISTIC 172 = stateEvent_FlushLineInv_EB [Event/State: Number of times a FlushLineInv was seen in state E_B] (count) Enable level = 3
            STATISTIC 173 = stateEvent_FlushLineInv_MB [Event/State: Number of times a FlushLineInv was seen in state M_B] (count) Enable level = 3
            STATISTIC 174 = stateEvent_FlushLineResp_I [Event/State: Number of times a FlushLineResp was seen in state I] (count) Enable level = 3
            STATISTIC 175 = stateEvent_FlushLineResp_IB [Event/State: Number of times a FlushLineResp was seen in state I_B] (count) Enable level = 3
            STATISTIC 176 = stateEvent_FlushLineResp_SB [Event/State: Number of times a FlushLineResp was seen in state S_B] (count) Enable level = 3
            STATISTIC 177 = evict_I [Eviction: Attempted to evict a block in state I] (count) Enable level = 3
            STATISTIC 178 = evict_S [Eviction: Attempted to evict a block in state S] (count) Enable level = 3
            STATISTIC 179 = evict_E [Eviction: Attempted to evict a block in state E] (count) Enable level = 3
            STATISTIC 180 = evict_M [Eviction: Attempted to evict a block in state M] (count) Enable level = 3
            STATISTIC 181 = evict_IS [Eviction: Attempted to evict a block in state IS] (count) Enable level = 3
            STATISTIC 182 = evict_IM [Eviction: Attempted to evict a block in state IM] (count) Enable level = 3
            STATISTIC 183 = evict_SM [Eviction: Attempted to evict a block in state SM] (count) Enable level = 3
            STATISTIC 184 = evict_SInv [Eviction: Attempted to evict a block in state S_Inv] (count) Enable level = 3
            STATISTIC 185 = evict_EInv [Eviction: Attempted to evict a block in state E_Inv] (count) Enable level = 3
            STATISTIC 186 = evict_MInv [Eviction: Attempted to evict a block in state M_Inv] (count) Enable level = 3
            STATISTIC 187 = evict_SMInv [Eviction: Attempted to evict a block in state SM_Inv] (count) Enable level = 3
            STATISTIC 188 = evict_EInvX [Eviction: Attempted to evict a block in state E_InvX] (count) Enable level = 3
            STATISTIC 189 = evict_MInvX [Eviction: Attempted to evict a block in state M_InvX] (count) Enable level = 3
            STATISTIC 190 = evict_IB [Eviction: Attempted to evict a block in state S_B] (count) Enable level = 3
            STATISTIC 191 = evict_SB [Eviction: Attempted to evict a block in state I_B] (count) Enable level = 3
            STATISTIC 192 = latency_GetS_hit [Latency for read hits] (cycles) Enable level = 1
            STATISTIC 193 = latency_GetS_miss [Latency for read misses, block not present] (cycles) Enable level = 1
            STATISTIC 194 = latency_GetS_inv [Latency for read misses, required fetch/inv from owner] (cycles) Enable level = 1
            STATISTIC 195 = latency_GetX_hit [Latency for write hits] (cycles) Enable level = 1
            STATISTIC 196 = latency_GetX_miss [Latency for write misses, block not present] (cycles) Enable level = 1
            STATISTIC 197 = latency_GetX_inv [Latency for write misses, block present but required invalidation/fetch] (cycles) Enable level = 1
            STATISTIC 198 = latency_GetX_upgrade [Latency for write misses, block present but in Shared state (includes invs in S)] (cycles) Enable level = 1
            STATISTIC 199 = latency_GetSX_hit [Latency for read-exclusive hits] (cycles) Enable level = 1
            STATISTIC 200 = latency_GetSX_miss [Latency for read-exclusive misses, block not present] (cycles) Enable level = 1
            STATISTIC 201 = latency_GetSX_inv [Latency for read-exclusive misses, block present but required invalidation/fetch] (cycles) Enable level = 1
            STATISTIC 202 = latency_GetSX_upgrade [Latency for read-exclusive misses, block present but in Shared state (includes invs in S)] (cycles) Enable level = 1
            STATISTIC 203 = latency_FlushLine [Latency for flush requests] (cycles) Enable level = 1
            STATISTIC 204 = latency_FlushLineInv [Latency for flush+invalidate requests] (cycles) Enable level = 1
            STATISTIC 205 = prefetch_useful [Prefetched block had a subsequent hit (useful prefetch)] (count) Enable level = 2
            STATISTIC 206 = prefetch_evict [Prefetched block was evicted/flushed before being accessed] (count) Enable level = 2
            STATISTIC 207 = prefetch_inv [Prefetched block was invalidated before being accessed] (count) Enable level = 2
            STATISTIC 208 = prefetch_coherence_miss [Prefetched block incurred a coherence miss (upgrade) on its first access] (count) Enable level = 2
            STATISTIC 209 = prefetch_redundant [Prefetch issued for a block that was already in cache] (count) Enable level = 2
            STATISTIC 210 = default_stat [Default statistic used for unexpected events/states/etc. Should be 0, if not, check for missing statistic registerations.] (none) Enable level = 7
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = replacement (Replacement policies, slot 0 is for cache, slot 1 is for directory (if it exists)) [SST::MemHierarchy::ReplacementPolicy]
            SUB COMPONENT SLOT 1 = hash (Hash function for mapping addresses to cache lines) [SST::MemHierarchy::HashFunction]
         NUM PARAMETERS = 0
    coherence.mesi_shared_noninclusive: Implements MESI or MSI coherence for cache that is co-located with a directory, for noninclusive last-level caches
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:57:34, using file: ./coherencemgr/MESI_Shared_Noninclusive.h
      SubComponent 14: cramsim
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = cramsim_link (Link to CramSim)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 9
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = verbose (Sets the verbosity of the backend output) [0]
            PARAMETER 7 = access_time ((string) Link latency for link to CramSim. With units (SI ok).) [100ns]
            PARAMETER 8 = max_outstanding_requests (Maximum number of outstanding requests) [256]
    cramsim: CramSim memory timings
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:55:16, using file: ./membackend/cramSimBackend.h
      SubComponent 15: emptyCacheListener
      Interface: SST::MemHierarchy::CacheListener
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    emptyCacheListener: Empty cache listener
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:31:23, using file: ../../../../src/sst/elements/memHierarchy/cacheListener.h
      SubComponent 16: extMemBackendConvertor
      Interface: SST::MemHierarchy::MemBackendConvertor
         NUM STATISTICS = 12
            STATISTIC 0 = cycles_with_issue [Total cycles with successful issue to back end] (cycles) Enable level = 1
            STATISTIC 1 = cycles_attempted_issue_but_rejected [Total cycles where an attempt to issue to backend was rejected (indicates backend full)] (cycles) Enable level = 1
            STATISTIC 2 = total_cycles [Total cycles called at the memory controller] (cycles) Enable level = 1
            STATISTIC 3 = requests_received_GetS [Number of GetS (read) requests received] (requests) Enable level = 1
            STATISTIC 4 = requests_received_GetSX [Number of GetSX (read) requests received] (requests) Enable level = 1
            STATISTIC 5 = requests_received_GetX [Number of GetX (read) requests received] (requests) Enable level = 1
            STATISTIC 6 = requests_received_PutM [Number of PutM (write) requests received] (requests) Enable level = 1
            STATISTIC 7 = outstanding_requests [Total number of outstanding requests each cycle] (requests) Enable level = 1
            STATISTIC 8 = latency_GetS [Total latency of handled GetS requests] (cycles) Enable level = 1
            STATISTIC 9 = latency_GetSX [Total latency of handled GetSX requests] (cycles) Enable level = 1
            STATISTIC 10 = latency_GetX [Total latency of handled GetX requests] (cycles) Enable level = 1
            STATISTIC 11 = latency_PutM [Total latency of handled PutM requests] (cycles) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
    extMemBackendConvertor: Converts MemEventBase* for an ExtMemBackend - passes additional opcode information
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:20, using file: ../../../../src/sst/elements/memHierarchy/membackend/extMemBackendConvertor.h
      SubComponent 17: fifoTransactionQ
      Interface: SST::MemHierarchy::TimingDRAM_NS::TransactionQ
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    fifoTransactionQ: fifo transaction queue
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/timingTransaction.h
      SubComponent 18: flagMemBackendConvertor
      Interface: SST::MemHierarchy::MemBackendConvertor
         NUM STATISTICS = 12
            STATISTIC 0 = cycles_with_issue [Total cycles with successful issue to back end] (cycles) Enable level = 1
            STATISTIC 1 = cycles_attempted_issue_but_rejected [Total cycles where an attempt to issue to backend was rejected (indicates backend full)] (cycles) Enable level = 1
            STATISTIC 2 = total_cycles [Total cycles called at the memory controller] (cycles) Enable level = 1
            STATISTIC 3 = requests_received_GetS [Number of GetS (read) requests received] (requests) Enable level = 1
            STATISTIC 4 = requests_received_GetSX [Number of GetSX (read) requests received] (requests) Enable level = 1
            STATISTIC 5 = requests_received_GetX [Number of GetX (read) requests received] (requests) Enable level = 1
            STATISTIC 6 = requests_received_PutM [Number of PutM (write) requests received] (requests) Enable level = 1
            STATISTIC 7 = outstanding_requests [Total number of outstanding requests each cycle] (requests) Enable level = 1
            STATISTIC 8 = latency_GetS [Total latency of handled GetS requests] (cycles) Enable level = 1
            STATISTIC 9 = latency_GetSX [Total latency of handled GetSX requests] (cycles) Enable level = 1
            STATISTIC 10 = latency_GetX [Total latency of handled GetX requests] (cycles) Enable level = 1
            STATISTIC 11 = latency_PutM [Total latency of handled PutM requests] (cycles) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
    flagMemBackendConvertor: Convert MemEventBase* for a FlagMemBackend - accepts and returns the 'flags' field
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:20, using file: ../../../../src/sst/elements/memHierarchy/membackend/flagMemBackendConvertor.h
      SubComponent 19: hash.linear
      Interface: SST::MemHierarchy::HashFunction
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    hash.linear: Linear hash from C99 standard's RNG function
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/hash.h
      SubComponent 20: hash.none
      Interface: SST::MemHierarchy::HashFunction
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    hash.none: Default hash function - none, returns unmodified value
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/hash.h
      SubComponent 21: hash.xor
      Interface: SST::MemHierarchy::HashFunction
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    hash.xor: Simple XOR hash
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/hash.h
      SubComponent 22: memInterface
      Interface: SST::Interfaces::SimpleMem
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = port (Port to memory hierarchy (caches/memory/etc.))
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = port (Optional, specify the owning component's port to used (not needed if this subcomponent is loaded in the input config)) []
    memInterface: Interface to memory hierarchy. Converts SimpleMem requests into MemEventBases.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:56:40, using file: memHierarchyInterface.h
      SubComponent 23: networkMemoryInspector
      Interface: SST::Interfaces::SimpleNetwork::NetworkInspector
         NUM STATISTICS = 32
            STATISTIC 0 = NULLCMD [NULLCMD] (memEvents) Enable level = 1
            STATISTIC 1 = GetS [GetS] (memEvents) Enable level = 1
            STATISTIC 2 = GetX [GetX] (memEvents) Enable level = 1
            STATISTIC 3 = GetSX [GetSX] (memEvents) Enable level = 1
            STATISTIC 4 = FlushLine [FlushLine] (memEvents) Enable level = 1
            STATISTIC 5 = FlushLineInv [FlushLineInv] (memEvents) Enable level = 1
            STATISTIC 6 = FlushAll [FlushAll] (memEvents) Enable level = 1
            STATISTIC 7 = GetSResp [GetSResp] (memEvents) Enable level = 1
            STATISTIC 8 = GetXResp [GetXResp] (memEvents) Enable level = 1
            STATISTIC 9 = FlushLineResp [FlushLineResp] (memEvents) Enable level = 1
            STATISTIC 10 = FlushAllResp [FlushAllResp] (memEvents) Enable level = 1
            STATISTIC 11 = PutS [PutS] (memEvents) Enable level = 1
            STATISTIC 12 = PutM [PutM] (memEvents) Enable level = 1
            STATISTIC 13 = PutE [PutE] (memEvents) Enable level = 1
            STATISTIC 14 = PutX [PutX] (memEvents) Enable level = 1
            STATISTIC 15 = Inv [Inv] (memEvents) Enable level = 1
            STATISTIC 16 = ForceInv [ForceInv] (memEvents) Enable level = 1
            STATISTIC 17 = Fetch [Fetch] (memEvents) Enable level = 1
            STATISTIC 18 = FetchInv [FetchInv] (memEvents) Enable level = 1
            STATISTIC 19 = FetchInvX [FetchInvX] (memEvents) Enable level = 1
            STATISTIC 20 = FetchResp [FetchResp] (memEvents) Enable level = 1
            STATISTIC 21 = FetchXResp [FetchXResp] (memEvents) Enable level = 1
            STATISTIC 22 = NACK [NACK] (memEvents) Enable level = 1
            STATISTIC 23 = AckInv [AckInv] (memEvents) Enable level = 1
            STATISTIC 24 = AckPut [AckPut] (memEvents) Enable level = 1
            STATISTIC 25 = Put [Put] (memEvents) Enable level = 1
            STATISTIC 26 = Get [Get] (memEvents) Enable level = 1
            STATISTIC 27 = AckMove [AckMove] (memEvents) Enable level = 1
            STATISTIC 28 = CustomReq [CustomReq] (memEvents) Enable level = 1
            STATISTIC 29 = CustomResp [CustomResp] (memEvents) Enable level = 1
            STATISTIC 30 = CustomAck [CustomAck] (memEvents) Enable level = 1
            STATISTIC 31 = Evict [Evict] (memEvents) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    networkMemoryInspector: Used to classify memory traffic going through a network router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:59:19, using file: ./networkMemInspector.h
      SubComponent 24: reorderByRow
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = backend (Backend memory model.) [SST::MemHierarchy::SimpleMemBackend]
         NUM PARAMETERS = 13
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = verbose (Sets the verbosity of the backend output) [0]
            PARAMETER 7 = max_issue_per_cycle (Maximum number of requests to issue per cycle. 0 or negative is unlimited.) [-1]
            PARAMETER 8 = banks (Number of banks) [8]
            PARAMETER 9 = bank_interleave_granularity (Granularity of interleaving in bytes (B), generally a cache line. Must be a power of 2.) [64B]
            PARAMETER 10 = row_size (Size of a row in bytes (B). Must be a power of 2.) [8KiB]
            PARAMETER 11 = reorder_limit (Maximum number of request to reorder to a rwo before changing rows.) [1]
            PARAMETER 12 = backend (Backend memory system.) [memHierarchy.simpleDRAM]
    reorderByRow: Request re-orderer, groups requests by row
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:54:30, using file: ./membackend/requestReorderByRow.h
      SubComponent 25: reorderSimple
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = backend (Backend memory model) [SST::MemHierarchy::SimpleMemBackend]
         NUM PARAMETERS = 10
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = verbose (Sets the verbosity of the backend output) [0]
            PARAMETER 7 = max_issue_per_cycle (Maximum number of requests to issue per cycle. 0 or negative is unlimited.) [-1]
            PARAMETER 8 = search_window_size (Maximum number of requests to search each cycle. 0 or negative is unlimited.) [-1]
            PARAMETER 9 = backend (Backend memory system) [memHierarchy.simpleDRAM]
    reorderSimple: Simple request re-orderer, issues the first N requests that are accepted by the backend
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:54:22, using file: ./membackend/requestReorderSimple.h
      SubComponent 26: reorderTransactionQ
      Interface: SST::MemHierarchy::TimingDRAM_NS::TransactionQ
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = windowCycles (Reorder window in cycles) [10]
    reorderTransactionQ: reorder transaction queue
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/timingTransaction.h
      SubComponent 27: replacement.lfu
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    replacement.lfu: least-frequently-used replacement policy, recently used accesses are more heavily weighted
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 28: replacement.lfu-opt
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    replacement.lfu-opt: least-frequently-used replacement policy, recently used accesses are more heavily weighted. Also considers coherence state in replacement decision
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 29: replacement.lru
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    replacement.lru: least-recently-used replacement policy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 30: replacement.lru-opt
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    replacement.lru-opt: least-recently-used replacement policy with consideration for coherence state
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 31: replacement.mru
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    replacement.mru: most-recently-used replacement policy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 32: replacement.mru-opt
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    replacement.mru-opt: most-recently-used replacement policy, with consideration for coherence state
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 33: replacement.nmru
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = seed_a (Seed for random number generator) [1]
            PARAMETER 1 = seed_b (Seed for random number generator) [1]
    replacement.nmru: not-most-recently-used, random replacement among all but the most recently used line in a set
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 34: replacement.random
      Interface: SST::MemHierarchy::ReplacementPolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = seed_a (Seed for random number generator) [1]
            PARAMETER 1 = seed_b (Seed for random number generator) [1]
    replacement.random: random replacement policy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:51:46, using file: ../../../../src/sst/elements/memHierarchy/replacementManager.h
      SubComponent 35: scratchInterface
      Interface: SST::Interfaces::SimpleMem
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = port (Port to memory hierarchy (caches/memory/etc.))
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = scratchpad_size (Size of the scratchpad, with units) [<required>]
    scratchInterface: Interface to a scratchpad
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:56:47, using file: memHierarchyScratchInterface.h
      SubComponent 36: simpleDRAM
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 3
            STATISTIC 0 = row_already_open [Number of times a request arrived and the correct row was open] (count) Enable level = 1
            STATISTIC 1 = no_row_open [Number of times a request arrived and no row was open] (count) Enable level = 1
            STATISTIC 2 = wrong_row_open [Number of times a request arrived and the wrong row was open] (count) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 15
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = verbose ((uint) Sets the verbosity of the backend output) [0]
            PARAMETER 7 = cycle_time ((string) Latency of a cycle or clock frequency (e.g., '4ns' and '250MHz' are both accepted)) [4ns]
            PARAMETER 8 = tCAS ((uint) Column access latency in cycles (i.e., access time if correct row is already open)) [9]
            PARAMETER 9 = tRCD ((uint) Row access latency in cycles (i.e., time to open a row)) [9]
            PARAMETER 10 = tRP ((uint) Precharge delay in cycles (i.e., time to close a row)) [9]
            PARAMETER 11 = banks ((uint) Number of banks) [8]
            PARAMETER 12 = bank_interleave_granularity ((string) Granularity of interleaving in bytes (B), generally a cache line. Must be a power of 2.) [64B]
            PARAMETER 13 = row_size ((string) Size of a row in bytes (B). Must be a power of 2.) [8KiB]
            PARAMETER 14 = row_policy ((string) Policy for managing the row buffer - open or closed.) [closed]
    simpleDRAM: Simplified timing model for DRAM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:54:13, using file: ./membackend/simpleDRAMBackend.h
      SubComponent 37: simpleMem
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = access_time ((string) Constant latency of memory operations. With units (SI ok).) [100ns]
    simpleMem: Basic constant-access-time memory timing model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/simpleMemBackend.h
      SubComponent 38: simpleMemBackendConvertor
      Interface: SST::MemHierarchy::SimpleMemBackendConvertor
         NUM STATISTICS = 12
            STATISTIC 0 = cycles_with_issue [Total cycles with successful issue to back end] (cycles) Enable level = 1
            STATISTIC 1 = cycles_attempted_issue_but_rejected [Total cycles where an attempt to issue to backend was rejected (indicates backend full)] (cycles) Enable level = 1
            STATISTIC 2 = total_cycles [Total cycles called at the memory controller] (cycles) Enable level = 1
            STATISTIC 3 = requests_received_GetS [Number of GetS (read) requests received] (requests) Enable level = 1
            STATISTIC 4 = requests_received_GetSX [Number of GetSX (read) requests received] (requests) Enable level = 1
            STATISTIC 5 = requests_received_GetX [Number of GetX (read) requests received] (requests) Enable level = 1
            STATISTIC 6 = requests_received_PutM [Number of PutM (write) requests received] (requests) Enable level = 1
            STATISTIC 7 = outstanding_requests [Total number of outstanding requests each cycle] (requests) Enable level = 1
            STATISTIC 8 = latency_GetS [Total latency of handled GetS requests] (cycles) Enable level = 1
            STATISTIC 9 = latency_GetSX [Total latency of handled GetSX requests] (cycles) Enable level = 1
            STATISTIC 10 = latency_GetX [Total latency of handled GetX requests] (cycles) Enable level = 1
            STATISTIC 11 = latency_PutM [Total latency of handled PutM requests] (cycles) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
    simpleMemBackendConvertor: Converts a MemEventBase* for base MemBackend
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:52:20, using file: ../../../../src/sst/elements/memHierarchy/membackend/simpleMemBackendConvertor.h
      SubComponent 39: simpleMemScratchBackendConvertor
      Interface: SST::MemHierarchy::ScratchBackendConvertor
         NUM STATISTICS = 11
            STATISTIC 0 = cycles_with_issue [Total cycles with successful issue to backend] (cycles) Enable level = 1
            STATISTIC 1 = cycles_attempted_issue_but_rejected [Total cycles where an issue was attempted but backed rejected it] (cycles) Enable level = 1
            STATISTIC 2 = total_cycles [Total cycles executed at the scratchpad] (cycles) Enable level = 1
            STATISTIC 3 = requests_received_GetS [Number of GetS (read) requests received] (requests) Enable level = 1
            STATISTIC 4 = requests_received_GetSX [Number of GetSX (read) requests received] (requests) Enable level = 1
            STATISTIC 5 = requests_received_GetX [Number of GetX (read) requests received] (requests) Enable level = 1
            STATISTIC 6 = requests_received_PutM [Number of PutM (write) requests received] (requests) Enable level = 1
            STATISTIC 7 = latency_GetS [Total latency of handled GetS requests] (cycles) Enable level = 1
            STATISTIC 8 = latency_GetSX [Total latency of handled GetSX requests] (cycles) Enable level = 1
            STATISTIC 9 = latency_GetX [Total latency of handled GetX requests] (cycles) Enable level = 1
            STATISTIC 10 = latency_PutM [Total latency of handled PutM requests] (cycles) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = backend (Backend memory model) [SST::MemHierarchy::MemBackend]
         NUM PARAMETERS = 5
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = request_width ((uint) Max size of a request that can be accepted by the memory controller) [64]
            PARAMETER 4 = backend ((string) Backend memory model to use for timing. Defaults to 'simpleMem') [memHierarchy.simpleMem]
    simpleMemScratchBackendConvertor: Convert a MemEventBase to a base MemBacked but uses a different interface than MemBackendConvertor
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:55:08, using file: ./membackend/simpleMemScratchBackendConvertor.h
      SubComponent 40: simplePagePolicy
      Interface: SST::MemHierarchy::TimingDRAM_NS::PagePolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = close (Whether to use a closed (true) or open (false) page policy) [true]
    simplePagePolicy: static page open or close policy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/timingPagePolicy.h
      SubComponent 41: timeoutPagePolicy
      Interface: SST::MemHierarchy::TimingDRAM_NS::PagePolicy
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = timeoutCycles (Timeout (close page) after this many cycles) [5]
    timeoutPagePolicy: timeout based page open or close policy
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/timingPagePolicy.h
      SubComponent 42: timingDRAM
      Interface: SST::MemHierarchy::SimpleMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = transactionQ (Transaction queue model) [SST::MemHierarchy::TimingDRAM_NS::TransactionQ]
            SUB COMPONENT SLOT 1 = pagePolicy (Policy subcomponent for managing row buffer) [SST::MemHierarchy::TimingDRAM_NS::PagePolicy]
         NUM PARAMETERS = 22
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = id (ID number for this TimingDRAM instance) [<required>]
            PARAMETER 7 = dbg_level (Output verbosity for debug) [1]
            PARAMETER 8 = dbg_mask (Mask on dbg_level) [-1]
            PARAMETER 9 = printconfig (Print configuration at start) [true]
            PARAMETER 10 = addrMapper (Address map subcomponent) [memHierarchy.simpleAddrMapper]
            PARAMETER 11 = channels (Number of channels) [1]
            PARAMETER 12 = channel.numRanks (Number of ranks per channel) [1]
            PARAMETER 13 = channel.transaction_Q_size (Size of transaction queue) [32]
            PARAMETER 14 = channel.rank.numBanks (Number of banks per rank) [8]
            PARAMETER 15 = channel.rank.bank.CL (Column access latency in cycles) [11]
            PARAMETER 16 = channel.rank.bank.CL_WR (Column write latency) [11]
            PARAMETER 17 = channel.rank.bank.RCD (Row access latency in cycles) [11]
            PARAMETER 18 = channel.rank.bank.TRP (Precharge delay in cycles) [11]
            PARAMETER 19 = channel.rank.bank.dataCycles () [4]
            PARAMETER 20 = channel.rank.bank.transactionQ (Transaction queue model (subcomponent)) [memHierarchy.fifoTransactionQ]
            PARAMETER 21 = channel.rank.bank.pagePolicy (Policy subcomponent for managing row buffer) [memHierarchy.simplePagePolicy]
    timingDRAM: Moderately-detailed timing model for DRAM
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ./membackend/timingDRAMBackend.h
      SubComponent 43: vaultsim
      Interface: SST::MemHierarchy::FlagMemBackend
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = cube_link (Link to VaultSim.)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = debug_level ((uint) Debugging level: 0 (no output) to 10 (all output). Output also requires that SST Core be compiled with '--enable-debug') [0]
            PARAMETER 1 = debug_mask ((uint) Mask on debug_level) [0]
            PARAMETER 2 = debug_location ((uint) 0: No debugging, 1: STDOUT, 2: STDERR, 3: FILE) [0]
            PARAMETER 3 = max_requests_per_cycle ((int) Maximum number of requests to accept each cycle. Use 0 or -1 for unlimited.) [-1]
            PARAMETER 4 = request_width ((int) Maximum size, in bytes, for a request) [64]
            PARAMETER 5 = mem_size ((string) Size of memory with units (SI ok). E.g., '2GiB'.) [<required>]
            PARAMETER 6 = access_time (Link latency for the link to the VaultSim memory model. With units (SI ok).) [100ns]
    vaultsim: Backend to interface with VaultSimC, a generic vaulted memory model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:54:40, using file: ./membackend/vaultSimBackend.h
Num Modules = 3
      Module 0: roundRobinAddrMapper
         NUM PARAMETERS = 2
            PARAMETER 0 = interleave_size ((string) Granularity of interleaving in bytes (B). SI ok.) [64B]
            PARAMETER 1 = row_size ((string) Size of each row in bytes (B). SI ok.) [1KiB]
    roundRobinAddrMapper: Round-robin address mapper
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/timingAddrMapper.h
      Module 1: sandyBridgeAddrMapper
         NUM PARAMETERS = 0
    sandyBridgeAddrMapper: Sandy Bridge address mapper
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/timingAddrMapper.h
      Module 2: simpleAddrMapper
         NUM PARAMETERS = 0
    simpleAddrMapper: Simple address mapper
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:53:00, using file: ../../../../src/sst/elements/memHierarchy/membackend/timingAddrMapper.h
Num SSTPartitioners = 0
================================================================================
ELEMENT 13 = merlin ()
Num Components = 10
      Component 0: Bridge
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 4
            STATISTIC 0 = pkts_received_net0 [Total number of packets recived on NIC0] (count) Enable level = 1
            STATISTIC 1 = pkts_received_net1 [Total number of packets recived on NIC1] (count) Enable level = 1
            STATISTIC 2 = pkts_sent_net0 [Total number of packets sent on NIC0] (count) Enable level = 1
            STATISTIC 3 = pkts_sent_net1 [Total number of packets sent on NIC1] (count) Enable level = 1
         NUM PORTS = 2
            PORT 0 = network0 (Network Link)
            PORT 1 = network1 (Network Link)
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = translator (Element to translate between the two networks.) [SST::Merlin::Bridge::Translator]
            SUB COMPONENT SLOT 1 = networkIF (Element to interface to networks.  There are two IFs that need to be loaded (index 0 and 1).) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 6
            PARAMETER 0 = translator (Translator backend.  Inherit from SST::Merlin::Bridge::Translator.) [<required>]
            PARAMETER 1 = debug (0 (default): No debugging, 1: STDOUT, 2: STDERR, 3: FILE.) [0]
            PARAMETER 2 = debug_level (Debugging level: 0 to 10) [0]
            PARAMETER 3 = network_bw (The network link bandwidth.) [80GiB/s]
            PARAMETER 4 = network_input_buffer_size (Size of the network's input buffer.) [1KiB]
            PARAMETER 5 = network_output_buffer_size (Size of the network;s output buffer.) [1KiB]
    Bridge: Bridge between two memory networks.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:13, using file: ../../../../src/sst/elements/merlin/bridge.h
      Component 1: background_traffic
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr (Port that hooks up to router.)
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
            SUB COMPONENT SLOT 1 = pattern_gen (Target address generator) [SST::Merlin::TargetGenerator]
         NUM PARAMETERS = 4
            PARAMETER 0 = num_peers (Total number of endpoints in network.) [<required>]
            PARAMETER 1 = packet_size (Packet size specified in either b or B (can include SI prefix).) [32B]
            PARAMETER 2 = pattern (Traffic pattern to use.) [merlin.targetgen.uniform]
            PARAMETER 3 = offered_load (Load to be offered to network.  Valid range: 0 < offered_load <= 1.0.) [<required>]
    background_traffic: Pattern-based traffic generator to create background traffic.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:48, using file: ./background_traffic/background_traffic.h
      Component 2: bisection_test
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr (Port that hooks up to router.)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 6
            PARAMETER 0 = num_peers (Number of peers on the network (must be even number)) [<required>]
            PARAMETER 1 = link_bw (Bandwidth of the router link specified in either b/s or B/s (can include SI prefix).) [2GB/s]
            PARAMETER 2 = packet_size (Packet size specified in either b or B (can include SI prefix).) [64B]
            PARAMETER 3 = packets_to_send (Number of packets to send in the test.) [32]
            PARAMETER 4 = buffer_size (Size of input and output buffers specified in b or B (can include SI prefix).) [128B]
            PARAMETER 5 = networkIF (Network interface to use.  Must inherit from SimpleNetwork) [merlin.linkcontrol]
    bisection_test: Simple NIC to test bisection bandwidth of a network.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:01:43, using file: ../../../../src/sst/elements/merlin/test/bisection/bisection_test.h
      Component 3: hr_router
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 6
            STATISTIC 0 = send_bit_count [Count number of bits sent on link] (bits) Enable level = 1
            STATISTIC 1 = send_packet_count [Count number of packets sent on link] (packets) Enable level = 1
            STATISTIC 2 = output_port_stalls [Time output port is stalled (in units of core timebase)] (time in stalls) Enable level = 1
            STATISTIC 3 = xbar_stalls [Count number of cycles the xbar is stalled] (cycles) Enable level = 1
            STATISTIC 4 = idle_time [Amount of time spent idle for a given port] (units of core timebase) Enable level = 1
            STATISTIC 5 = width_adj_count [Number of times that link width was increased or decreased] (width adjustment count) Enable level = 1
         NUM PORTS = 1
            PORT 0 = port%(num_ports)d (Ports which connect to endpoints or other routers.)
         NUM SUBCOMPONENT SLOTS = 3
            SUB COMPONENT SLOT 0 = topology (Topology object to control routing) [SST::Merlin::Topology]
            SUB COMPONENT SLOT 1 = XbarArb (Crossbar arbitration) [SST::Merlin::XbarArbitration]
            SUB COMPONENT SLOT 2 = portcontrol (PortControl blocks) [SST::Merlin::PortInterface]
         NUM PARAMETERS = 18
            PARAMETER 0 = id (ID of the router.) [<required>]
            PARAMETER 1 = num_ports (Number of ports that the router has) [<required>]
            PARAMETER 2 = topology (Name of the topology subcomponent that should be loaded to control routing.) [<required>]
            PARAMETER 3 = xbar_arb (Arbitration unit to be used for crossbar.) [merlin.xbar_arb_lru]
            PARAMETER 4 = link_bw (Bandwidth of the links specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 5 = flit_size (Flit size specified in either b or B (can include SI prefix).) [<required>]
            PARAMETER 6 = xbar_bw (Bandwidth of the crossbar specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 7 = input_latency (Latency of packets entering switch into input buffers.  Specified in s (can include SI prefix).) [<required>]
            PARAMETER 8 = output_latency (Latency of packets exiting switch from output buffers.  Specified in s (can include SI prefix).) [<required>]
            PARAMETER 9 = input_buf_size (Size of input buffers specified in b or B (can include SI prefix).) [<required>]
            PARAMETER 10 = output_buf_size (Size of output buffers specified in b or B (can include SI prefix).) [<required>]
            PARAMETER 11 = network_inspectors (Comma separated list of network inspectors to put on output ports.) []
            PARAMETER 12 = oql_track_port (Set to true to track output queue length for an entire port.  False tracks per VC.) [false]
            PARAMETER 13 = oql_track_remote (Set to true to track output queue length including remote input queue.  False tracks only local queue.) [false]
            PARAMETER 14 = num_vns (Number of VNs.) [2]
            PARAMETER 15 = vn_remap (Array that specifies the vn remapping for each node in the systsm.) [<required>]
            PARAMETER 16 = vn_remap_shm (Name of shared memory region for vn remapping.  If empty, no remapping is done) []
            PARAMETER 17 = debug (Turn on debugging for router. Set to 1 for on, 0 for off.) [0]
    hr_router: High radix router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:03:19, using file: ./hr_router/hr_router.h
      Component 4: offered_load
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr (Port that hooks up to router.)
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
            SUB COMPONENT SLOT 1 = pattern_gen (Target address generator) [SST::Merlin::TargetGenerator]
         NUM PARAMETERS = 10
            PARAMETER 0 = num_peers (Total number of endpoints in network.) [<required>]
            PARAMETER 1 = link_bw (Bandwidth of the router link specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 2 = linkcontrol (SimpleNetwork object to use as interface to network.) [merlin.linkcontrol]
            PARAMETER 3 = buffer_size (Size of input and output buffers.) [1kB]
            PARAMETER 4 = packet_size (Packet size specified in either b or B (can include SI prefix).) [32B]
            PARAMETER 5 = pattern (Traffic pattern to use.) [merlin.targetgen.uniform]
            PARAMETER 6 = offered_load (Load to be offered to network.  Valid range: 0 < offered_load <= 1.0.) [<required>]
            PARAMETER 7 = warmup_time (Time to wait before recording latencies) [1us]
            PARAMETER 8 = collect_time (Time to collect data after warmup) [20us]
            PARAMETER 9 = drain_time (Time to drain network before stating next round) [50us]
    offered_load: Pattern-based traffic generator to study latency versus offered load.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:58, using file: ./offeredload/offered_load.h
      Component 5: pt2pt_test
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr (Port that hooks up to router.)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 9
            PARAMETER 0 = link_bw (Bandwidth of the router link specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 1 = packet_size (Packet size specified in either b or B (can include SI prefix).) [<required>]
            PARAMETER 2 = packets_to_send (Number of packets to send in the test.) [<required>]
            PARAMETER 3 = buffer_size (Size of input and output buffers specified in b or B (can include SI prefix).) [<required>]
            PARAMETER 4 = src (Array of IDs of NICs that will send data.) [<required>]
            PARAMETER 5 = dest (Array of IDs of NICs to send data to.) [<required>]
            PARAMETER 6 = stream_delays (Array of times before starting each of the streams.  Default is to start all of them at simulation start.) [<required>]
            PARAMETER 7 = report_interval (Intefval to report bandwidth numbers.  Default is to only print at the end) [0ns]
            PARAMETER 8 = linkcontrol (SimpleNetwork class to use to talk to network.) [<required>]
    pt2pt_test: Simple NIC to test basic pt2pt performance.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:01:32, using file: ../../../../src/sst/elements/merlin/test/pt2pt/pt2pt_test.h
      Component 6: route_test
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr (Port that hooks up to router.)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 3
            PARAMETER 0 = id (Network ID of endpoint.) [<required>]
            PARAMETER 1 = num_peers (Total number of endpoints in network.) [<required>]
            PARAMETER 2 = link_bw (Bandwidth of the router link specified in either b/s or B/s (can include SI prefix).) [<required>]
    route_test: Simple NIC to test routing.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:01:24, using file: ../../../../src/sst/elements/merlin/test/route_test/route_test.h
      Component 7: shift_nic
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr (Port that hooks up to router.)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 7
            PARAMETER 0 = id (Network ID of endpoint.) [<required>]
            PARAMETER 1 = num_peers (Total number of endpoints in network.) [<required>]
            PARAMETER 2 = shift (Number of logical network endpoints to shift to use as destination for packets.) [<required>]
            PARAMETER 3 = packets_to_send (Number of packets to send in the test.) [10]
            PARAMETER 4 = packet_size (Packet size specified in either b or B (can include SI prefix).) [64B]
            PARAMETER 5 = link_bw (Bandwidth of the router link specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 6 = remap (Creates a logical to physical mapping shifted by remap amount.) [0]
    shift_nic: Simple pattern NIC doing a shift pattern.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:01:52, using file: ../../../../src/sst/elements/merlin/test/simple_patterns/shift.h
      Component 8: test_nic
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 5
            PARAMETER 0 = id (Network ID of endpoint.) [<required>]
            PARAMETER 1 = num_peers (Total number of endpoints in network.) [<required>]
            PARAMETER 2 = num_messages (Total number of messages to send to each endpoint.) [<required>]
            PARAMETER 3 = message_size (Size of each message to be sent specified in either b or B (can include SI prefix).) [<required>]
            PARAMETER 4 = send_untimed_broadcast (Controls whether data is sent in init and complete.) [false]
    test_nic: Simple NIC to test base functionality.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:01:16, using file: ../../../../src/sst/elements/merlin/test/nic.h
      Component 9: trafficgen
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr (Port that hooks up to router.)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 41
            PARAMETER 0 = id (Network ID of endpoint.) [<required>]
            PARAMETER 1 = num_peers (Total number of endpoints in network.) [<required>]
            PARAMETER 2 = num_vns (Number of requested virtual networks.) [<required>]
            PARAMETER 3 = link_bw (Bandwidth of the router link specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 4 = topology (Name of the topology subcomponent that should be loaded to control routing.) [<required>]
            PARAMETER 5 = buffer_length (Length of input and output buffers.) [1kB]
            PARAMETER 6 = packets_to_send (Number of packets to send in the test.) [1000]
            PARAMETER 7 = packet_size (Packet size specified in either b or B (can include SI prefix).) [5]
            PARAMETER 8 = delay_between_packets () [0]
            PARAMETER 9 = message_rate () [1GHz]
            PARAMETER 10 = PacketDest:pattern (Address pattern to be used (NearestNeighbor, Uniform, HotSpot, Normal, Binomial)) [<required>]
            PARAMETER 11 = PacketDest:Seed (Sets the seed of the RNG) [11]
            PARAMETER 12 = PacketDest:RangeMax (Minumum address to send packets.) [0]
            PARAMETER 13 = PacketDest:RangeMin (Maximum address to send packets.) [INT_MAX]
            PARAMETER 14 = PacketDest:NearestNeighbor:3DSize (For Nearest Neighbors, the 3D size "x y z" of the mesh) []
            PARAMETER 15 = PacketDest:HotSpot:target (For HotSpot, which node is the target) []
            PARAMETER 16 = PacketDest:HotSpot:targetProbability (For HotSpot, with what probability is the target targeted) []
            PARAMETER 17 = PacketDest:Normal:Mean (In a normal distribution, the mean) []
            PARAMETER 18 = PacketDest:Normal:Sigma (In a normal distribution, the mean variance) []
            PARAMETER 19 = PacketDest:Binomial:Mean (In a binomial distribution, the mean) []
            PARAMETER 20 = PacketDest:Binomial:Sigma (In a binomial distribution, the variance) []
            PARAMETER 21 = PacketSize:pattern (Address pattern to be used (Uniform, HotSpot, Normal, Binomial)) [<required>]
            PARAMETER 22 = PacketSize:Seed (Sets the seed of the RNG) [11]
            PARAMETER 23 = PacketSize:RangeMax (Minumum size of packets.) [0]
            PARAMETER 24 = PacketSize:RangeMin (Maximum size of packets.) [INT_MAX]
            PARAMETER 25 = PacketSize:HotSpot:target (For HotSpot, the target packet size) []
            PARAMETER 26 = PacketSize:HotSpot:targetProbability (For HotSpot, with what probability is the target targeted) []
            PARAMETER 27 = PacketSize:Normal:Mean (In a normal distribution, the mean) []
            PARAMETER 28 = PacketSize:Normal:Sigma (In a normal distribution, the mean variance) [1.0]
            PARAMETER 29 = PacketSize:Binomial:Mean (In a binomial distribution, the mean) []
            PARAMETER 30 = PacketSize:Binomial:Sigma (In a binomial distribution, the variance) [0.5]
            PARAMETER 31 = PacketDelay:pattern (Address pattern to be used (Uniform, HotSpot, Normal, Binomial)) [<required>]
            PARAMETER 32 = PacketDelay:Seed (Sets the seed of the RNG) [11]
            PARAMETER 33 = PacketDelay:RangeMax (Minumum delay between packets.) [0]
            PARAMETER 34 = PacketDelay:RangeMin (Maximum delay between packets.) [INT_MAX]
            PARAMETER 35 = PacketDelay:HotSpot:target (For HotSpot, the target packet delay) []
            PARAMETER 36 = PacketDelay:HotSpot:targetProbability (For HotSpot, with what probability is the target targeted) []
            PARAMETER 37 = PacketDelay:Normal:Mean (In a normal distribution, the mean) []
            PARAMETER 38 = PacketDelay:Normal:Sigma (In a normal distribution, the mean variance) [1.0]
            PARAMETER 39 = PacketDelay:Binomial:Mean (In a binomial distribution, the mean) []
            PARAMETER 40 = PacketDelay:Binomial:Sigma (In a binomial distribution, the variance) [0.5]
    trafficgen: Pattern-based traffic generator.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:03:33, using file: ./trafficgen/trafficgen.h
Num SubComponents = 22
      SubComponent 0: arb.output.basic
      Interface: SST::Merlin::PortInterface::OutputArbitration
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = arb (Tyoe of arbitration to use) [merlin.arb.base.single.roundrobin]
    arb.output.basic: Basic output arbitration for PortControl
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:04:11, using file: interfaces/output_arb_basic.h
      SubComponent 1: arb.output.qos.multi
      Interface: SST::Merlin::PortInterface::OutputArbitration
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = arb_vns (Tyoe of arbitration to use for virtual networks) [merlin.arb.base.single.lru]
            PARAMETER 1 = arb_vcs (Tyoe of arbitration to use with virtual network for VCs) [merlin.arb.base.single.roundrobin]
            PARAMETER 2 = qos_settings (Array of qos setting for each VN) []
    arb.output.qos.multi: Multi-level output arbitration with quality of service for PortControl
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:04:11, using file: interfaces/output_arb_qos_multi.h
      SubComponent 2: circuit_network_inspector
      Interface: SST::Interfaces::SimpleNetwork::NetworkInspector
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    circuit_network_inspector: Used to count the number of network circuits (as in 'circuit switched' circuits)
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:03:43, using file: inspectors/circuitCounter.h
      SubComponent 3: dragonfly
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 18
            PARAMETER 0 = dragonfly:hosts_per_router (Number of hosts connected to each router.) [<required>]
            PARAMETER 1 = dragonfly:routers_per_group (Number of links used to connect to routers in same group.) [<required>]
            PARAMETER 2 = dragonfly:intergroup_per_router (Number of links per router connected to other groups.) [<required>]
            PARAMETER 3 = dragonfly:intergroup_links (Number of links between each pair of groups.) [<required>]
            PARAMETER 4 = dragonfly:num_groups (Number of groups in network.) [<required>]
            PARAMETER 5 = dragonfly:algorithm (Routing algorithm to use [minmal (default) | valiant].) [minimal]
            PARAMETER 6 = dragonfly:adaptive_threshold (Threshold to use when make adaptive routing decisions.) [2.0]
            PARAMETER 7 = dragonfly:global_link_map (Array specifying connectivity of global links in each dragonfly group.) [<required>]
            PARAMETER 8 = dragonfly:global_route_mode (Mode for intepreting global link map [absolute (default) | relative].) [absolute]
            PARAMETER 9 = hosts_per_router (Number of hosts connected to each router.) [<required>]
            PARAMETER 10 = routers_per_group (Number of links used to connect to routers in same group.) [<required>]
            PARAMETER 11 = intergroup_per_router (Number of links per router connected to other groups.) [<required>]
            PARAMETER 12 = intergroup_links (Number of links between each pair of groups.) [<required>]
            PARAMETER 13 = num_groups (Number of groups in network.) [<required>]
            PARAMETER 14 = algorithm (Routing algorithm to use [minmal (default) | valiant].) [minimal]
            PARAMETER 15 = adaptive_threshold (Threshold to use when make adaptive routing decisions.) [2.0]
            PARAMETER 16 = global_link_map (Array specifying connectivity of global links in each dragonfly group.) [<required>]
            PARAMETER 17 = global_route_mode (Mode for intepreting global link map [absolute (default) | relative].) [absolute]
    dragonfly: Dragonfly topology object.  Implements a dragonfly with a single all to all pattern within the group.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:02:29, using file: topology/dragonfly.h
      SubComponent 4: dragonfly2
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 18
            PARAMETER 0 = dragonfly:hosts_per_router (Number of hosts connected to each router.) [<required>]
            PARAMETER 1 = dragonfly:routers_per_group (Number of links used to connect to routers in same group.) [<required>]
            PARAMETER 2 = dragonfly:intergroup_per_router (Number of links per router connected to other groups.) [<required>]
            PARAMETER 3 = dragonfly:intergroup_links (Number of links between each pair of groups.) [<required>]
            PARAMETER 4 = dragonfly:num_groups (Number of groups in network.) [<required>]
            PARAMETER 5 = dragonfly:algorithm (Routing algorithm to use [minmal (default) | valiant].) [minimal]
            PARAMETER 6 = dragonfly:adaptive_threshold (Threshold to use when make adaptive routing decisions.) [2.0]
            PARAMETER 7 = dragonfly:global_link_map (Array specifying connectivity of global links in each dragonfly group.) [<required>]
            PARAMETER 8 = dragonfly:global_route_mode (Mode for intepreting global link map [absolute (default) | relative].) [absolute]
            PARAMETER 9 = hosts_per_router (Number of hosts connected to each router.) [<required>]
            PARAMETER 10 = routers_per_group (Number of links used to connect to routers in same group.) [<required>]
            PARAMETER 11 = intergroup_per_router (Number of links per router connected to other groups.) [<required>]
            PARAMETER 12 = intergroup_links (Number of links between each pair of groups.) [<required>]
            PARAMETER 13 = num_groups (Number of groups in network.) [<required>]
            PARAMETER 14 = algorithm (Routing algorithm to use [minmal (default) | valiant].) [minimal]
            PARAMETER 15 = adaptive_threshold (Threshold to use when make adaptive routing decisions.) [2.0]
            PARAMETER 16 = global_link_map (Array specifying connectivity of global links in each dragonfly group.) [<required>]
            PARAMETER 17 = global_route_mode (Mode for intepreting global link map [absolute (default) | relative].) [absolute]
    dragonfly2: Dragonfly2 topology object.  Implements a dragonfly with a single all to all pattern within the group.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:02:49, using file: topology/dragonfly2.h
      SubComponent 5: dragonfly_legacy
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = dragonfly:hosts_per_router (Number of hosts connected to each router.) [<required>]
            PARAMETER 1 = dragonfly:routers_per_group (Number of links used to connect to routers in same group.) [<required>]
            PARAMETER 2 = dragonfly:intergroup_per_router (Number of links per router connected to other groups.) [<required>]
            PARAMETER 3 = dragonfly:num_groups (Number of groups in network.) [<required>]
            PARAMETER 4 = dragonfly:algorithm (Routing algorithm to use [minmal (default) | valiant].) [minimal]
    dragonfly_legacy: Legacy dragonfly topology object.  No longer supported.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:02:39, using file: topology/dragonfly_legacy.h
      SubComponent 6: fattree
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = fattree:shape (Shape of the fattree) [<required>]
            PARAMETER 1 = fattree:routing_alg (Routing algorithm to use. [deterministic | adaptive]) [deterministic]
            PARAMETER 2 = fattree:adaptive_threshold (Threshold used to determine if a packet will adaptively route.) [<required>]
            PARAMETER 3 = shape (Shape of the fattree) [<required>]
            PARAMETER 4 = routing_alg (Routing algorithm to use. [deterministic | adaptive]) [deterministic]
            PARAMETER 5 = adaptive_threshold (Threshold used to determine if a packet will adaptively route.) [<required>]
    fattree: Fattree topology object
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:02:19, using file: topology/fattree.h
      SubComponent 7: hyperx
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = hyperx:shape (Shape of the mesh specified as the number of routers in each dimension, where each dimension is separated by a colon.  For example, 4x4x2x2.  Any number of dimensions is supported.) [<required>]
            PARAMETER 1 = hyperx:width (Number of links between routers in each dimension, specified in same manner as for shape.  For example, 2x2x1 denotes 2 links in the x and y dimensions and one in the z dimension.) [<required>]
            PARAMETER 2 = hyperx:local_ports (Number of endpoints attached to each router.) [<required>]
            PARAMETER 3 = hyperx:algorithm (Routing algorithm to use.) [DOR]
            PARAMETER 4 = shape (Shape of the mesh specified as the number of routers in each dimension, where each dimension is separated by a colon.  For example, 4x4x2x2.  Any number of dimensions is supported.) [<required>]
            PARAMETER 5 = width (Number of links between routers in each dimension, specified in same manner as for shape.  For example, 2x2x1 denotes 2 links in the x and y dimensions and one in the z dimension.) [<required>]
            PARAMETER 6 = local_ports (Number of endpoints attached to each router.) [<required>]
            PARAMETER 7 = algorithm (Routing algorithm to use.) [DOR]
    hyperx: Multi-dimensional hyperx topology object
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:03:08, using file: topology/hyperx.h
      SubComponent 8: linkcontrol
      Interface: SST::Interfaces::SimpleNetwork
         NUM STATISTICS = 4
            STATISTIC 0 = packet_latency [Histogram of latencies for received packets] (latency) Enable level = 1
            STATISTIC 1 = send_bit_count [Count number of bits sent on link] (bits) Enable level = 1
            STATISTIC 2 = output_port_stalls [Time output port is stalled (in units of core timebase)] (time in stalls) Enable level = 1
            STATISTIC 3 = idle_time [Number of (in unites of core timebas) that port was idle] (time spent idle) Enable level = 1
         NUM PORTS = 1
            PORT 0 = rtr_port (Port that connects to router)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 10
            PARAMETER 0 = port_name (Port name to connect to.  Only used when loaded anonymously) []
            PARAMETER 1 = link_bw (Bandwidth of the links specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 2 = input_buf_size (Size of input buffers specified in b or B (can include SI prefix).) [<required>]
            PARAMETER 3 = output_buf_size (Size of output buffers specified in b or B (can include SI prefix).) [<required>]
            PARAMETER 4 = job_id (ID of the job this enpoint is part of.) []
            PARAMETER 5 = Job_size (Number of nodes in the job this endpoint is part of.) []
            PARAMETER 6 = logical_nid (My logical NID) []
            PARAMETER 7 = use_nid_remap (If true, will remap logical nids in job to physical ids) [false]
            PARAMETER 8 = nid_map_name (Base name of shared region where my NID map will be located.  If empty, no NID map will be used.) []
            PARAMETER 9 = vn_remap (Remap VNs onto/off of the network.  If empty, no vn remapping is done) []
    linkcontrol: Link Control module for building Merlin-enabled NICs
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:03:59, using file: interfaces/linkControl.h
      SubComponent 9: mesh
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = mesh:shape (Shape of the mesh specified as the number of routers in each dimension, where each dimension is separated by a colon.  For example, 4x4x2x2.  Any number of dimensions is supported.) [<required>]
            PARAMETER 1 = mesh:width (Number of links between routers in each dimension, specified in same manner as for shape.  For example, 2x2x1 denotes 2 links in the x and y dimensions and one in the z dimension.) [<required>]
            PARAMETER 2 = mesh:local_ports (Number of endpoints attached to each router.) [<required>]
            PARAMETER 3 = shape (Shape of the mesh specified as the number of routers in each dimension, where each dimension is separated by a colon.  For example, 4x4x2x2.  Any number of dimensions is supported.) [<required>]
            PARAMETER 4 = width (Number of links between routers in each dimension, specified in same manner as for shape.  For example, 2x2x1 denotes 2 links in the x and y dimensions and one in the z dimension.) [<required>]
            PARAMETER 5 = local_ports (Number of endpoints attached to each router.) [<required>]
    mesh: Multi-dimensional mesh topology object
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:02:09, using file: topology/mesh.h
      SubComponent 10: portcontrol
      Interface: SST::Merlin::PortInterface
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = inspector_slot (Network inspectors) [SST::Interfaces::SimpleNetwork::NetworkInspector]
            SUB COMPONENT SLOT 1 = arbitration (Arbitration unit to use for output) [SST::Merlin::OutputArbitration]
         NUM PARAMETERS = 15
            PARAMETER 0 = port_name (Port name to connect to.  Only used when loaded anonymously) []
            PARAMETER 1 = link_bw (Bandwidth of the links specified in either b/s or B/s (can include SI prefix).) [<required>]
            PARAMETER 2 = flit_size (Size of a flit in either b or B (can include SI prefix).) [<required>]
            PARAMETER 3 = input_latency () [0ns]
            PARAMETER 4 = output_latency () [0ns]
            PARAMETER 5 = input_buf_size (Size of input buffers specified in b or B (can include SI prefix).) [<required>]
            PARAMETER 6 = output_buf_size (Size of output buffers specified in b or B (can include SI prefix).) [<required>]
            PARAMETER 7 = network_inspectors (Comma separated list of network inspectors to put on output ports.) []
            PARAMETER 8 = dlink_thresh () [<required>]
            PARAMETER 9 = num_vns (Number of VNs set in router or python file (-1 if not set in the parent router).) [<required>]
            PARAMETER 10 = vn_remap_shm (Name of shared memory region for vn remapping.  If empty, no remapping is done) []
            PARAMETER 11 = vn_remap_shm_size (Size of shared memory region for vn remapping.  If empty, no remapping is done) [-1]
            PARAMETER 12 = oql_track_port () [<required>]
            PARAMETER 13 = oql_track_remote () [<required>]
            PARAMETER 14 = output_arb (Arbitration unit to be used for port output) [merlin.arb.output.basic]
    portcontrol: Port Control module for use by hr_router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:04:11, using file: interfaces/portControl.h
      SubComponent 11: reorderlinkcontrol
      Interface: SST::Interfaces::SimpleNetwork
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = rtr_port (Port that connects to router)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = networkIF (Network interface) [SST::Interfaces::SimpleNetwork]
         NUM PARAMETERS = 2
            PARAMETER 0 = rlc:networkIF (SimpleNetwork subcomponent to be used for connecting to network) [merlin.linkcontrol]
            PARAMETER 1 = networkIF (SimpleNetwork subcomponent to be used for connecting to network) [merlin.linkcontrol]
    reorderlinkcontrol: Link Control module that can handle out of order packet arrival. Events are sequenced and order is reconstructed on receive.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:04:25, using file: interfaces/reorderLinkControl.h
      SubComponent 12: singlerouter
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    singlerouter: Simple, single-router topology object
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:02:59, using file: topology/singlerouter.h
      SubComponent 13: targetgen.bit_complement
      Interface: SST::Merlin::TargetGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    targetgen.bit_complement: Generates a generalized bit complement pattern.  Returns the same value of num_peers - 1 - id.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:01:09, using file: ../../../../src/sst/elements/merlin/target_generator/bit_complement.h
      SubComponent 14: targetgen.uniform
      Interface: SST::Merlin::TargetGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = min (Minimum address to generate) [0]
            PARAMETER 1 = max (Maximum address to generate) [numpeers - 1]
    targetgen.uniform: Generates a uniform random set of target IDs.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:01:09, using file: ../../../../src/sst/elements/merlin/target_generator/uniform.h
      SubComponent 15: test_network_inspector
      Interface: SST::Interfaces::SimpleNetwork::NetworkInspector
         NUM STATISTICS = 1
            STATISTIC 0 = test_count [Count number of packets sent on link] (packets) Enable level = 1
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    test_network_inspector: Used to test NetworkInspector functionality.  Duplicates send_packet_count in hr_router.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:03:51, using file: inspectors/testInspector.h
      SubComponent 16: torus
      Interface: SST::Merlin::Topology
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = torus:shape (Shape of the torus specified as the number of routers in each dimension, where each dimension is separated by an x.  For example, 4x4x2x2.  Any number of dimensions is supported.) [<required>]
            PARAMETER 1 = torus:width (Number of links between routers in each dimension, specified in same manner as for shape.  For example, 2x2x1 denotes 2 links in the x and y dimensions and one in the z dimension.) [<required>]
            PARAMETER 2 = torus:local_ports (Number of endpoints attached to each router.) [<required>]
            PARAMETER 3 = shape (Shape of the torus specified as the number of routers in each dimension, where each dimension is separated by an x.  For example, 4x4x2x2.  Any number of dimensions is supported.) [<required>]
            PARAMETER 4 = width (Number of links between routers in each dimension, specified in same manner as for shape.  For example, 2x2x1 denotes 2 links in the x and y dimensions and one in the z dimension.) [<required>]
            PARAMETER 5 = local_ports (Number of endpoints attached to each router.) [<required>]
    torus: Multi-dimensional torus topology object
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:02:00, using file: topology/torus.h
      SubComponent 17: xbar_arb_age
      Interface: SST::Merlin::XbarArbitration
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    xbar_arb_age: Age based arbitration unit for hr_router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:27, using file: hr_router/xbar_arb_age.h
      SubComponent 18: xbar_arb_lru
      Interface: SST::Merlin::XbarArbitration
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    xbar_arb_lru: Least recently used arbitration unit for hr_router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:27, using file: hr_router/xbar_arb_lru.h
      SubComponent 19: xbar_arb_lru_infx
      Interface: SST::Merlin::XbarArbitration
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    xbar_arb_lru_infx: Least recently used arbitration unit with "infiinite crossbar" for hr_router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:27, using file: hr_router/xbar_arb_lru_infx.h
      SubComponent 20: xbar_arb_rand
      Interface: SST::Merlin::XbarArbitration
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    xbar_arb_rand: Random arbitration unit for hr_router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:27, using file: hr_router/xbar_arb_rand.h
      SubComponent 21: xbar_arb_rr
      Interface: SST::Merlin::XbarArbitration
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    xbar_arb_rr: Round robin arbitration unit for hr_router
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:27, using file: hr_router/xbar_arb_rr.h
Num Modules = 2
      Module 0: arb.base.single.lru
         NUM PARAMETERS = 0
    arb.base.single.lru: Base LRU module used when only one match per round is needed.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:27, using file: arbitration/single_arb_lru.h
      Module 1: arb.base.single.roundrobin
         NUM PARAMETERS = 0
    arb.base.single.roundrobin: Base round robin module used when only one match per round is needed.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:00:27, using file: arbitration/single_arb_rr.h
Num SSTPartitioners = 0
================================================================================
ELEMENT 14 = miranda ()
Num Components = 1
      Component 0: BaseCPU
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 17
            STATISTIC 0 = split_read_reqs [Number of read requests split over a cache line boundary] (requests) Enable level = 2
            STATISTIC 1 = split_write_reqs [Number of write requests split over a cache line boundary] (requests) Enable level = 2
            STATISTIC 2 = split_custom_reqs [NUmber of custom requests split over a cache line boundary] (requests) Enable level = 2
            STATISTIC 3 = read_reqs [Number of read requests issued] (requests) Enable level = 1
            STATISTIC 4 = write_reqs [Number of write requests issued] (requests) Enable level = 1
            STATISTIC 5 = custom_reqs [Number of custom requests issued] (requests) Enable level = 1
            STATISTIC 6 = total_bytes_read [Count the total bytes requested by read operations] (bytes) Enable level = 1
            STATISTIC 7 = total_bytes_write [Count the total bytes requested by write operations] (bytes) Enable level = 1
            STATISTIC 8 = total_bytes_custom [Count the total bytes requested by custom operations] (bytes) Enable level = 1
            STATISTIC 9 = req_latency [Running total of all latency for all requests] (ns) Enable level = 2
            STATISTIC 10 = cycles_with_issue [Number of cycles which CPU was able to issue requests] (cycles) Enable level = 1
            STATISTIC 11 = cycles_no_issue [Number of cycles which CPU was not able to issue requests] (cycles) Enable level = 1
            STATISTIC 12 = time [Nanoseconds spent issuing requests] (ns) Enable level = 1
            STATISTIC 13 = cycles_hit_fence [Number of issue cycles which stop issue at a fence] (cycles) Enable level = 2
            STATISTIC 14 = cycles_max_reorder [Number of issue cycles which hit maximum reorder lookup] (cycles) Enable level = 2
            STATISTIC 15 = cycles_max_issue [Cycles with maximum operation issue] (cycles) Enable level = 2
            STATISTIC 16 = cycles [Cycles executed] (cycles) Enable level = 1
         NUM PORTS = 2
            PORT 0 = cache_link (Link to Memory Controller)
            PORT 1 = src (Link to generator source)
         NUM SUBCOMPONENT SLOTS = 2
            SUB COMPONENT SLOT 0 = generator (What address generator to load) [SST::Miranda::RequestGenerator]
            SUB COMPONENT SLOT 1 = memory (The memory interface to use (e.g., interface to caches)) [SST::Interfaces::SimpleMem]
         NUM PARAMETERS = 12
            PARAMETER 0 = max_reqs_cycle (Maximum number of requests the CPU can issue per cycle (this is for all reads and writes)) [2]
            PARAMETER 1 = max_reorder_lookups (Maximum number of operations the CPU is allowed to lookup for memory reorder) [16]
            PARAMETER 2 = cache_line_size (The size of the cache line that this prefetcher is attached to, default is 64-bytes) [64]
            PARAMETER 3 = maxmemreqpending (Set the maximum number of requests allowed to be pending) [16]
            PARAMETER 4 = verbose (Sets the verbosity of output produced by the CPU) [0]
            PARAMETER 5 = generator (The generator to be loaded for address creation) [miranda.SingleStreamGenerator]
            PARAMETER 6 = clock (Clock for the base CPU) [2GHz]
            PARAMETER 7 = memoryinterface (Sets the memory interface module to use) [memHierarchy.memInterface]
            PARAMETER 8 = pagecount (Sets the number of pages the system can allocate) [4194304]
            PARAMETER 9 = pagesize (Sets the size of the page in the system, MUST be a multiple of cache_line_size) [4096]
            PARAMETER 10 = pagemap (Mapping scheme, string set to LINEAR or RANDOMIZED, default is LINEAR (virtual==physical), RANDOMIZED randomly shuffles virtual to physical map.) [LINEAR]
            PARAMETER 11 = pagemapname (Name of the shared memory region to keep page mapping in) [miranda]
    BaseCPU: Creates a base Miranda CPU ready to execute an address generator/access pattern
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:10, using file: mirandaCPU.h
Num SubComponents = 11
      SubComponent 0: CopyGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = read_start_address (Sets the start read address for this generator) [0]
            PARAMETER 1 = write_start_address (Sets the start target address for writes for the generator) [1024]
            PARAMETER 2 = request_size (Sets the size of each request in bytes) [8]
            PARAMETER 3 = request_count (Sets the number of items to be copied) [128]
            PARAMETER 4 = verbose (Sets the verbosity of the output) [0]
    CopyGenerator: Creates a single copy of stream of reads/writes replicating an array copy pattern
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/copygen.h
      SubComponent 1: EmptyGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    EmptyGenerator: Creates an empty (null) generator
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/nullgen.h
      SubComponent 2: GUPSGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = verbose (Sets the verbosity output of the generator) [0]
            PARAMETER 1 = seed_a (Sets the seed-a for the random generator) [11]
            PARAMETER 2 = seed_b (Sets the seed-b for the random generator) [31]
            PARAMETER 3 = count (Count for number of items being requested) [1024]
            PARAMETER 4 = length (Length of requests) [8]
            PARAMETER 5 = iterations (Number of iterations to perform) [1]
            PARAMETER 6 = max_address (Maximum address allowed for generation) [536870912]
            PARAMETER 7 = issue_op_fences (Issue operation fences, "yes" or "no", default is yes) [yes]
    GUPSGenerator: Creates a random stream of accesses to read-modify-write
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/gupsgen.h
      SubComponent 3: InOrderSTREAMBenchGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = verbose (Sets the verbosity output of the generator) [0]
            PARAMETER 1 = n (Sets the number of elements in the STREAM arrays) [10000]
            PARAMETER 2 = block_per_call (Sets the number of iterations to generate per call to the generation function) [1]
            PARAMETER 3 = operandwidth (Sets the length of the request, default=8 (i.e. one double)) [8]
            PARAMETER 4 = start_a (Sets the start address of the array a) [0]
            PARAMETER 5 = start_b (Sets the start address of the array b) [1024]
            PARAMETER 6 = start_c (Sets the start address of the array c) [2048]
    InOrderSTREAMBenchGenerator: Creates a representation of the STREAM benchmark for in-order CPUs
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/inorderstreambench.h
      SubComponent 4: RandomGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = verbose (Sets the verbosity output of the generator) [0]
            PARAMETER 1 = count (Count for number of items being requested) [1024]
            PARAMETER 2 = length (Length of requests) [8]
            PARAMETER 3 = max_address (Maximum address allowed for generation) [16384]
            PARAMETER 4 = issue_op_fences (Issue operation fences, "yes" or "no", default is yes) [yes]
    RandomGenerator: Creates a random stream of accesses to/from memory
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/randomgen.h
      SubComponent 5: ReverseSingleStreamGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = startat (Sets the start *index* for this generator) [2048]
            PARAMETER 1 = stopat (Sets the stop *index* for this generator, stop < start) [0]
            PARAMETER 2 = verbose (Sets the verbosity of the output) [0]
            PARAMETER 3 = datawidth (Sets the width of the memory operation) [8]
            PARAMETER 4 = stride (Sets the stride, since this is a reverse stream this is subtracted per iteration, def=1) [1]
    ReverseSingleStreamGenerator: Creates a single reverse ordering stream of accesses to/from memory
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/revsinglestream.h
      SubComponent 6: SPMVGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 13
            PARAMETER 0 = matrix_nx (Sets the horizontal dimension of the matrix) [10]
            PARAMETER 1 = matrix_ny (Sets the vertical dimension of the matrix (the number of rows)) [10]
            PARAMETER 2 = element_width (Sets the width of one matrix element, typically 8 for a double) [8]
            PARAMETER 3 = lhs_start_addr (Sets the start address of the LHS vector) [0]
            PARAMETER 4 = rhs_start_addr (Sets the start address of the RHS vector) [80]
            PARAMETER 5 = local_row_start (Sets the row at which this generator will start processing) [0]
            PARAMETER 6 = local_row_end (Sets the end at which rows will be processed by this generator) [10]
            PARAMETER 7 = ordinal_width (Sets the width of ordinals (indices) in the matrix, typically 4 or 8) [8]
            PARAMETER 8 = matrix_row_indices_start_addr (Sets the row indices start address for the matrix) [0]
            PARAMETER 9 = matrix_col_indices_start_addr (Sets the col indices start address for the matrix) [0]
            PARAMETER 10 = matrix_element_start_addr (Sets the start address of the elements array) [0]
            PARAMETER 11 = iterations (Sets the number of repeats to perform) [<required>]
            PARAMETER 12 = matrix_nnz_per_row (Sets the number of non-zero elements per row) [9]
    SPMVGenerator: Creates a diagonal matrix access pattern
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/spmvgen.h
      SubComponent 7: STREAMBenchGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = verbose (Sets the verbosity output of the generator) [0]
            PARAMETER 1 = n (Sets the number of elements in the STREAM arrays) [10000]
            PARAMETER 2 = n_per_call (Sets the number of iterations to generate per call to the generation function) [1]
            PARAMETER 3 = operandwidth (Sets the length of the request, default=8 (i.e. one double)) [8]
            PARAMETER 4 = start_a (Sets the start address of the array a) [0]
            PARAMETER 5 = start_b (Sets the start address of the array b) [1024]
            PARAMETER 6 = start_c (Sets the start address of the array c) [2048]
    STREAMBenchGenerator: Creates a representation of the STREAM benchmark
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/streambench.h
      SubComponent 8: STREAMBenchGeneratorCustomCmd
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 9
            PARAMETER 0 = verbose (Sets the verbosity output of the generator) [0]
            PARAMETER 1 = n (Sets the number of elements in the STREAM arrays) [10000]
            PARAMETER 2 = n_per_call (Sets the number of iterations to generate per call to the generation function) [1]
            PARAMETER 3 = operandwidth (Sets the length of the request, default=8 (i.e. one double)) [8]
            PARAMETER 4 = start_a (Sets the start address of the array a) [0]
            PARAMETER 5 = start_b (Sets the start address of the array b) [1024]
            PARAMETER 6 = start_c (Sets the start address of the array c) [2048]
            PARAMETER 7 = write_cmd (Sets the custom opcode for writes) [0xFFFF]
            PARAMETER 8 = read_cmd (Sets the custom opcode for reads) [0xFFFF]
    STREAMBenchGeneratorCustomCmd: Creates a representation of the STREAM benchmark using custom memory commands
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/streambench_customcmd.h
      SubComponent 9: SingleStreamGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = verbose (Sets the verbosity of the output) [0]
            PARAMETER 1 = count (Total number of requests) [1000]
            PARAMETER 2 = length (Sets the length of the request) [8]
            PARAMETER 3 = startat (Sets the start address of the array) [0]
            PARAMETER 4 = max_address (Maximum address allowed for generation) [524288]
            PARAMETER 5 = memOp (All reqeusts will be of this type, [Read/Write]) [Read]
    SingleStreamGenerator: Creates a single ordered stream of accesses to/from memory
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/singlestream.h
      SubComponent 10: Stencil3DBenchGenerator
      Interface: SST::Miranda::RequestGenerator
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = nx (Sets the dimensions of the problem space in X) [10]
            PARAMETER 1 = ny (Sets the dimensions of the problem space in Y) [10]
            PARAMETER 2 = nz (Sets the dimensions of the problem space in Z) [10]
            PARAMETER 3 = verbose (Sets the verbosity output of the generator) [0]
            PARAMETER 4 = datawidth (Sets the data width of the mesh element, typically 8 bytes for a double) [8]
            PARAMETER 5 = startz (Sets the start location in Z-plane for this instance, parallelism implemented as Z-plane decomposition) [0]
            PARAMETER 6 = endz (Sets the end location in Z-plane for this instance, parallelism implemented as Z-plane decomposition) [10]
            PARAMETER 7 = iterations (Sets the number of iterations to perform over this mesh) [1]
    Stencil3DBenchGenerator: Creates a representation of a 3D 27pt stencil benchmark
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:05:22, using file: generators/stencil3dbench.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 15 = prospero ()
Num Components = 1
      Component 0: prosperoCPU
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = cache_link (Link to the memHierarchy cache)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = memory (Interface to the memory hierarchy (e.g., cache)) [SST::Interfaces::SimpleMem]
         NUM PARAMETERS = 7
            PARAMETER 0 = verbose (Verbosity for debugging. Increased numbers for increased verbosity.) [0]
            PARAMETER 1 = cache_line_size (Sets the length of the cache line in bytes, this should match the L1 cache) [64]
            PARAMETER 2 = reader (The trace reader module to load) [prospero.ProsperoTextTraceReader]
            PARAMETER 3 = pagesize (Sets the page size for the Prospero simple virtual memory manager) [4096]
            PARAMETER 4 = clock (Sets the clock of the core) [2GHz]
            PARAMETER 5 = max_outstanding (Sets the maximum number of outstanding transactions that the memory system will allow) [16]
            PARAMETER 6 = max_issue_per_cycle (Sets the maximum number of new transactions that the system can issue per cycle) [2]
    prosperoCPU: Prospero CPU Memory Trace Replay Engine
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:07:19, using file: proscpu.h
Num SubComponents = 3
      SubComponent 0: ProsperoBinaryTraceReader
      Interface: SST::Prospero::ProsperoTraceReader
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = file (Sets the file for the trace reader to use) []
    ProsperoBinaryTraceReader: Binary Trace Reader
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:07:35, using file: prosbinaryreader.h
      SubComponent 1: ProsperoCompressedBinaryTraceReader
      Interface: SST::Prospero::ProsperoTraceReader
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = file (Sets the file for the trace reader to use) []
    ProsperoCompressedBinaryTraceReader: Compressed Binary Trace Reader
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:07:43, using file: prosbingzreader.h
      SubComponent 2: ProsperoTextTraceReader
      Interface: SST::Prospero::ProsperoTraceReader
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 1
            PARAMETER 0 = file (Sets the file for the trace reader to use) []
    ProsperoTextTraceReader: Text Trace Reader
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:07:28, using file: prostextreader.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 16 = scheduler ()
Num Components = 4
      Component 0: faultInjectionComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = faultInjector (Causes nodes to fail)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = faultInjectionFilename (File to use for fault injections) [<required>]
            PARAMETER 1 = injectionFrequency (Frequency with which injections occur) [<required>]
    faultInjectionComponent: Generates and injects failures from a flatfile
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:08:50, using file: faultInjectionComponent.h
      Component 1: linkBuilder
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    linkBuilder: Node Graph Link Modifier
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:09:05, using file: linkBuilder.h
      Component 2: nodeComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 6
            PORT 0 = Scheduler (Used to communicate with the scheduler)
            PORT 1 = nodeLink%(number of node)d (Each node has an associated port to send events)
            PORT 2 = faultInjector (Causes nodes to fail)
            PORT 3 = Builder (Link to communicate with parent)
            PORT 4 = Parent%(numparent)d (Link to communicate with parent)
            PORT 5 = Child%(numchild)d (Link to communicate with children)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 10
            PARAMETER 0 = nodeNum (The number of the node) [<required>]
            PARAMETER 1 = id (The id of the node) [<required>]
            PARAMETER 2 = type (The type of the node) [None]
            PARAMETER 3 = faultLogFileName (File to store the fault log) [None]
            PARAMETER 4 = errorLogFileName (File to store the error log) [None]
            PARAMETER 5 = faultActivationRate (CSV specifying the fault type and corresponding rates) [None]
            PARAMETER 6 = errorMessageProbability (error log is written according to this probability) [None]
            PARAMETER 7 = errorCorrectionProbability (Probability that a node corrects an error) [None]
            PARAMETER 8 = jobFailureProbability (Probability that a node ends a job when a failure propogates) [None]
            PARAMETER 9 = errorPropagationDelay (Time taken for a fault to travel) [None]
    nodeComponent: Implements nodes for use with schedComponent
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:09:05, using file: nodeComponent.h
      Component 3: schedComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = Scheduler (Used to communicate with the scheduler)
            PORT 1 = nodeLink%(number of node)d (Each node has an associated port to send events)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 25
            PARAMETER 0 = traceName (Name of the simulation trace file) [<required>]
            PARAMETER 1 = scheduler (Determines when jobs are run) [First in first out priority queue]
            PARAMETER 2 = machine (The geometry of the machine; how the nodes are laid out) [Simple machine]
            PARAMETER 3 = allocator (Assigns available nodes to each job) [Simple allocator]
            PARAMETER 4 = taskMapper (Assigns job tasks to allocated nodes) [Simple task mapper]
            PARAMETER 5 = FST (Metric to analyze scheduler in terms of social justice) [None]
            PARAMETER 6 = timeperdistance (How much the communication affects the running time) [None]
            PARAMETER 7 = faultSeed (PRNG seed for node faults) [Current time]
            PARAMETER 8 = seed (general PRNG seed for node faults) [Current time]
            PARAMETER 9 = errorLogSeed (PRNG seed for error log) [Current time]
            PARAMETER 10 = jobKillSeed (PRNG seed for job kill) [Current time]
            PARAMETER 11 = useYumYumSimulationKill (Simulation ends as the last job is finished being simulated) [False]
            PARAMETER 12 = YumYumPollWait (Frequency with which component polls the trace file ) [250]
            PARAMETER 13 = useYumYumTraceFormat (Should yumyum trace format be used) [False]
            PARAMETER 14 = printYumYumJobLog (Should yumyum job log be used) [False]
            PARAMETER 15 = printJobLog (Should job log be printed) [False]
            PARAMETER 16 = errorLatencySeed (PRNG seed for error latency for node failure) [Current time]
            PARAMETER 17 = errorCorrectionSeed (PRNG seed for probability an error is corrected) [Current time]
            PARAMETER 18 = jobLogFileName (Name for file to output job log) [REQUIRED if job log used]
            PARAMETER 19 = runningTimeSeed (RNG seed for running time deviation) [Current time]
            PARAMETER 20 = dMatrixFile (D_matrix input file) [none]
            PARAMETER 21 = coresPerNode (Number of cores per Node) [1]
            PARAMETER 22 = detailedNetworkSim (Detailed simulation of the network communication delay) [OFF]
            PARAMETER 23 = completedJobsTrace (A file that lists all jobs that has been completed in ember, needed for detailed network sim) [none]
            PARAMETER 24 = runningJobsTrace (A file that lists all jobs that are still running on ember, needed for detailed network sim) [none]
    schedComponent: Schedules and allocates nodes for jobs from a simulation file
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:08:40, using file: schedComponent.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 17 = serrano ()
Num Components = 1
      Component 0: Serrano
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    Serrano: High-Level CGRA Simulation Model
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:05, using file: serrano.h
Num SubComponents = 3
      SubComponent 0: SerranoBasicUnit
      Interface: SST::Serrano::SerranoCoarseUnit
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    SerranoBasicUnit: Basic coarse-grained functional unit for simple operations
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:05, using file: serstdunit.h
      SubComponent 1: SerranoIteratorUnit
      Interface: SST::Serrano::SerranoCoarseUnit
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = start (Value to start iterating at.) [<required>]
            PARAMETER 1 = end (Value to stop iterating at.) [<required>]
            PARAMETER 2 = step (Value to step the iteration with.) [<required>]
            PARAMETER 3 = data_type (Type of the iteration value) [<required>]
    SerranoIteratorUnit: Performs iteration-like behavior
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:05, using file: seriterunit.h
      SubComponent 2: SerranoPrinterUnit
      Interface: SST::Serrano::SerranoCoarseUnit
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    SerranoPrinterUnit: Performs printing of a value
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:05, using file: serprintunit.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 18 = shogun ()
Num Components = 1
      Component 0: ShogunXBar
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 5
            STATISTIC 0 = cycles_zero_events [Number of cycles where there were no events to process, x-bar was quiet] (cycles) Enable level = 1
            STATISTIC 1 = cycles_events [Number of cycles where events needed to be processed, x-bar may have been busy.] (cycles) Enable level = 1
            STATISTIC 2 = packets_moved [Number of packets moved each cycle] (packets) Enable level = 1
            STATISTIC 3 = output_packet_count [Number of communication packets which have been output] (packets) Enable level = 1
            STATISTIC 4 = input_packet_count [Number of communication packets which have been input] (packets) Enable level = 1
         NUM PORTS = 1
            PORT 0 = port%(port_count)d (Link to port X)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = verbose (Level of output verbosity, higher is more output, 0 is no output) [<required>]
            PARAMETER 1 = port_count (Number of ports on the Crossbar) [0]
            PARAMETER 2 = arbitration (Select the arbitration scheme) [roundrobin]
            PARAMETER 3 = clock (Clock Frequency for the crossbar) [1.0GHz]
            PARAMETER 4 = queue_slots (Depth of input queue) [64]
            PARAMETER 5 = in_msg_per_cycle (Number of messages injested per cycle; -1 is unlimited) [1]
            PARAMETER 6 = out_msg_per_cycle (Number of messages ejected per cycle; -1 is unlimited) [1]
    ShogunXBar: Shogun Arbitrated Crossbar Component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:16, using file: shogun.h
Num SubComponents = 1
      SubComponent 0: ShogunNIC
      Interface: SST::Interfaces::SimpleNetwork
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = port (Port into network)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = verbose (Level of output verbosity, higher is more output, 0 is no output) [0]
            PARAMETER 1 = port_name (If loaded anonymously, port to use (otherwise will use own port)) [port]
    ShogunNIC: Shogun X-Bar Interface for Memory Crossbars
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:25, using file: shogun_nic.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 19 = simpleElementExample ()
Num Components = 9
      Component 0: SubComponentLoader
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 1
            STATISTIC 0 = totalSent [# of total messages sent] () Enable level = 1
         NUM PORTS = 1
            PORT 0 = port%(num_subcomps)d (Sending or Receiving Port(s))
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = mySubComp (Test slot) [SST::SimpleSubComponent::SubCompInterface]
         NUM PARAMETERS = 3
            PARAMETER 0 = clock (Clock Rate) [1GHz]
            PARAMETER 1 = unnamed_subcomponent (Unnamed SubComponent to load.  If empty, then a named subcomponent is loaded) []
            PARAMETER 2 = num_subcomps (Number of anonymous SubComponents to load.  Ignored if using name SubComponents.) [1]
    SubComponentLoader: Demonstrates subcomponents
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:35, using file: simpleSubComponent.h
      Component 1: simpleClockerComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = clock (Clock frequency) [1GHz]
            PARAMETER 1 = clockcount (Number of clock ticks to execute) [100000]
    simpleClockerComponent: Clock Benchmark Component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:48, using file: simpleClockerComponent.h
      Component 2: simpleComponent
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 4
            PORT 0 = Nlink (Link to the simpleComponent to the North)
            PORT 1 = Slink (Link to the simpleComponent to the South)
            PORT 2 = Elink (Link to the simpleComponent to the East)
            PORT 3 = Wlink (Link to the simpleComponent to the West)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = workPerCycle (Count of busy work to do during a clock tick.) [<required>]
            PARAMETER 1 = commFreq (Approximate frequency of sending an event during a clock tick.) [<required>]
            PARAMETER 2 = commSize (Size of communication to send.) [16]
    simpleComponent: Simple Demo Component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:41, using file: simpleComponent.h
      Component 3: simpleDistribComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 8
            PARAMETER 0 = count (Number of random values to generate from the distribution) [1000]
            PARAMETER 1 = distrib (Random distribution to use - "gaussian" (or "normal"), or "exponential") [gaussian]
            PARAMETER 2 = mean (Mean value to use if we are sampling from the Gaussian/Normal distribution) [1.0]
            PARAMETER 3 = stddev (Standard deviation to use for the distribution) [0.2]
            PARAMETER 4 = lambda (Lambda value to use for the exponential distribution) [1.0]
            PARAMETER 5 = binresults (Print the results, only if value is "1") [1]
            PARAMETER 6 = probcount (Number of probabilities in discrete distribution) [<required>]
            PARAMETER 7 = prob%(probcount)d (Probability values for discrete distribution) [<required>]
    simpleDistribComponent: Random Number Distribution Component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:11:56, using file: simpleDistribComponent.h
      Component 4: simpleLookupTableComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = filename (Filename to load as the table) []
            PARAMETER 1 = num_entities (Number of entities in the sim) [1]
            PARAMETER 2 = myid (ID Number (0 <= myid < num_entities)) [0]
    simpleLookupTableComponent: Demonstrates using a Shared Lookup Table
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:27, using file: simpleLookupTableComponent.h
      Component 5: simpleMessageGeneratorComponent
      CATEGORY: NETWORK COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = remoteComponent (Sets the link for the message component, message components talk to each other exchanging simple messages)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 4
            PARAMETER 0 = printStats (Prints the statistics from the component) [0]
            PARAMETER 1 = clock (Sets the clock for the message generator) [1GHz]
            PARAMETER 2 = sendcount (Sets the number of sends in the simulation.) [1000]
            PARAMETER 3 = outputinfo (Sets the level of output information) [1]
    simpleMessageGeneratorComponent: Messaging rate benchmark component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:20, using file: simpleMessageGeneratorComponent.h
      Component 6: simpleParamComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 3
            PARAMETER 0 = int-param (Check for integer values) [-1]
            PARAMETER 1 = str-param (Check for string values) [test]
            PARAMETER 2 = bool-param (Check for bool values) [true]
    simpleParamComponent: Param Check Component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:52, using file: simpleParamComponent.h
      Component 7: simpleRNGComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 6
            PARAMETER 0 = seed_w (The seed to use for the random number generator) [7]
            PARAMETER 1 = seed_z (The seed to use for the random number generator) [5]
            PARAMETER 2 = seed (The seed to use for the random number generator.) [11]
            PARAMETER 3 = rng (The random number generator to use (Marsaglia or Mersenne), default is Mersenne) [Mersenne]
            PARAMETER 4 = count (The number of random numbers to generate, default is 1000) [1000]
            PARAMETER 5 = verbose (Sets the output verbosity of the component) [0]
    simpleRNGComponent: Random number generation component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:03, using file: simpleRNGComponent.h
      Component 8: simpleStatisticsComponent
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 6
            STATISTIC 0 = stat1_U32 [Test Statistic 1 - Collecting U32 Data] (units) Enable level = 1
            STATISTIC 1 = stat2_U64 [Test Statistic 2 - Collecting U64 Data] (units) Enable level = 2
            STATISTIC 2 = stat3_I32 [Test Statistic 3 - Collecting I32 Data] (units) Enable level = 3
            STATISTIC 3 = stat4_I64 [Test Statistic 4 - Collecting I64 Data] (units) Enable level = 4
            STATISTIC 4 = stat5_U32 [Test Statistic 5 - Collecting U32 Data] (units) Enable level = 5
            STATISTIC 5 = stat6_U64 [Test Statistic 6 - Collecting U64 Data] (units) Enable level = 6
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 5
            PARAMETER 0 = seed_w (The seed to use for the random number generator) [7]
            PARAMETER 1 = seed_z (The seed to use for the random number generator) [5]
            PARAMETER 2 = seed (The seed to use for the random number generator.) [11]
            PARAMETER 3 = rng (The random number generator to use (Marsaglia or Mersenne), default is Mersenne) [Mersenne]
            PARAMETER 4 = count (The number of random numbers to generate, default is 1000) [1000]
    simpleStatisticsComponent: Statistics Demo Component
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:10, using file: simpleStatisticsComponent.h
Num SubComponents = 4
      SubComponent 0: SubCompInterface
      Interface: SST::SimpleSubComponent::SubCompInterface
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    SubCompInterface: Default implementation of SubCompInterface
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:35, using file: simpleSubComponent.h
      SubComponent 1: SubCompReceiver
      Interface: SST::SimpleSubComponent::SubCompInterface
         NUM STATISTICS = 1
            STATISTIC 0 = numRecv [# of msgs recv] () Enable level = 1
         NUM PORTS = 1
            PORT 0 = recvPort (Receiving Port)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    SubCompReceiver: Receiving Subcomponent
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:35, using file: simpleSubComponent.h
      SubComponent 2: SubCompSender
      Interface: SST::SimpleSubComponent::SubCompInterface
         NUM STATISTICS = 1
            STATISTIC 0 = numSent [# of msgs sent] () Enable level = 1
         NUM PORTS = 1
            PORT 0 = sendPort (Sending Port)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = port_name (Name of port to connect to) []
            PARAMETER 1 = sendCount (Number of Messages to Send) [10]
    SubCompSender: Sending Subcomponent
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:35, using file: simpleSubComponent.h
      SubComponent 3: SubCompSlot
      Interface: SST::SimpleSubComponent::SubCompInterface
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = slot_port%(num_subcomps)d (Port(s) to send or receive on)
         NUM SUBCOMPONENT SLOTS = 1
            SUB COMPONENT SLOT 0 = mySubCompSlot (Test slot) [SST::SimpleSubComponent::SubCompInterface]
         NUM PARAMETERS = 3
            PARAMETER 0 = sendCount (Number of Messages to Send) [10]
            PARAMETER 1 = unnamed_subcomponent (Unnamed SubComponent to load.  If empty, then a named subcomponent is loaded) []
            PARAMETER 2 = num_subcomps (Number of anonymous SubComponents to load.  Ignored if using name SubComponents.) [1]
    SubCompSlot: Subcomponent which is just a wrapper for the actual SubComponent to be used
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:35, using file: simpleSubComponent.h
Num Modules = 1
      Module 0: SimpleModule
         NUM PARAMETERS = 1
            PARAMETER 0 = modulename (Name to give this module) []
    SimpleModule: Simple module to demonstrate interface.
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:12:46, using file: simpleModule.h
Num SSTPartitioners = 0
================================================================================
ELEMENT 20 = simpleSimulation ()
Num Components = 1
      Component 0: simpleCarWash
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 2
            PARAMETER 0 = clock (Clock frequency) [1GHz]
            PARAMETER 1 = clockcount (Number of clock ticks to execute) [100000]
    simpleCarWash: Simple Demo Componnent
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:13:01, using file: simpleCarWash.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 21 = thornhill ()
Num Components = 1
      Component 0: MemoryHeap
      CATEGORY: UNCATEGORIZED COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 1
            PORT 0 = detailed%(num_ports)d (Port connected to Memory Heap client)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    MemoryHeap: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:13:16, using file: memoryHeap.h
Num SubComponents = 2
      SubComponent 0: MemoryHeapLink
      Interface: SST::Thornhill::MemoryHeapLink
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    MemoryHeapLink: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 16:34:58, using file: ../../../../src/sst/elements/thornhill/memoryHeapLink.h
      SubComponent 1: SingleThread
      Interface: SST::Thornhill::SingleThread
         NUM STATISTICS = 0
         NUM PORTS = 0
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 0
    SingleThread: 
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:13:24, using file: singleThread.h
Num Modules = 0
Num SSTPartitioners = 0
================================================================================
ELEMENT 22 = zodiac ()
Num Components = 1
      Component 0: ZodiacSiriusTraceReader
      CATEGORY: PROCESSOR COMPONENT
         NUM STATISTICS = 0
         NUM PORTS = 2
            PORT 0 = nic (Network Interface port)
            PORT 1 = loop (Firefly Loopback port)
         NUM SUBCOMPONENT SLOTS = 0
         NUM PARAMETERS = 7
            PARAMETER 0 = trace (Set the trace file to be read in for this end point.) [<required>]
            PARAMETER 1 = os.module (Sets the messaging API to use for generation and handling of the message protocol) [<required>]
            PARAMETER 2 = scalecompute (Scale compute event times by a double precision value (allows dilation of times in traces), default is 1.0) [1.0]
            PARAMETER 3 = verbose (Sets the verbosity level for the component to output debug/information messages) [0]
            PARAMETER 4 = buffer (Sets the size of the buffer to use for message data backing, default is 4096 bytes) [4096]
            PARAMETER 5 = name (used internally) []
            PARAMETER 6 = module (used internally) []
    ZodiacSiriusTraceReader: SIRIUS MPI Trace Reader/Replay for Network Simulation
    Using ELI version 0.9.0
    Compiled on: Sep  3 2020 17:14:47, using file: zsirius.h
Num SubComponents = 0
Num Modules = 0
Num SSTPartitioners = 0
